<HTML>
<HEAD>
    <TITLE>Service Section TOC</TITLE>
    <LINK href="../style.css" rel="STYLESHEET" type="text/css">
    <SCRIPT LANGUAGE="JavaScript1.1">
<!-- begin hiding
var indentPixels = 15
var collapsedWidget = "../images/plus.gif"
var expandedWidget = "../images/minus.gif"
var endpointWidget = "../images/end.gif"
var widgetWidth = 17
var widgetHeight = 18
var displayTarget = "mainframe"
// AHJO - In the folowing db the fourth field (after the xml file name) is new and set to "0" 
var db = new Array()
 db[1] = new dbRecord(true, "Ce 200 And Ce 300 Bus Body Components","s47004_1.xml","0",0,"","YES")
 db[2] = new dbRecord(false, "Identification","s47004_2.xml","0",1,"","YES")
 db[3] = new dbRecord(true, "Description","s47004_3.xml","0",1,"","")
 db[4] = new dbRecord(false, "Vehicle Exterior ","s47004_3.xml","0",2,"","YES")
 db[5] = new dbRecord(false, "Reporting Safety Defects","s47004_4.xml","0",2,"","YES")
 db[6] = new dbRecord(false, "Front End","s47004_5.xml","0",2,"","YES")
 db[7] = new dbRecord(true, "Bus Body - Exterior","s47004_6.xml","0",2,"","")
 db[8] = new dbRecord(false, "Windshield, and Windshield Wipers","s47004_7.xml","0",3,"","YES")
 db[9] = new dbRecord(false, "Rear View Mirrors","s47004_8.xml","0",3,"","YES")
 db[10] = new dbRecord(false, "Passenger Entry Door","s47004_9.xml","0",3,"","YES")
 db[11] = new dbRecord(false, "Vandal Lock","s47004_10.xml","0",3,"","YES")
 db[12] = new dbRecord(false, "Front Warning Lights","s47004_11.xml","0",3,"","YES")
 db[13] = new dbRecord(false, "D.O.T. Lights and Reflectors","s47004_12.xml","0",3,"","YES")
 db[14] = new dbRecord(false, "Assist Steps","s47004_13.xml","0",3,"","YES")
 db[15] = new dbRecord(false, "Fuel Fill","s47004_14.xml","0",3,"","YES")
 db[16] = new dbRecord(false, "Emergency Exit Doors","s47004_15.xml","0",3,"","YES")
 db[17] = new dbRecord(false, "Emergency Exit Windows","s47004_16.xml","0",3,"","YES")
 db[18] = new dbRecord(false, "Passenger Windows","s47004_17.xml","0",3,"","YES")
 db[19] = new dbRecord(false, "Roof Mounted Escape Hatch","s47004_18.xml","0",3,"","YES")
 db[20] = new dbRecord(false, "Rear Bumper Assembly","s47004_19.xml","0",3,"","YES")
 db[21] = new dbRecord(false, "Rear Body Exterior Lights","s47004_20.xml","0",3,"","YES")
 db[22] = new dbRecord(false, "Side Traffic Stop Arm","s47004_21.xml","0",3,"","YES")
 db[23] = new dbRecord(false, "Under Body Compartments","s47004_22.xml","0",3,"","YES")
 db[24] = new dbRecord(false, "Electrical Compartment","s47004_23.xml","0",3,"","YES")
 db[25] = new dbRecord(false, "Battery Compartment","s47004_24.xml","0",3,"","YES")
 db[26] = new dbRecord(false, "Radio Antenna","s47004_25.xml","0",3,"","YES")
 db[27] = new dbRecord(false, "Chair Lift Door and Chair Lift","s47004_26.xml","0",3,"","YES")
 db[28] = new dbRecord(false, "Roof Mounted Strobe Light (Optional)","s47004_27.xml","0",3,"","YES")
 db[29] = new dbRecord(false, "Transition Panels","s47004_28.xml","0",3,"","YES")
 db[30] = new dbRecord(false, "End Caps","s47004_29.xml","0",3,"","YES")
 db[31] = new dbRecord(false, "Windshield- 3 Piece","s47004_30.xml","0",3,"","YES")
 db[32] = new dbRecord(false, "Driver Side Window","s47004_31.xml","0",3,"","YES")
 db[33] = new dbRecord(false, "Driver Side Storm Glass Windows","s47004_32.xml","0",3,"","YES")
 db[34] = new dbRecord(false, "Static Roof Vents","s47004_33.xml","0",3,"","YES")
 db[35] = new dbRecord(false, "Mud Guards","s47004_34.xml","0",3,"","YES")
 db[36] = new dbRecord(false, "Rear Wheel Rubber Fenderettes ","s47004_35.xml","0",3,"","YES")
 db[37] = new dbRecord(false, "Body Tie Down Bolts and Assemblies","s47004_36.xml","0",3,"","YES")
 db[38] = new dbRecord(true, "Bus Body - Interior","s47004_37.xml","0",2,"","")
 db[39] = new dbRecord(false, "Step Well","s47004_38.xml","0",3,"","YES")
 db[40] = new dbRecord(false, "Assist Rails","s47004_39.xml","0",3,"","YES")
 db[41] = new dbRecord(false, "Step Well Heater","s47004_40.xml","0",3,"","YES")
 db[42] = new dbRecord(false, "Crash Barriers","s47004_41.xml","0",3,"","YES")
 db[43] = new dbRecord(false, "Fire Extinguisher","s47004_42.xml","0",3,"","YES")
 db[44] = new dbRecord(false, "Driver Controls / Instrument Panel","s47004_43.xml","0",3,"","YES")
 db[45] = new dbRecord(false, "Driver Side Sliding Window","s47004_44.xml","0",3,"","YES")
 db[46] = new dbRecord(false, "Driver Side Storm Window Assembly (Optional)","s47004_45.xml","0",3,"","YES")
 db[47] = new dbRecord(false, "Driver Seat","s47004_46.xml","0",3,"","YES")
 db[48] = new dbRecord(false, "Heater and Defroster","s47004_47.xml","0",3,"","YES")
 db[49] = new dbRecord(false, "Light Bars","s47004_48.xml","0",3,"","YES")
 db[50] = new dbRecord(false, "Flooring","s47004_49.xml","0",3,"","YES")
 db[51] = new dbRecord(false, "Seats and Seating","s47004_50.xml","0",3,"","YES")
 db[52] = new dbRecord(false, "Windows","s47004_51.xml","0",3,"","YES")
 db[53] = new dbRecord(false, "Emergency Exit Door Lower Glass Protection Screen","s47004_52.xml","0",3,"","YES")
 db[54] = new dbRecord(false, "Emergency Exit Latches and Alarms","s47004_53.xml","0",3,"","YES")
 db[55] = new dbRecord(false, "Exterior Light Monitor (Optional)","s47004_54.xml","0",3,"","YES")
 db[56] = new dbRecord(false, "Safety Equipment- Reflective Road Triangles","s47004_55.xml","0",3,"","YES")
 db[57] = new dbRecord(false, "Seat Tracks","s47004_56.xml","0",3,"","YES")
 db[58] = new dbRecord(false, "Wheelchair Access Door and Chair Lift","s47004_57.xml","0",3,"","YES")
 db[59] = new dbRecord(false, "Wheelchair Access Door Assembly","s47004_58.xml","0",3,"","YES")
 db[60] = new dbRecord(false, "Fuel Sender Access Panel","s47004_59.xml","0",3,"","YES")
 db[61] = new dbRecord(false, "Miscellaneous Options","s47004_60.xml","0",3,"","YES")
 db[62] = new dbRecord(false, "First Aid Kit","s47004_61.xml","0",3,"","YES")
 db[63] = new dbRecord(false, "Body Fluid Clean-up Kit (Optional)","s47004_62.xml","0",3,"","YES")
 db[64] = new dbRecord(false, "Windshield Defroster Fan (Optional)","s47004_63.xml","0",3,"","YES")
 db[65] = new dbRecord(false, "Driver Side Interior Rear View Mirror and Sun Visor","s47004_64.xml","0",3,"","YES")
 db[66] = new dbRecord(false, "Manual Door Opener","s47004_65.xml","0",3,"","YES")
 db[67] = new dbRecord(true, "Remove","s47004_66.xml","0",1,"","YES")
 db[68] = new dbRecord(true, "Exterior Body Component - remove","s47004_67.xml","0",2,"","YES")
 db[69] = new dbRecord(false, "Windshield Wiper Drive Arm Removal","s47004_68.xml","0",3,"","YES")
 db[70] = new dbRecord(false, "Windshield Removal","s47004_69.xml","0",3,"","YES")
 db[71] = new dbRecord(false, "Rear View Mirror- Driver Side","s47004_70.xml","0",3,"","YES")
 db[72] = new dbRecord(false, "Rear View Mirror- Passenger Side","s47004_71.xml","0",3,"","YES")
 db[73] = new dbRecord(false, "Front Warning Lights","s47004_72.xml","0",3,"","YES")
 db[74] = new dbRecord(false, "Destination Sign Lighted (Optional)","s47004_73.xml","0",3,"","YES")
 db[75] = new dbRecord(false, "D.O.T. Lights and Reflectors","s47004_74.xml","0",3,"","YES")
 db[76] = new dbRecord(false, "Vandal Lock","s47004_75.xml","0",3,"","YES")
 db[77] = new dbRecord(false, "Assist Steps","s47004_76.xml","0",3,"","YES")
 db[78] = new dbRecord(false, "Passenger Entry Door","s47004_77.xml","0",3,"","YES")
 db[79] = new dbRecord(false, "Fuel Fill","s47004_78.xml","0",3,"","YES")
 db[80] = new dbRecord(false, "Passenger Windows and Emergency Exit Windows","s47004_79.xml","0",3,"","YES")
 db[81] = new dbRecord(false, "Emergency Exit Doors ","s47004_80.xml","0",3,"","YES")
 db[82] = new dbRecord(false, "Roof Mounted Escape Hatch","s47004_81.xml","0",3,"","YES")
 db[83] = new dbRecord(false, "Wheelchair Access Door","s47004_82.xml","0",3,"","YES")
 db[84] = new dbRecord(false, "Rear Bumper Assembly","s47004_83.xml","0",3,"","YES")
 db[85] = new dbRecord(false, "Rear Body Exterior Lights and Warning Lights","s47004_84.xml","0",3,"","YES")
 db[86] = new dbRecord(false, "Street Side Stop Signs","s47004_85.xml","0",3,"","YES")
 db[87] = new dbRecord(false, "Rubber Fenderettes","s47004_86.xml","0",3,"","YES")
 db[88] = new dbRecord(false, "Under Body Compartments","s47004_87.xml","0",3,"","YES")
 db[89] = new dbRecord(false, "Electrical Compartment","s47004_88.xml","0",3,"","YES")
 db[90] = new dbRecord(false, "Battery Compartment","s47004_89.xml","0",3,"","YES")
 db[91] = new dbRecord(false, "Radio Antenna","s47004_90.xml","0",3,"","YES")
 db[92] = new dbRecord(false, "Transition Panels","s47004_91.xml","0",3,"","YES")
 db[93] = new dbRecord(false, "End Caps","s47004_92.xml","0",3,"","YES")
 db[94] = new dbRecord(false, "Optional Warning Lights","s47004_93.xml","0",3,"","YES")
 db[95] = new dbRecord(false, "Body Attachment","s47004_94.xml","0",3,"","YES")
 db[96] = new dbRecord(false, "Static Roof Vents","s47004_95.xml","0",3,"","YES")
 db[97] = new dbRecord(false, "Mud Guards","s47004_96.xml","0",3,"","YES")
 db[98] = new dbRecord(true, "Interior Body Components - remove","s47004_97.xml","0",2,"","YES")
 db[99] = new dbRecord(false, "Step Well Tread Plates","s47004_98.xml","0",3,"","YES")
 db[100] = new dbRecord(false, "Step Well Assembly-Removal","s47004_99.xml","0",3,"","YES")
 db[101] = new dbRecord(false, "Assist Handrails","s47004_100.xml","0",3,"","YES")
 db[102] = new dbRecord(false, "Defroster Fans (Optional)","s47004_101.xml","0",3,"","YES")
 db[103] = new dbRecord(false, "Sun Visor","s47004_102.xml","0",3,"","YES")
 db[104] = new dbRecord(false, "Destination Board Lights (Optional)","s47004_103.xml","0",3,"","YES")
 db[105] = new dbRecord(false, "Interior Rear View Mirror","s47004_104.xml","0",3,"","YES")
 db[106] = new dbRecord(false, "Dash Board Panels, Cluster and Switch Panels","s47004_105.xml","0",3,"","YES")
 db[107] = new dbRecord(false, "Driver Side Sliding Window Assembly","s47004_106.xml","0",3,"","YES")
 db[108] = new dbRecord(false, "Driver Seat","s47004_107.xml","0",3,"","YES")
 db[109] = new dbRecord(false, "Driver Seat Belts","s47004_108.xml","0",3,"","YES")
 db[110] = new dbRecord(false, "Fire Extinguisher","s47004_109.xml","0",3,"","YES")
 db[111] = new dbRecord(false, "Driver Seat Bulkhead / Passenger Crash Barrier","s47004_110.xml","0",3,"","YES")
 db[112] = new dbRecord(false, "Passenger Door Control Panel- Electric","s47004_111.xml","0",3,"","YES")
 db[113] = new dbRecord(false, "Passenger Door Removal","s47004_112.xml","0",3,"","YES")
 db[114] = new dbRecord(false, "Air Operated Door Opener (Optional)","s47004_113.xml","0",3,"","YES")
 db[115] = new dbRecord(false, "Bus Interior Light Bars","s47004_114.xml","0",3,"","YES")
 db[116] = new dbRecord(false, "Seats and Seating Removal","s47004_115.xml","0",3,"","YES")
 db[117] = new dbRecord(false, "Seat Tracks (Optional)","s47004_116.xml","0",3,"","YES")
 db[118] = new dbRecord(false, "Seat Belts- Two Point (Optional)","s47004_117.xml","0",3,"","YES")
 db[119] = new dbRecord(false, "Passenger Windows","s47004_118.xml","0",3,"","YES")
 db[120] = new dbRecord(false, "Emergency Window Exits","s47004_119.xml","0",3,"","YES")
 db[121] = new dbRecord(false, "Stationary Glass Removal","s47004_120.xml","0",3,"","YES")
 db[122] = new dbRecord(false, "Emergency Window Exit Alarms ","s47004_121.xml","0",3,"","YES")
 db[123] = new dbRecord(false, "Emergency Exit Doors, Buzzers and Latches","s47004_122.xml","0",3,"","YES")
 db[124] = new dbRecord(false, "Wheelchair Lift (Optional)","s47004_123.xml","0",3,"","YES")
 db[125] = new dbRecord(false, "Wheelchair Floor Plates","s47004_124.xml","0",3,"","YES")
 db[126] = new dbRecord(false, "Wheelchair Seat Belts and Shoulder Harness","s47004_125.xml","0",3,"","YES")
 db[127] = new dbRecord(false, "Rear Door Glass Protection Screen","s47004_126.xml","0",3,"","YES")
 db[128] = new dbRecord(false, "Safety Equipment - Required","s47004_127.xml","0",3,"","YES")
 db[129] = new dbRecord(false, "Safety Equipment - Optional","s47004_128.xml","0",3,"","YES")
 db[130] = new dbRecord(false, "Exterior Light Monitor","s47004_129.xml","0",3,"","YES")
 db[131] = new dbRecord(false, "Fuel Sender Access Hatch ","s47004_130.xml","0",3,"","YES")
 db[132] = new dbRecord(false, "Flooring","s47004_131.xml","0",3,"","YES")
 db[133] = new dbRecord(false, "Plywood Sub-Flooring","s47004_132.xml","0",3,"","YES")
 db[134] = new dbRecord(true, "Install","s47004_133.xml","0",1,"","")
 db[135] = new dbRecord(false, "Exterior Body Components","s47004_134.xml","0",2,"","YES")
 db[136] = new dbRecord(false, "Interior Install","s47004_135.xml","0",2,"","YES")
 db[137] = new dbRecord(true, "Maintenance","s47004_136.xml","0",1,"","")
 db[138] = new dbRecord(false, "Heaters and Accessories","s47004_137.xml","0",2,"","YES")
 db[139] = new dbRecord(true, "Exterior Body Repair ","s47004_138.xml","0",1,"","YES")
 db[140] = new dbRecord(false, "Remove","s47004_139.xml","0",2,"","YES")
 db[141] = new dbRecord(false, "Install","s47004_140.xml","0",2,"","YES")
 db[142] = new dbRecord(false, "Service Procedure","s47004_141.xml","0",2,"","YES")
 db[143] = new dbRecord(false, "Windshield wiper Drive System","s47004_142.xml","0",1,"","YES")
 db[144] = new dbRecord(true, "Paint and Finish","s47004_143.xml","0",1,"","YES")
 db[145] = new dbRecord(false, "Touch Up and Paint Procedure","s47004_143.xml","0",2,"","YES")
 db[146] = new dbRecord(false, "Lettering and Decals","s47004_144.xml","0",1,"","YES")
 db[147] = new dbRecord(true, "cHARTS AND TABLES","s47004_145.xml","0",1,"","")
 db[148] = new dbRecord(false, "Component inspection intervals","s47004_145.xml","0",2,"","YES")
 db[149] = new dbRecord(false, "Torque Charts","s47004_146.xml","0",2,"","YES")
// AHJO - In the following function the parameter 'occurs' was added Oct/Nov 2001
function dbRecord(mother,display,URL,occurs,indent,statusMsg,link){
	this.mother = mother   // is this item a parent?
	this.display = display // text to display
	this.URL = URL         // used to link to TOC
	this.occurances =  occurs  // how many times does search occur - THIS LINE WAS ADDED by AHJO
	this.indent = indent   // how many levels nested?
	this.statusMsg = statusMsg  // descriptive text for status bar 
	this.link = link  //  link tied to text; if empty string, item appears as straight text
	return this
}
// pre-load all images into cache
var collapsedImg = new Image(widgetWidth,widgetHeight)
collapsedImg.src = collapsedWidget
var expandedImg = new Image(widgetWidth,widgetHeight)
expandedImg.src = expandedWidget
var endpointImg = new Image(widgetWidth,widgetHeight)
endpointImg.src = endpointWidget
// mainframeURL = parent.mainframe.document.URL // get URL of mainframe 
// ** functions that get and set persistent cookie data **
// set cookie data
var mycookie = document.cookie
function setCurrState(setting) {
        mycookie = document.cookie = "currState=" + escape(setting)
}
// retrieve cookie data
function getCurrState() {
        var label = "currState="
        var labelLen = label.length
        var cLen = mycookie.length
        var i = 0
        while (i < cLen) {
                var j = i + labelLen
                if (mycookie.substring(i,j) == label) {
                        var cEnd = mycookie.indexOf(";",j)
                        if (cEnd ==     -1) {
                                cEnd = mycookie.length
                       }
                        return unescape(mycookie.substring(j,cEnd))
                }
               i++
       }
        return ""
}
// **function that updates persistent storage of state**
// toggles an outline mother entry, storing new value in the cookie
function toggle(n) {
	if (n != 0) {
		var newString = ""
		var currState = getCurrState() // of whole outline
		var expanded = currState.charAt(n-1) // of clicked item
		newString += currState.substring(0,n-1)
		newString += expanded ^ 1 // Bitwise XOR clicked item
		newString += currState.substring(n,currState.length)
		setCurrState(newString) // write new state back to cookie
	}
}
// **functions used in assembling updated outline**
// returns the proper GIF file name for each entry's control
function getGIF(n) {
	var mom = db[n].mother  // is entry a parent?
	var expanded = getCurrState().charAt(n-1) // of clicked item
	if (!mom) {
		return endpointWidget
	} else {
		if (expanded == 1) {
			return expandedWidget
		}
	}
	return collapsedWidget
}
// returns the proper status line text based on the icon style
function getGIFStatus(n) {
	var mom = db[n].mother  // is entry a parent
	var expanded = getCurrState().charAt(n-1) // of rolled item
	if (!mom) {
		return "No further items"
	} else {
		if (expanded == 1) {
			return "Click to collapse nested items"
		}
	}
	return "Click to expand nested items"
}
// initialize 'current state' storage field
if (getCurrState() == "" || getCurrState().length != (db.length-1)) {
	initState = ""
	for (i = 1; i < db.length; i++) {
		initState += "0"
	}
	setCurrState(initState)
}
// end -->

    </SCRIPT>
</HEAD>
<BODY>
<SCRIPT LANGUAGE="JavaScript1.1">
<!-- start
// build new outline based on the values of the cookie
// and data points in the outline data array.
// This fires each time the user clicks on a control,
// because the HREF for each one reloads the current document.
var newOutline = ""
var prevIndentDisplayed = 0
var showMyDaughter = 0
// cycle through each entry in the outline array
for (var i = 1; i < db.length; i++) {
	var theGIF = getGIF(i)				// get the image
	var theGIFStatus = getGIFStatus(i)  // get the status message
	var currIndent = db[i].indent		// get the indent level
	var expanded = getCurrState().charAt(i-1) // current state
        db[i].currentrow = ""

	if (currIndent == 0 || currIndent == 1 || db[i].currentrow == "currentrow" || currIndent <= prevIndentDisplayed || (showMyDaughter == 1 && (currIndent - prevIndentDisplayed == 1))) {
 // Phil added the if to remove the image from before the root element
         if (currIndent != 0) {
			newOutline += "<SPAN class=\"" + db[i].currentrow + "\" style=\" position:relative;left:" + (indentPixels * currIndent) + "px;width:200px\"><A HREF=\"javascript:history.go(0)\" onMouseOver=\"window.status=\'" + theGIFStatus + "\';return true;\" onClick=\"toggle(" + i + ");return " + "\">"
			newOutline += "<IMG ALIGN=TOP SRC=\"" + theGIF + "\" HEIGHT=" + widgetHeight + " WIDTH=" + widgetWidth + " BORDER=0></A>"
			newOutline += "<SPAN title=\"" + db[i].display + "\" style=\"width:" + (200-widgetWidth) + "px\">"
			}
			if (db[i].link == "" || db[i].link == null) {
				newOutline += " <small'>" +  db[i].display + "</small></SPAN></SPAN>" + "<BR>"	// no link, just a listed item
			} else {
                 if (db[i].occurances > 0)	{
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><small>" + db[i].display + "&nbsp;&nbsp;("
 + db[i].occurances + ")</small></A></SPAN></SPAN><BR>"
			} else {
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><small'>" + db[i].display + "</small></A></SPAN></SPAN><BR>"
			}
			}
		prevIndentDisplayed = currIndent
		showMyDaughter = expanded
		if (db.length > 25) {
			document.write(newOutline)
			newOutline = ""
		}
	}
}
document.write(newOutline)
// end -->

</SCRIPT>
</BODY>
</html>
