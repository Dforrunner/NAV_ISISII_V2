<HTML>
<HEAD>
    <TITLE>Service Section TOC</TITLE>
    <LINK href="../style.css" rel="STYLESHEET" type="text/css">
    <SCRIPT LANGUAGE="JavaScript1.1">
<!-- begin hiding
var indentPixels = 15
var collapsedWidget = "../images/plus.gif"
var expandedWidget = "../images/minus.gif"
var endpointWidget = "../images/end.gif"
var widgetWidth = 17
var widgetHeight = 18
var displayTarget = "mainframe"
// AHJO - In the folowing db the fourth field (after the xml file name) is new and set to "0" 
var db = new Array()
 db[1] = new dbRecord(true, "BE, CE Bus Starting March, 2004 - ELECTRICAL CIRCUIT DIAGRAMS","s08291_1.xml","0",0,"","YES")
 db[2] = new dbRecord(true, "BE, CE Bus Chassis Circuit Diagrams","s08291_S08291A.xml","0",0,"","YES")
 db[3] = new dbRecord(true, "INSTRUCTIONS AND CHARTS (Chapter 1)","s08291_3.xml","0",1,"","")
 db[4] = new dbRecord(false, "Circuit Number Identification Chart, p. 1","s08291_3.xml","0",2,"","YES")
 db[5] = new dbRecord(false, "Circuit Number Identification Chart, p. 2","s08291_4.xml","0",2,"","YES")
 db[6] = new dbRecord(false, "Circuit Number Identification Chart, p. 3","s08291_5.xml","0",2,"","YES")
 db[7] = new dbRecord(false, "Circuit Number Identification Chart, p. 4","s08291_6.xml","0",2,"","YES")
 db[8] = new dbRecord(false, "Circuit Number Identification Chart, p. 5","s08291_7.xml","0",2,"","YES")
 db[9] = new dbRecord(false, "Circuit Diagram Instructions, p. 6","s08291_8.xml","0",2,"","YES")
 db[10] = new dbRecord(false, "Circuit Number Identification and Location, p. 7","s08291_9.xml","0",2,"","YES")
 db[11] = new dbRecord(false, "Schematic Symbol Chart, p. 8","s08291_10.xml","0",2,"","YES")
 db[12] = new dbRecord(false, "Circuit Number Identification and Location, p. 9","s08291_11.xml","0",2,"","YES")
 db[13] = new dbRecord(false, "Lamp Bulb Chart, p. 10","s08291_12.xml","0",2,"","YES")
 db[14] = new dbRecord(true, "12 VOLT POWER DISTRIBUTION and Data Link (Chapter 2)","s08291_13.xml","0",1,"","")
 db[15] = new dbRecord(false, "Accessory, p. 1","s08291_13.xml","0",2,"","YES")
 db[16] = new dbRecord(false, "Battery, p. 2","s08291_14.xml","0",2,"","YES")
 db[17] = new dbRecord(false, "Ignition, p. 3","s08291_15.xml","0",2,"","YES")
 db[18] = new dbRecord(false, "Ignition, p. 4","s08291_16.xml","0",2,"","YES")
 db[19] = new dbRecord(false, "Ground, p. 5","s08291_17.xml","0",2,"","YES")
 db[20] = new dbRecord(false, "Drivetrain J1939 Data Link (Cab), p. 6","s08291_18.xml","0",2,"","YES")
 db[21] = new dbRecord(false, "Drivetrain J1939 Data Link (Chassis), p. 7","s08291_19.xml","0",2,"","YES")
 db[22] = new dbRecord(false, "J1708 Data Link Diagnostic, p. 8","s08291_20.xml","0",2,"","YES")
 db[23] = new dbRecord(false, "Diagnostics and Programmable Connector, p. 9","s08291_21.xml","0",2,"","YES")
 db[24] = new dbRecord(false, "J1708 Datalink Diagnostic W/ABS6, p. 10","s08291_22.xml","0",2,"","YES")
 db[25] = new dbRecord(false, "Drivetrain J1939 Datalink W/ABS6, W/LCT, W/WTEC XMSN, p. 11","s08291_23.xml","0",2,"","YES")
 db[26] = new dbRecord(false, "Drivetrain J1939 Datalink W/ABS6, W/Ammeter, W/LCT, W/WTEC XMSN, p. 12","s08291_24.xml","0",2,"","YES")
 db[27] = new dbRecord(false, "Drivetrain J1939 Datalink W/ABS6, W/Allison Gen IV, W/Manual XMSN, p. 13","s08291_25.xml","0",2,"","YES")
 db[28] = new dbRecord(false, "Drivetrain J1939 Datalink W/ABS6, W/Ammeter, W/Allison Gen IV, p. 14","s08291_26.xml","0",2,"","YES")
 db[29] = new dbRecord(true, "12V Charging and Cranking System (Chapter 3)","s08291_27.xml","0",1,"","")
 db[30] = new dbRecord(false, "Key Switch Start Circuit, p. 1","s08291_27.xml","0",2,"","YES")
 db[31] = new dbRecord(false, "Charging and Cranking, p. 2","s08291_28.xml","0",2,"","YES")
 db[32] = new dbRecord(true, "Cab Accessories (Chapter 4)","s08291_29.xml","0",1,"","")
 db[33] = new dbRecord(false, "Horn, Dual Electric, p. 1","s08291_29.xml","0",2,"","YES")
 db[34] = new dbRecord(false, "Steering Wheel Switches, p. 2","s08291_30.xml","0",2,"","YES")
 db[35] = new dbRecord(false, "Switch Packs, p. 3","s08291_31.xml","0",2,"","YES")
 db[36] = new dbRecord(false, "Windshield Wiper and Washer Systems, p. 4","s08291_32.xml","0",2,"","YES")
 db[37] = new dbRecord(false, "Driver's Air Conditioning, p. 5","s08291_33.xml","0",2,"","YES")
 db[38] = new dbRecord(true, "Engine Electronics (Chapter 5)","s08291_34.xml","0",1,"","")
 db[39] = new dbRecord(false, "Electronic Engine Controls - V8 Engine, p. 1","s08291_34.xml","0",2,"","YES")
 db[40] = new dbRecord(false, "Electronic Engine Controls - I6 Engine, p. 2","s08291_35.xml","0",2,"","YES")
 db[41] = new dbRecord(false, "I6 Fan and Shutter Wiring, p. 3","s08291_36.xml","0",2,"","YES")
 db[42] = new dbRecord(false, "V8 Fan and Shutter Wiring, p. 4","s08291_37.xml","0",2,"","YES")
 db[43] = new dbRecord(false, "V8 Fan and Shutter Wiring, p. 5","s08291_38.xml","0",2,"","YES")
 db[44] = new dbRecord(true, "GAuges and Warning Lights (Chapter 6)","s08291_39.xml","0",1,"","")
 db[45] = new dbRecord(false, "IP Gauges, p. 1","s08291_39.xml","0",2,"","YES")
 db[46] = new dbRecord(false, "Warning Lights, p. 2","s08291_40.xml","0",2,"","YES")
 db[47] = new dbRecord(false, "Warning Lights Controlled by Engine, Transmission, ABS Controllers, p. 3","s08291_41.xml","0",2,"","YES")
 db[48] = new dbRecord(false, "Eng. Oil Press. and Temp., Speedometer, Tach., Voltmeter and Water Temp. Gauge Circuits, p. 4","s08291_42.xml","0",2,"","YES")
 db[49] = new dbRecord(false, "Gauges and Warning Lights - Instrument Cluster, p. 5","s08291_43.xml","0",2,"","YES")
 db[50] = new dbRecord(false, "Gauges and Warning Lights - Ammeter, p. 6","s08291_44.xml","0",2,"","YES")
 db[51] = new dbRecord(false, "Gauges and Warning Lights - Coolant Tank Level, p. 7","s08291_45.xml","0",2,"","YES")
 db[52] = new dbRecord(false, "Gauges and Warning Lights - Fuel Gauge with Air Brake Chassis, p. 8","s08291_46.xml","0",2,"","YES")
 db[53] = new dbRecord(false, "Gauges and Warning Lights - Fuel Gauge with Hydraulic Brake Chassis, p. 9","s08291_47.xml","0",2,"","YES")
 db[54] = new dbRecord(false, "Gauges and Warning Lights - Park Brake Light, p. 10","s08291_48.xml","0",2,"","YES")
 db[55] = new dbRecord(false, "Gauges and Warning Lights - Air Pressure Input Circuit and Zero Volt Reference Splice, p. 11","s08291_49.xml","0",2,"","YES")
 db[56] = new dbRecord(false, "Gauges and Warning Lights - Change Transmission Filter Light, p. 12","s08291_50.xml","0",2,"","YES")
 db[57] = new dbRecord(true, "Chassis Accessories (Chapter 7)","s08291_51.xml","0",1,"","")
 db[58] = new dbRecord(false, "Air Dryer and Drain Valve, p. 1","s08291_51.xml","0",2,"","YES")
 db[59] = new dbRecord(false, "Fuel Filter Wiring System, p. 2","s08291_52.xml","0",2,"","YES")
 db[60] = new dbRecord(false, "Air Park Brake Interlock, p. 3","s08291_53.xml","0",2,"","YES")
 db[61] = new dbRecord(false, "Park Brake / Shifter Interlock - with LCT Transmission only, p. 4","s08291_54.xml","0",2,"","YES")
 db[62] = new dbRecord(false, "Antilock Brake System (ABS), Air, p. 5","s08291_55.xml","0",2,"","YES")
 db[63] = new dbRecord(false, "Antilock Brake System (ABS), Air, p. 6","s08291_56.xml","0",2,"","YES")
 db[64] = new dbRecord(false, "Air Solenoid Module, p. 7","s08291_57.xml","0",2,"","YES")
 db[65] = new dbRecord(false, "Hydraulic Antilock Brakes, p. 8","s08291_58.xml","0",2,"","YES")
 db[66] = new dbRecord(false, "Hydraulic Antilock Brakes, p. 9","s08291_59.xml","0",2,"","YES")
 db[67] = new dbRecord(false, "Hydraulic Antilock Brakes, p. 10","s08291_60.xml","0",2,"","YES")
 db[68] = new dbRecord(false, "Allison WTEC MD Transmission, p. 11","s08291_61.xml","0",2,"","YES")
 db[69] = new dbRecord(false, "Allison WTEC MD Transmission, p. 12","s08291_62.xml","0",2,"","YES")
 db[70] = new dbRecord(false, "Allison WTEC MD Transmission, p. 13","s08291_63.xml","0",2,"","YES")
 db[71] = new dbRecord(false, "Allison LCT Transmission, p. 14","s08291_64.xml","0",2,"","YES")
 db[72] = new dbRecord(false, "Crossing Gate, p. 15","s08291_65.xml","0",2,"","YES")
 db[73] = new dbRecord(false, "Brake Monitor, p. 16","s08291_66.xml","0",2,"","YES")
 db[74] = new dbRecord(false, "Manual Transmission, p. 17","s08291_67.xml","0",2,"","YES")
 db[75] = new dbRecord(false, "Two Speed Axle, p. 18","s08291_68.xml","0",2,"","YES")
 db[76] = new dbRecord(false, "Chassis Accessories W/ABS6 - Bendix Air - ECU Pin Out, p. 19","s08291_69.xml","0",2,"","YES")
 db[77] = new dbRecord(false, "Chassis Accessories W/ABS6 - Bendix Air - ECU Pin Out, p. 20","s08291_70.xml","0",2,"","YES")
 db[78] = new dbRecord(false, "Chassis Accessories W/ABS6 - Bendix Air ECM Power, p. 21","s08291_71.xml","0",2,"","YES")
 db[79] = new dbRecord(true, "Light Systems (Chapter 8)","s08291_72.xml","0",1,"","")
 db[80] = new dbRecord(false, "Back-Up Lights / Exterior Light Check, p. 1","s08291_72.xml","0",2,"","YES")
 db[81] = new dbRecord(false, "Fog Lights, p. 2","s08291_73.xml","0",2,"","YES")
 db[82] = new dbRecord(false, "High Beam, Flash to Pass, Turn Signal, and Air Brake Stop Switches, p. 3","s08291_74.xml","0",2,"","YES")
 db[83] = new dbRecord(false, "Headlights, Marker, Park, Turn, and Stop Relay - Without Fender Mount Lights, p. 4","s08291_75.xml","0",2,"","YES")
 db[84] = new dbRecord(false, "Headlights, Marker, Park, Turn, and Stop Relay - With Fender Mount Lights, p. 5","s08291_76.xml","0",2,"","YES")
 db[85] = new dbRecord(false, "Export Stop, Turn, Tail and Back-Up Lights, p. 6","s08291_77.xml","0",2,"","YES")
 db[86] = new dbRecord(true, "Body Builder Connection Data (Chapter 9)","s08291_78.xml","0",1,"","")
 db[87] = new dbRecord(false, "Body Builder Electrical Connection Data for All Models, p. 1","s08291_78.xml","0",2,"","YES")
 db[88] = new dbRecord(false, "Body Builder Electrical Connection Data for CE Model, p. 2","s08291_79.xml","0",2,"","YES")
 db[89] = new dbRecord(false, "Body Builder Electrical Connection Data for CE Model, p. 2A","s08291_80.xml","0",2,"","YES")
 db[90] = new dbRecord(false, "Stop Arm and Red / Amber Lights, p. 3","s08291_81.xml","0",2,"","YES")
 db[91] = new dbRecord(false, "Emergency Exit Buzzer and Post Trip Inspection, p. 4","s08291_82.xml","0",2,"","YES")
 db[92] = new dbRecord(false, "Door Open / Close with Elec. Control, p. 5","s08291_83.xml","0",2,"","YES")
 db[93] = new dbRecord(false, "Door Open / Close with Air Control for CE Model, p. 6","s08291_84.xml","0",2,"","YES")
 db[94] = new dbRecord(false, "WheelChair Lift Interlock, p. 7","s08291_85.xml","0",2,"","YES")
 db[95] = new dbRecord(false, "Flasher Switches for CE Model, p. 8","s08291_86.xml","0",2,"","YES")
 db[96] = new dbRecord(false, "Park Brake Status, p. 9","s08291_87.xml","0",2,"","YES")
 db[97] = new dbRecord(false, "Dual Wiper Motors for PT / Mexico and Export Models, p. 10","s08291_88.xml","0",2,"","YES")
 db[98] = new dbRecord(false, "Mexico and Export Bus Windshield Washer Pump, p. 11","s08291_89.xml","0",2,"","YES")
 db[99] = new dbRecord(false, "CE Bus Redundant Door Controls, p. 12","s08291_90.xml","0",2,"","YES")
 db[100] = new dbRecord(false, "Manual Door for CE Bus, p. 13","s08291_91.xml","0",2,"","YES")
 db[101] = new dbRecord(true, "CONNECTOR COMPOSITES (Chapter 10)","s08291_92.xml","0",1,"","")
 db[102] = new dbRecord(false, "Connector Composites (701), (702), (1002), (1003), (1004), (1005), p. 1","s08291_92.xml","0",2,"","YES")
 db[103] = new dbRecord(false, "Connector Composites (1006), (1007), (1008F), (1008M), (1009), (1010), (1012), p. 2","s08291_93.xml","0",2,"","YES")
 db[104] = new dbRecord(false, "Connector Composite (1011), p. 3","s08291_94.xml","0",2,"","YES")
 db[105] = new dbRecord(false, "Connector Composite (1011) Fuse / Circuit Breaker Chart, p. 4","s08291_95.xml","0",2,"","YES")
 db[106] = new dbRecord(false, "Connector Composites (1011), (1013), (1014) Fuse Block Connections, p. 5","s08291_96.xml","0",2,"","YES")
 db[107] = new dbRecord(false, "Connector Composites (1015), (1016), (1017), (1018), (1019), (1020), (1021), (1023), p. 6","s08291_97.xml","0",2,"","YES")
 db[108] = new dbRecord(false, "Connector Composites (1100), (1101), (1104), (1105), (1106), (1107), (1107F), (1108), p. 7","s08291_98.xml","0",2,"","YES")
 db[109] = new dbRecord(false, "Connector Composites (1400), (1401), (1402), (1403), (1404), (1500), (1501), (1555), p. 8","s08291_99.xml","0",2,"","YES")
 db[110] = new dbRecord(false, "Connector Composites (1600), (1601), (1602), (1603), p. 9","s08291_100.xml","0",2,"","YES")
 db[111] = new dbRecord(false, "Connector Composites (1604), (1650), (1657), (1804), (1807), (1808), (1809), p. 10","s08291_101.xml","0",2,"","YES")
 db[112] = new dbRecord(false, "Connector Composites (1810), (1811), (1812), (1823), (1824), (1828), (1829), (1830), p. 11","s08291_102.xml","0",2,"","YES")
 db[113] = new dbRecord(false, "Connector Composites (4003), (4005), (4006), (4009), (4010), (4011), p. 12","s08291_103.xml","0",2,"","YES")
 db[114] = new dbRecord(false, "Connector Composite (4013M), p. 13","s08291_104.xml","0",2,"","YES")
 db[115] = new dbRecord(false, "Connector Composite (4013), p. 14","s08291_105.xml","0",2,"","YES")
 db[116] = new dbRecord(false, "Connector Composite (4014), p. 15","s08291_106.xml","0",2,"","YES")
 db[117] = new dbRecord(false, "Connector Composite (4014M), p. 16","s08291_107.xml","0",2,"","YES")
 db[118] = new dbRecord(false, "Connector Composites (4016), (4017), (4018), (4019), (4020), (4034), (4036), p. 17","s08291_108.xml","0",2,"","YES")
 db[119] = new dbRecord(false, "Connector Composites (4039), (4040), (4041), (4046), (4087), p. 18","s08291_109.xml","0",2,"","YES")
 db[120] = new dbRecord(false, "Connector Composites (4301), (4302), (4303), (4500), p. 19","s08291_110.xml","0",2,"","YES")
 db[121] = new dbRecord(false, "Connector Composite (4705), p. 20","s08291_111.xml","0",2,"","YES")
 db[122] = new dbRecord(false, "Connector Composites (4705M), (4905), (6011), p. 21","s08291_112.xml","0",2,"","YES")
 db[123] = new dbRecord(false, "Connector Composites (6020), (6021), p. 22","s08291_113.xml","0",2,"","YES")
 db[124] = new dbRecord(false, "Connector Composites (6316), (6323F), (6323M), (6332F), (6332M), (6333M), (6350), p. 23","s08291_114.xml","0",2,"","YES")
 db[125] = new dbRecord(false, "Connector Composites (6400), (6407), (6703), (6708), p. 24","s08291_115.xml","0",2,"","YES")
 db[126] = new dbRecord(false, "Connector Composites (6709), (6715), (7104M), (7104F), (7104FA), p. 25","s08291_116.xml","0",2,"","YES")
 db[127] = new dbRecord(false, "Connector Composite (7150), p. 25A","s08291_117.xml","0",2,"","YES")
 db[128] = new dbRecord(false, "Connector Composites (7200), (7202), p. 26","s08291_118.xml","0",2,"","YES")
 db[129] = new dbRecord(false, "Connector Composites (7203), (7204), p. 27","s08291_119.xml","0",2,"","YES")
 db[130] = new dbRecord(false, "Connector Composites (7250), (7300), (7303), p. 28","s08291_120.xml","0",2,"","YES")
 db[131] = new dbRecord(false, "Connector Composites (7304), (7305), (7500), p. 29","s08291_121.xml","0",2,"","YES")
 db[132] = new dbRecord(false, "Connector Composites (7350), (7500), p. 29A","s08291_122.xml","0",2,"","YES")
 db[133] = new dbRecord(false, "Connector Composites (7600), (7601), (7603), (7604), (7605), (7607), (7701), (8000), p. 30","s08291_123.xml","0",2,"","YES")
 db[134] = new dbRecord(false, "Connector Composites (8000F), (8001), (8001F), (8002R), (8002L), (8003), p. 31","s08291_124.xml","0",2,"","YES")
 db[135] = new dbRecord(false, "Connector Composites (8003), (8100R), (8100L), (8152R), (8152L), (8155R), (8155L), p. 32","s08291_125.xml","0",2,"","YES")
 db[136] = new dbRecord(false, "Connector Composites (8310), (8311), (8450), (9100), p. 33","s08291_126.xml","0",2,"","YES")
 db[137] = new dbRecord(false, "Connector Composites (9101), (9254), (9255), (9257), (9258), (9260), (9261), p. 34","s08291_127.xml","0",2,"","YES")
 db[138] = new dbRecord(false, "Connector Composites (9261), (9262F), (9262M), (9301), (9500M), p. 35","s08291_128.xml","0",2,"","YES")
 db[139] = new dbRecord(false, "Connector Composites (9500F), (9500M), (9501), p. 36","s08291_129.xml","0",2,"","YES")
 db[140] = new dbRecord(false, "Connector Composites (9503), (9506), (9507), (9508), (9510), (9511), p. 37","s08291_130.xml","0",2,"","YES")
 db[141] = new dbRecord(false, "Connector Composites (9512), (9513F), (9513M), (9514), p. 38","s08291_131.xml","0",2,"","YES")
 db[142] = new dbRecord(false, "Connector Composites  (9515), (9516), (9517), (9518), (9519), (9520), (9521), (9522), p. 39","s08291_132.xml","0",2,"","YES")
 db[143] = new dbRecord(false, "Connector Composites (9523F), (9523M), (9524), (9526), p. 40","s08291_133.xml","0",2,"","YES")
 db[144] = new dbRecord(false, "Connector Composites (9527), (9530), (9532F), (9532M), (9533), (9534), (9535), (9536), p. 41","s08291_134.xml","0",2,"","YES")
 db[145] = new dbRecord(false, "Connector Composites (9537M), (9537F), (9538), (9539), (9540), (9541M), p. 42","s08291_135.xml","0",2,"","YES")
 db[146] = new dbRecord(false, "Connector Composites (9541M), (9541F), (9736), (9737), (9777), (9778), (9801), p. 43","s08291_136.xml","0",2,"","YES")
 db[147] = new dbRecord(true, "BE, CE Bus Body Circuit Diagrams","s08291_S08291B.xml","0",0,"","YES")
 db[148] = new dbRecord(true, "Abbreviations, Symbols, Components and Wire Charts (Chapter 1)","s08291_138.xml","0",1,"","")
 db[149] = new dbRecord(false, "Abbreviations and Symbols","s08291_138.xml","0",2,"","YES")
 db[150] = new dbRecord(false, "Electrical Components","s08291_139.xml","0",2,"","YES")
 db[151] = new dbRecord(false, "Electrical Components","s08291_140.xml","0",2,"","YES")
 db[152] = new dbRecord(false, "Electrical Components","s08291_141.xml","0",2,"","YES")
 db[153] = new dbRecord(false, "Electrical Components","s08291_142.xml","0",2,"","YES")
 db[154] = new dbRecord(false, "Electrical Components","s08291_143.xml","0",2,"","YES")
 db[155] = new dbRecord(false, "Wire Reference of Gauge, Color, and Circuit # (Black)","s08291_144.xml","0",2,"","YES")
 db[156] = new dbRecord(false, "Wire Reference of Gauge, Color, and Circuit # (Blue)","s08291_145.xml","0",2,"","YES")
 db[157] = new dbRecord(false, "Wire Reference of Gauge, Color, and Circuit # (Brown)","s08291_146.xml","0",2,"","YES")
 db[158] = new dbRecord(false, "Wire Reference of Gauge, Color, and Circuit # (Gray)","s08291_147.xml","0",2,"","YES")
 db[159] = new dbRecord(false, "Wire Reference of Gauge, Color, and Circuit # (Green)","s08291_148.xml","0",2,"","YES")
 db[160] = new dbRecord(false, "Wire Reference of Gauge, Color, and Circuit # (Orange)","s08291_149.xml","0",2,"","YES")
 db[161] = new dbRecord(false, "Wire Reference of Gauge, Color, and Circuit # (Pink)","s08291_150.xml","0",2,"","YES")
 db[162] = new dbRecord(false, "Wire Reference of Gauge, Color, and Circuit # (Red)","s08291_151.xml","0",2,"","YES")
 db[163] = new dbRecord(false, "Wire Reference of Gauge, Color, and Circuit # (Violet)","s08291_152.xml","0",2,"","YES")
 db[164] = new dbRecord(false, "Wire Reference of Gauge, Color, and Circuit # (White)","s08291_153.xml","0",2,"","YES")
 db[165] = new dbRecord(false, "Wire Reference of Gauge, Color, and Circuit # (Yellow)","s08291_154.xml","0",2,"","YES")
 db[166] = new dbRecord(true, "POWER DISTRIBUTION (Chapter 2)","s08291_155.xml","0",1,"","")
 db[167] = new dbRecord(false, "All Circuits Hot All the Time","s08291_155.xml","0",2,"","YES")
 db[168] = new dbRecord(false, "Ignition Operated Master Disconnect","s08291_156.xml","0",2,"","YES")
 db[169] = new dbRecord(false, "Rocker Switch Operated Master Disconnect","s08291_157.xml","0",2,"","YES")
 db[170] = new dbRecord(false, "W/Ign Act Mstr Disc Rocker Sw Act Noise Kill Disc","s08291_158.xml","0",2,"","YES")
 db[171] = new dbRecord(false, "W/150 Amp Circuit Breaker and Noise Kill Switch","s08291_159.xml","0",2,"","YES")
 db[172] = new dbRecord(false, "Fuse Block P1","s08291_160.xml","0",2,"","YES")
 db[173] = new dbRecord(false, "Fuse Block P2","s08291_161.xml","0",2,"","YES")
 db[174] = new dbRecord(false, "Fuse Block P3","s08291_162.xml","0",2,"","YES")
 db[175] = new dbRecord(false, "Rocker Switch Activated Noise Kill Disconnect","s08291_163.xml","0",2,"","YES")
 db[176] = new dbRecord(true, "Warning Light Systems (Chapter 3)","s08291_164.xml","0",1,"","")
 db[177] = new dbRecord(false, "Warning Lights - Built Prior to January 2004","s08291_164.xml","0",2,"","YES")
 db[178] = new dbRecord(false, "Warning Lights - Built January 2004 to Present","s08291_165.xml","0",2,"","YES")
 db[179] = new dbRecord(false, "Ohio Hot All the Time Override","s08291_166.xml","0",2,"","YES")
 db[180] = new dbRecord(false, "Hot All the Time Override with Manual Door","s08291_167.xml","0",2,"","YES")
 db[181] = new dbRecord(false, "Warning Lights with Left Hand Rocker Switch","s08291_168.xml","0",2,"","YES")
 db[182] = new dbRecord(false, "Warning Lights with Right Hand Rocker Switch","s08291_169.xml","0",2,"","YES")
 db[183] = new dbRecord(false, "Warning Lights Omit Master Flasher Switch with Steering Wheel Warning Lights","s08291_170.xml","0",2,"","YES")
 db[184] = new dbRecord(false, "Warning Lights with Master Flasher Switch with Steering Wheel Switches","s08291_171.xml","0",2,"","YES")
 db[185] = new dbRecord(false, "Virginia Warning Lights with Rocker Switches","s08291_172.xml","0",2,"","YES")
 db[186] = new dbRecord(false, "Florida Warning Lights with Rocker Switches","s08291_173.xml","0",2,"","YES")
 db[187] = new dbRecord(false, "Maryland Warning Lights with Right Hand Rocker Switches","s08291_174.xml","0",2,"","YES")
 db[188] = new dbRecord(false, "Warning Light Indicator Lamps in Right Switch Panel","s08291_175.xml","0",2,"","YES")
 db[189] = new dbRecord(false, "Always Hot Override Rocker Switch","s08291_176.xml","0",2,"","YES")
 db[190] = new dbRecord(false, "Red Warning Lights Activated by Lift Door","s08291_177.xml","0",2,"","YES")
 db[191] = new dbRecord(true, "Stop Arm - Crossing Gate (Chapter 4)","s08291_178.xml","0",1,"","")
 db[192] = new dbRecord(false, "Stop Arm - Electric (Front / Rear)","s08291_178.xml","0",2,"","YES")
 db[193] = new dbRecord(false, "Stop Arm - Air (Front / Rear)","s08291_179.xml","0",2,"","YES")
 db[194] = new dbRecord(false, "Stop Arm Cancel","s08291_180.xml","0",2,"","YES")
 db[195] = new dbRecord(false, "Single Cycle Crossing Gate Inhibit 49AAZ","s08291_181.xml","0",2,"","YES")
 db[196] = new dbRecord(true, "Entrance Door Controls (Chapter 5)","s08291_182.xml","0",1,"","")
 db[197] = new dbRecord(false, "Air Door with Dump Valve","s08291_182.xml","0",2,"","YES")
 db[198] = new dbRecord(false, "Electric Door with Vandal Lock","s08291_183.xml","0",2,"","YES")
 db[199] = new dbRecord(false, "Manual Door Control","s08291_184.xml","0",2,"","YES")
 db[200] = new dbRecord(false, "Electric Door with Redundant Door Control","s08291_185.xml","0",2,"","YES")
 db[201] = new dbRecord(false, "Air Door with Dump Valve with Redundant Door Control","s08291_186.xml","0",2,"","YES")
 db[202] = new dbRecord(false, "Left Alternate Entrance Air","s08291_187.xml","0",2,"","YES")
 db[203] = new dbRecord(false, "Vandal Lock for Air Entrance Door","s08291_188.xml","0",2,"","YES")
 db[204] = new dbRecord(false, "2-Position Rotary Door Control Switch","s08291_189.xml","0",2,"","YES")
 db[205] = new dbRecord(false, "3-Position Rotary Door Control Switch - Non Sequential System","s08291_190.xml","0",2,"","YES")
 db[206] = new dbRecord(false, "3-Position Rotary Door Control Switch - Sequential System","s08291_191.xml","0",2,"","YES")
 db[207] = new dbRecord(false, "Air Door with Dump Valve Switch Outside and Overhead","s08291_192.xml","0",2,"","YES")
 db[208] = new dbRecord(true, "Noise Kill (Chapter 6)","s08291_193.xml","0",1,"","")
 db[209] = new dbRecord(false, "Driver's Heater with Defrost Heater","s08291_193.xml","0",2,"","YES")
 db[210] = new dbRecord(false, "Bottom Step Heater","s08291_194.xml","0",2,"","YES")
 db[211] = new dbRecord(false, "Power Vent, FR / RR","s08291_195.xml","0",2,"","YES")
 db[212] = new dbRecord(false, "Stepwell Heater Fan","s08291_196.xml","0",2,"","YES")
 db[213] = new dbRecord(false, "Midship Aux Heater, LH - Single Switch","s08291_197.xml","0",2,"","YES")
 db[214] = new dbRecord(false, "Midship Aux Heater, LH - Dual Switch","s08291_198.xml","0",2,"","YES")
 db[215] = new dbRecord(false, "Midship Aux Heater, RH - Single Switch","s08291_199.xml","0",2,"","YES")
 db[216] = new dbRecord(false, "Midship Aux Heater, RH - Dual Switch","s08291_200.xml","0",2,"","YES")
 db[217] = new dbRecord(false, "Rear Aux Heater, LH - Single Switch","s08291_201.xml","0",2,"","YES")
 db[218] = new dbRecord(false, "Rear Aux Heater, LH - Dual Switch","s08291_202.xml","0",2,"","YES")
 db[219] = new dbRecord(false, "Rear Aux Heater, RH - Single Switch","s08291_203.xml","0",2,"","YES")
 db[220] = new dbRecord(false, "Rear Aux Heater, RH - Dual Switch","s08291_204.xml","0",2,"","YES")
 db[221] = new dbRecord(false, "Stepwell Heater Fan Wired to Defrost Switch","s08291_205.xml","0",2,"","YES")
 db[222] = new dbRecord(false, "Left Defog Fan Diagram","s08291_206.xml","0",2,"","YES")
 db[223] = new dbRecord(false, "Right of Center Defog Fan Diagram","s08291_207.xml","0",2,"","YES")
 db[224] = new dbRecord(false, "Far Right Defog Fan Diagram","s08291_208.xml","0",2,"","YES")
 db[225] = new dbRecord(false, "Far Left and Left of Center Defog Fan Diagram","s08291_209.xml","0",2,"","YES")
 db[226] = new dbRecord(false, "Radio Dash Mounted","s08291_210.xml","0",2,"","YES")
 db[227] = new dbRecord(false, "Radio Mounted Overhead","s08291_211.xml","0",2,"","YES")
 db[228] = new dbRecord(false, "Convection Heater","s08291_212.xml","0",2,"","YES")
 db[229] = new dbRecord(true, "Interior Lighting (Chapter 7)","s08291_213.xml","0",1,"","")
 db[230] = new dbRecord(false, "Dome Lights LH/RH Sides Single Switch","s08291_213.xml","0",2,"","YES")
 db[231] = new dbRecord(false, "Front-Rear Dome Lights","s08291_214.xml","0",2,"","YES")
 db[232] = new dbRecord(false, "Dome Lights Left - Right on Separate Switch","s08291_215.xml","0",2,"","YES")
 db[233] = new dbRecord(false, "Back-Up Lights with Alarm","s08291_216.xml","0",2,"","YES")
 db[234] = new dbRecord(false, "Activity Light, Left or Right Side","s08291_217.xml","0",2,"","YES")
 db[235] = new dbRecord(false, "Dome Lights Activated by Any Emergency Exit","s08291_218.xml","0",2,"","YES")
 db[236] = new dbRecord(false, "Dome Lights Activated by Rocker Switch or Rear Emergency Exit Door","s08291_219.xml","0",2,"","YES")
 db[237] = new dbRecord(false, "Switch Illumination","s08291_220.xml","0",2,"","YES")
 db[238] = new dbRecord(false, "Switch Illumination with Separate Dimmer Switch","s08291_221.xml","0",2,"","YES")
 db[239] = new dbRecord(false, "Last Dome Lights LH/RH Sides","s08291_222.xml","0",2,"","YES")
 db[240] = new dbRecord(false, "Rear Row Dome Lights LH/RH Sides","s08291_223.xml","0",2,"","YES")
 db[241] = new dbRecord(false, "Engine Compartment Light Tied to Clearance Lights","s08291_224.xml","0",2,"","YES")
 db[242] = new dbRecord(false, "Dome Lights Controlled by Rheostat","s08291_225.xml","0",2,"","YES")
 db[243] = new dbRecord(false, "Step and Skirt Light","s08291_226.xml","0",2,"","YES")
 db[244] = new dbRecord(false, "Dome Lts and Buzzer Activated by Any Emer Exit w/Separate Dome Light Switch","s08291_227.xml","0",2,"","YES")
 db[245] = new dbRecord(false, "Dome Lights Activated by Entrance Door","s08291_228.xml","0",2,"","YES")
 db[246] = new dbRecord(true, "Exterior Lighting (Chapter 8)","s08291_229.xml","0",1,"","")
 db[247] = new dbRecord(false, "Tail Lights / Brake Lights - Built Prior to February 2004","s08291_229.xml","0",2,"","YES")
 db[248] = new dbRecord(false, "Destination Signs, FR/RR","s08291_230.xml","0",2,"","YES")
 db[249] = new dbRecord(false, "Luggage Box Lights","s08291_231.xml","0",2,"","YES")
 db[250] = new dbRecord(false, "Strobe Light","s08291_232.xml","0",2,"","YES")
 db[251] = new dbRecord(false, "Turn Signals - Front, Side and Rear - Built Prior to February 2004","s08291_233.xml","0",2,"","YES")
 db[252] = new dbRecord(false, "Clearance Lights","s08291_234.xml","0",2,"","YES")
 db[253] = new dbRecord(false, "8 Lamp Monitor","s08291_235.xml","0",2,"","YES")
 db[254] = new dbRecord(false, "12 - 16 Lamp Monitor","s08291_236.xml","0",2,"","YES")
 db[255] = new dbRecord(false, "Turn Signals - Front, Side and Rear - Built February 2004 to Present","s08291_237.xml","0",2,"","YES")
 db[256] = new dbRecord(false, "Back-Up Lights Activated by Rear Door 49ABE","s08291_238.xml","0",2,"","YES")
 db[257] = new dbRecord(false, "Tail Lights / Brake Lights - Built February 2004 to Present","s08291_239.xml","0",2,"","YES")
 db[258] = new dbRecord(false, "Back-Up Lights Activated by Rear Door After 4-12-2004","s08291_240.xml","0",2,"","YES")
 db[259] = new dbRecord(false, "Strobe Light Activated by Amber and Red Warning Lights or Rocker Switch","s08291_241.xml","0",2,"","YES")
 db[260] = new dbRecord(false, "Strobe Light Activated by Red Only Warning Lights","s08291_242.xml","0",2,"","YES")
 db[261] = new dbRecord(false, "Strobe Light Activated by Ignition","s08291_243.xml","0",2,"","YES")
 db[262] = new dbRecord(false, "Side Mounted Back-Up Lights","s08291_244.xml","0",2,"","YES")
 db[263] = new dbRecord(false, "Stop Arm with Strobe Light - Air Front and Rear","s08291_245.xml","0",2,"","YES")
 db[264] = new dbRecord(false, "Stop Arm with Strobe Lights - Electric Front and Rear","s08291_246.xml","0",2,"","YES")
 db[265] = new dbRecord(true, "Emergency Exits (Chapter 9)","s08291_247.xml","0",1,"","")
 db[266] = new dbRecord(false, "Kick Out Windows","s08291_247.xml","0",2,"","YES")
 db[267] = new dbRecord(false, "Roof Hatches","s08291_248.xml","0",2,"","YES")
 db[268] = new dbRecord(false, "Emergency Exit Doors","s08291_249.xml","0",2,"","YES")
 db[269] = new dbRecord(false, "Emergency Exit Buzzers","s08291_250.xml","0",2,"","YES")
 db[270] = new dbRecord(false, "Roof Hatch with Single Speed Power Vent","s08291_251.xml","0",2,"","YES")
 db[271] = new dbRecord(false, "Roof Hatch with Dual Speed Power Vent","s08291_252.xml","0",2,"","YES")
 db[272] = new dbRecord(true, "Mirrors (Chapter 10)","s08291_253.xml","0",1,"","")
 db[273] = new dbRecord(false, "Heated Mirrors (All)","s08291_253.xml","0",2,"","YES")
 db[274] = new dbRecord(false, "Motorized / Heated Mirrors (Rosco)","s08291_254.xml","0",2,"","YES")
 db[275] = new dbRecord(false, "Remote Mirror - Heated Rearview / Crossview w/IKU Switches","s08291_255.xml","0",2,"","YES")
 db[276] = new dbRecord(false, "Heated Mirror with 20 Minute Timer","s08291_256.xml","0",2,"","YES")
 db[277] = new dbRecord(false, "Heated / Motorized Mirror with 20 Minute Timer","s08291_257.xml","0",2,"","YES")
 db[278] = new dbRecord(true, "Lift Door (Chapter 11)","s08291_258.xml","0",1,"","")
 db[279] = new dbRecord(false, "Ignition Feed Diagram","s08291_258.xml","0",2,"","YES")
 db[280] = new dbRecord(false, "Ignition / Accy Feed Diagram","s08291_259.xml","0",2,"","YES")
 db[281] = new dbRecord(false, "Zero Volt Reference Diagram","s08291_260.xml","0",2,"","YES")
 db[282] = new dbRecord(false, "Lift Door with Flashing Indicator Light - In Right Switch Panel","s08291_261.xml","0",2,"","YES")
 db[283] = new dbRecord(false, "Interior and Exterior Lift Lights with Toggle Switch","s08291_262.xml","0",2,"","YES")
 db[284] = new dbRecord(false, "Lift Door / Interlock - Air Brakes, LCT Trans., 49GMM","s08291_263.xml","0",2,"","YES")
 db[285] = new dbRecord(false, "Lift Door / Interlock - Air Brakes, MD Trans., 49GMM","s08291_264.xml","0",2,"","YES")
 db[286] = new dbRecord(false, "Lift Door / Interlock - Air Brakes, LCT Trans., 49GLZ","s08291_265.xml","0",2,"","YES")
 db[287] = new dbRecord(false, "Lift Door / Interlock - Air Brakes, MD Trans., 49GLZ","s08291_266.xml","0",2,"","YES")
 db[288] = new dbRecord(false, "Lift Door / Interlock - Hydraulic Brakes, LCT Trans., 49GLZ","s08291_267.xml","0",2,"","YES")
 db[289] = new dbRecord(false, "Lift Door / Interlock - Hydraulic Brakes, MD Trans., 49GLZ","s08291_268.xml","0",2,"","YES")
 db[290] = new dbRecord(false, "Lift Door / Interlock - Hydraulic Brakes, LCT Trans., 49GMM","s08291_269.xml","0",2,"","YES")
 db[291] = new dbRecord(true, "Miscellaneous (Chapter 12)","s08291_270.xml","0",1,"","")
 db[292] = new dbRecord(false, "Heated Wiper Blades","s08291_270.xml","0",2,"","YES")
 db[293] = new dbRecord(false, "Air Compressor","s08291_271.xml","0",2,"","YES")
 db[294] = new dbRecord(false, "Air Horn","s08291_272.xml","0",2,"","YES")
 db[295] = new dbRecord(false, "Booster Pump","s08291_273.xml","0",2,"","YES")
 db[296] = new dbRecord(false, "DC Power Source","s08291_274.xml","0",2,"","YES")
 db[297] = new dbRecord(false, "Starter Interrupt - Emergency Exits","s08291_275.xml","0",2,"","YES")
 db[298] = new dbRecord(false, "Post Trip Inspection","s08291_276.xml","0",2,"","YES")
 db[299] = new dbRecord(false, "Starter Interrupt - Wired to Buzzer","s08291_277.xml","0",2,"","YES")
 db[300] = new dbRecord(false, "Camera Ignition Activated","s08291_278.xml","0",2,"","YES")
 db[301] = new dbRecord(false, "Camera Switch Activated","s08291_279.xml","0",2,"","YES")
 db[302] = new dbRecord(false, "Traction Sanders - 5 or 10 Gallon","s08291_280.xml","0",2,"","YES")
 db[303] = new dbRecord(false, "Reverse Motion Sensor","s08291_281.xml","0",2,"","YES")
 db[304] = new dbRecord(false, "No Child Left Behind","s08291_282.xml","0",2,"","YES")
 db[305] = new dbRecord(false, "No Child Left Behind with Separate Deactivation Switch","s08291_283.xml","0",2,"","YES")
 db[306] = new dbRecord(false, "Locking Overhead Compartment with Buzzer","s08291_284.xml","0",2,"","YES")
 db[307] = new dbRecord(false, "Fuel Fired Heater with 7-Day Timer","s08291_285.xml","0",2,"","YES")
 db[308] = new dbRecord(true, "CONNECTOR COMPOSITES (Chapter 13)","s08291_286.xml","0",1,"","")
 db[309] = new dbRecord(false, "J1, J2","s08291_286.xml","0",2,"","YES")
 db[310] = new dbRecord(false, "J6, J7","s08291_287.xml","0",2,"","YES")
 db[311] = new dbRecord(false, "J8, J9","s08291_288.xml","0",2,"","YES")
 db[312] = new dbRecord(false, "J10, J12","s08291_289.xml","0",2,"","YES")
 db[313] = new dbRecord(false, "J13, J15","s08291_290.xml","0",2,"","YES")
 db[314] = new dbRecord(false, "J16, J17","s08291_291.xml","0",2,"","YES")
 db[315] = new dbRecord(false, "J21, J22","s08291_292.xml","0",2,"","YES")
 db[316] = new dbRecord(false, "J27, J28, J30, J31","s08291_293.xml","0",2,"","YES")
 db[317] = new dbRecord(false, "J34, J38","s08291_294.xml","0",2,"","YES")
 db[318] = new dbRecord(false, "J39, J40","s08291_295.xml","0",2,"","YES")
 db[319] = new dbRecord(false, "J41, J42, J43, J44","s08291_296.xml","0",2,"","YES")
 db[320] = new dbRecord(false, "J47, J49","s08291_297.xml","0",2,"","YES")
 db[321] = new dbRecord(false, "J50, J51","s08291_298.xml","0",2,"","YES")
 db[322] = new dbRecord(false, "J52, J53","s08291_299.xml","0",2,"","YES")
 db[323] = new dbRecord(false, "J56, J57, J58, J59","s08291_300.xml","0",2,"","YES")
 db[324] = new dbRecord(false, "J62, J64, J65, J66","s08291_301.xml","0",2,"","YES")
 db[325] = new dbRecord(false, "J67, J68, J70","s08291_302.xml","0",2,"","YES")
 db[326] = new dbRecord(false, "J70a, J70b","s08291_303.xml","0",2,"","YES")
 db[327] = new dbRecord(false, "J76, J77, J78, J79","s08291_304.xml","0",2,"","YES")
 db[328] = new dbRecord(false, "J84, J85, J86, J88","s08291_305.xml","0",2,"","YES")
 db[329] = new dbRecord(false, "J96, J97, J108","s08291_306.xml","0",2,"","YES")
 db[330] = new dbRecord(false, "J113, J114","s08291_307.xml","0",2,"","YES")
 db[331] = new dbRecord(false, "J115, J116","s08291_308.xml","0",2,"","YES")
 db[332] = new dbRecord(false, "J118, J119","s08291_309.xml","0",2,"","YES")
 db[333] = new dbRecord(false, "J125, J126","s08291_310.xml","0",2,"","YES")
 db[334] = new dbRecord(false, "J127, J128","s08291_311.xml","0",2,"","YES")
 db[335] = new dbRecord(false, "J129, J131, J132","s08291_312.xml","0",2,"","YES")
 db[336] = new dbRecord(false, "J133, J134, J135","s08291_313.xml","0",2,"","YES")
 db[337] = new dbRecord(false, "J136, J138, J140","s08291_314.xml","0",2,"","YES")
 db[338] = new dbRecord(false, "J141, J147, J149","s08291_315.xml","0",2,"","YES")
 db[339] = new dbRecord(false, "J150, J151, J152, J154","s08291_316.xml","0",2,"","YES")
 db[340] = new dbRecord(false, "J155, J160, J164, J165","s08291_317.xml","0",2,"","YES")
 db[341] = new dbRecord(false, "J166, J167, J168, J169","s08291_318.xml","0",2,"","YES")
 db[342] = new dbRecord(false, "J170, J171, J172, J173","s08291_319.xml","0",2,"","YES")
 db[343] = new dbRecord(false, "J174, J175, J176, J177","s08291_320.xml","0",2,"","YES")
 db[344] = new dbRecord(false, "J178, J179, J180, J181","s08291_321.xml","0",2,"","YES")
 db[345] = new dbRecord(false, "J182, J183, J188, J189","s08291_322.xml","0",2,"","YES")
 db[346] = new dbRecord(false, "J190, J191, J192, J193","s08291_323.xml","0",2,"","YES")
 db[347] = new dbRecord(false, "J194, J200, J201, J202","s08291_324.xml","0",2,"","YES")
 db[348] = new dbRecord(false, "J203, J204, J205, J206","s08291_325.xml","0",2,"","YES")
 db[349] = new dbRecord(false, "J220, J222, J223, J224","s08291_326.xml","0",2,"","YES")
 db[350] = new dbRecord(false, "J225, J228, J230, J231","s08291_327.xml","0",2,"","YES")
 db[351] = new dbRecord(false, "J232, J233, J234, J235","s08291_328.xml","0",2,"","YES")
 db[352] = new dbRecord(false, "J236, J237, J238, J239","s08291_329.xml","0",2,"","YES")
 db[353] = new dbRecord(false, "J240, J241, J242, J243","s08291_330.xml","0",2,"","YES")
 db[354] = new dbRecord(false, "J244, J1006","s08291_331.xml","0",2,"","YES")
 db[355] = new dbRecord(false, "J1007, J1012","s08291_332.xml","0",2,"","YES")
 db[356] = new dbRecord(false, "Cpc1, Cpc3, Cpc4","s08291_333.xml","0",2,"","YES")
 db[357] = new dbRecord(false, "Ss2, Ss4, Ss5, Ss6","s08291_334.xml","0",2,"","YES")
 db[358] = new dbRecord(false, "Ss7, Ss8, Ss13, Ss14","s08291_335.xml","0",2,"","YES")
 db[359] = new dbRecord(false, "Ss15, Ss16, Ss17, Ss20","s08291_336.xml","0",2,"","YES")
 db[360] = new dbRecord(false, "Ss21, Ss22, Ss23, Ss24","s08291_337.xml","0",2,"","YES")
 db[361] = new dbRecord(false, "Ss25, Ss200, Ss201, Ss204","s08291_338.xml","0",2,"","YES")
 db[362] = new dbRecord(false, "Ss205","s08291_339.xml","0",2,"","YES")
 db[363] = new dbRecord(false, "Es1, Es2, Es3, Es10","s08291_340.xml","0",2,"","YES")
 db[364] = new dbRecord(false, "Es12, Es13","s08291_341.xml","0",2,"","YES")
 db[365] = new dbRecord(false, "Circuit # to Wire Function Chart","s08291_342.xml","0",2,"","YES")
 db[366] = new dbRecord(false, "Circuit # to Wire Function Chart","s08291_343.xml","0",2,"","YES")
 db[367] = new dbRecord(false, "Circuit # to Wire Function Chart","s08291_344.xml","0",2,"","YES")
 db[368] = new dbRecord(false, "Spl-1, Spl-2, Spl-16, Spl-20, Spl-22, Spl-30","s08291_345.xml","0",2,"","YES")
 db[369] = new dbRecord(false, "Spl-31, Spl-32, Spl-33, Spl-35, Spl-36, Spl-40","s08291_346.xml","0",2,"","YES")
 db[370] = new dbRecord(false, "Spl-42, Spl-45, Spl-46, Spl-47","s08291_347.xml","0",2,"","YES")
 db[371] = new dbRecord(false, "FB-A, FB-B, FB-C, FB-D, FB-E, FB-F, FB-G","s08291_348.xml","0",2,"","YES")
// AHJO - In the following function the parameter 'occurs' was added Oct/Nov 2001
function dbRecord(mother,display,URL,occurs,indent,statusMsg,link){
	this.mother = mother   // is this item a parent?
	this.display = display // text to display
	this.URL = URL         // used to link to TOC
	this.occurances =  occurs  // how many times does search occur - THIS LINE WAS ADDED by AHJO
	this.indent = indent   // how many levels nested?
	this.statusMsg = statusMsg  // descriptive text for status bar 
	this.link = link  //  link tied to text; if empty string, item appears as straight text
	return this
}
// pre-load all images into cache
var collapsedImg = new Image(widgetWidth,widgetHeight)
collapsedImg.src = collapsedWidget
var expandedImg = new Image(widgetWidth,widgetHeight)
expandedImg.src = expandedWidget
var endpointImg = new Image(widgetWidth,widgetHeight)
endpointImg.src = endpointWidget
// mainframeURL = parent.mainframe.document.URL // get URL of mainframe 
// ** functions that get and set persistent cookie data **
// set cookie data
var mycookie = document.cookie
function setCurrState(setting) {
        mycookie = document.cookie = "currState=" + escape(setting)
}
// retrieve cookie data
function getCurrState() {
        var label = "currState="
        var labelLen = label.length
        var cLen = mycookie.length
        var i = 0
        while (i < cLen) {
                var j = i + labelLen
                if (mycookie.substring(i,j) == label) {
                        var cEnd = mycookie.indexOf(";",j)
                        if (cEnd ==     -1) {
                                cEnd = mycookie.length
                       }
                        return unescape(mycookie.substring(j,cEnd))
                }
               i++
       }
        return ""
}
// **function that updates persistent storage of state**
// toggles an outline mother entry, storing new value in the cookie
function toggle(n) {
	if (n != 0) {
		var newString = ""
		var currState = getCurrState() // of whole outline
		var expanded = currState.charAt(n-1) // of clicked item
		newString += currState.substring(0,n-1)
		newString += expanded ^ 1 // Bitwise XOR clicked item
		newString += currState.substring(n,currState.length)
		setCurrState(newString) // write new state back to cookie
	}
}
// **functions used in assembling updated outline**
// returns the proper GIF file name for each entry's control
function getGIF(n) {
	var mom = db[n].mother  // is entry a parent?
	var expanded = getCurrState().charAt(n-1) // of clicked item
	if (!mom) {
		return endpointWidget
	} else {
		if (expanded == 1) {
			return expandedWidget
		}
	}
	return collapsedWidget
}
// returns the proper status line text based on the icon style
function getGIFStatus(n) {
	var mom = db[n].mother  // is entry a parent
	var expanded = getCurrState().charAt(n-1) // of rolled item
	if (!mom) {
		return "No further items"
	} else {
		if (expanded == 1) {
			return "Click to collapse nested items"
		}
	}
	return "Click to expand nested items"
}
// initialize 'current state' storage field
if (getCurrState() == "" || getCurrState().length != (db.length-1)) {
	initState = ""
	for (i = 1; i < db.length; i++) {
		initState += "0"
	}
	setCurrState(initState)
}
// end -->


    </SCRIPT>
</HEAD>
<BODY>
<h3>BE, CE Bus Starting March, 2004 - ELECTRICAL CIRCUIT DIAGRAMS</h3>
<SCRIPT LANGUAGE="JavaScript1.1">
<!-- start
// build new outline based on the values of the cookie
// and data points in the outline data array.
// This fires each time the user clicks on a control,
// because the HREF for each one reloads the current document.
var newOutline = ""
var prevIndentDisplayed = 0
var showMyDaughter = 0
// cycle through each entry in the outline array
for (var i = 1; i < db.length; i++) {
	var theGIF = getGIF(i)				// get the image
	var theGIFStatus = getGIFStatus(i)  // get the status message
	var currIndent = db[i].indent		// get the indent level
	var expanded = getCurrState().charAt(i-1) // current state
        db[i].currentrow = ""

	if (currIndent == 0 || currIndent == 1 || db[i].currentrow == "currentrow" || currIndent <= prevIndentDisplayed || (showMyDaughter == 1 && (currIndent - prevIndentDisplayed == 1))) {
 // Phil added the if to remove the image from before the root element 
         if (currIndent != 0) {
			newOutline += "<SPAN class=\"" + db[i].currentrow + "\" style=\" position:relative;left:" + (indentPixels * currIndent) + "px;width:200px\"><A HREF=\"javascript:history.go(0)\" onMouseOver=\"window.status=\'" + theGIFStatus + "\';return true;\" onClick=\"toggle(" + i + ");return " + "\">"
			newOutline += "<IMG ALIGN=TOP SRC=\"" + theGIF + "\" HEIGHT=" + widgetHeight + " WIDTH=" + widgetWidth + " BORDER=0></A>"
			newOutline += "<SPAN title=\"" + db[i].display + "\" style=\"width:" + (200-widgetWidth) + "px\">"
			}
			if (db[i].link == "" || db[i].link == null) {
				newOutline += " <font size='1'>" +  db[i].display + "</font></SPAN></SPAN>" + "<BR>"	// no link, just a listed item
			} else {
                 if (db[i].occurances > 0)	{ 
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><font size='1'>" + db[i].display + "&nbsp;&nbsp;(" + db[i].occurances + ")</font></A></SPAN></SPAN><BR>"
			} else {
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><font size='1'>" + db[i].display + "</font></A></SPAN></SPAN><BR>"
			}
			}
		prevIndentDisplayed = currIndent
		showMyDaughter = expanded
		if (db.length > 25) {
			document.write(newOutline)
			newOutline = ""
		}
	}
}
document.write(newOutline)
// end -->


</SCRIPT>
</BODY>
</html>
