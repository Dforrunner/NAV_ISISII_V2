<HTML>
<HEAD>
    <TITLE>Service Section TOC</TITLE>
    <LINK href="../style.css" rel="STYLESHEET" type="text/css">
    <SCRIPT LANGUAGE="JavaScript1.1">
<!-- begin hiding
var indentPixels = 15
var collapsedWidget = "../images/plus.gif"
var expandedWidget = "../images/minus.gif"
var endpointWidget = "../images/end.gif"
var widgetWidth = 17
var widgetHeight = 18
var displayTarget = "mainframe"
// AHJO - In the folowing db the fourth field (after the xml file name) is new and set to "0" 
var db = new Array()
 db[1] = new dbRecord(true, "RE Bus Models Built July 01, 2007 and After - ELECTRICAL CIRCUIT DIAGRAMS","s08334_1.xml","0",0,"","YES")
 db[2] = new dbRecord(true, "Instructions and Charts (Chapter 2)","s08334_2.xml","0",1,"","")
 db[3] = new dbRecord(false, "Abbreviations, p. 1","s08334_2.xml","0",2,"","YES")
 db[4] = new dbRecord(false, "Acronyms, p. 2","s08334_3.xml","0",2,"","YES")
 db[5] = new dbRecord(false, "Circuit Diagram Instructions, p. 3","s08334_4.xml","0",2,"","YES")
 db[6] = new dbRecord(false, "Circuit Number Identification and Color, p. 4","s08334_5.xml","0",2,"","YES")
 db[7] = new dbRecord(false, "Circuit Number Identification and Color, p. 5","s08334_6.xml","0",2,"","YES")
 db[8] = new dbRecord(false, "Circuit Number Identification and Color, p. 6","s08334_7.xml","0",2,"","YES")
 db[9] = new dbRecord(false, "Lamp Bulb Chart, p. 7","s08334_8.xml","0",2,"","YES")
 db[10] = new dbRecord(false, "Relay Function and Wiring Guide, p. 8","s08334_9.xml","0",2,"","YES")
 db[11] = new dbRecord(false, "Schematic Symbol Chart, p. 9","s08334_10.xml","0",2,"","YES")
 db[12] = new dbRecord(false, "Schematic Symbol Chart, p. 10","s08334_11.xml","0",2,"","YES")
 db[13] = new dbRecord(false, "Schematic Symbol Chart, p. 11","s08334_12.xml","0",2,"","YES")
 db[14] = new dbRecord(false, "Schematic Symbol Chart, p. 12","s08334_13.xml","0",2,"","YES")
 db[15] = new dbRecord(true, "Power Distribution (Chapter 3)","s08334_14.xml","0",1,"","")
 db[16] = new dbRecord(false, "Battery Feed, p. 1","s08334_14.xml","0",2,"","YES")
 db[17] = new dbRecord(false, "Ignition Feed, p. 2","s08334_15.xml","0",2,"","YES")
 db[18] = new dbRecord(false, "Accessory Feed, p. 3","s08334_16.xml","0",2,"","YES")
 db[19] = new dbRecord(false, "Ground, p. 4","s08334_17.xml","0",2,"","YES")
 db[20] = new dbRecord(false, "Ground, p. 5","s08334_18.xml","0",2,"","YES")
 db[21] = new dbRecord(false, "Power Distribution Control Module, p. 6","s08334_19.xml","0",2,"","YES")
 db[22] = new dbRecord(false, "Power Distribution Control Module, p. 7","s08334_20.xml","0",2,"","YES")
 db[23] = new dbRecord(false, "Power Distribution Control Module, p. 8","s08334_21.xml","0",2,"","YES")
 db[24] = new dbRecord(true, "Cab Accessories (Chapter 4)","s08334_22.xml","0",1,"","")
 db[25] = new dbRecord(false, "Ammeter, p. 1","s08334_22.xml","0",2,"","YES")
 db[26] = new dbRecord(false, "Horn, p. 2","s08334_23.xml","0",2,"","YES")
 db[27] = new dbRecord(false, "Turn Signals, International T/S Switch (Stationary Column), p. 3","s08334_24.xml","0",2,"","YES")
 db[28] = new dbRecord(false, "Turn Signals, Douglas T/S Switch (Tilt Column), p. 4","s08334_25.xml","0",2,"","YES")
 db[29] = new dbRecord(true, "Engine Systems (Chapter 5)","s08334_26.xml","0",1,"","")
 db[30] = new dbRecord(false, "Charging System, p. 1","s08334_26.xml","0",2,"","YES")
 db[31] = new dbRecord(false, "Cranking System (12V), with Starter Overcrank Protection with I6, p. 2","s08334_27.xml","0",2,"","YES")
 db[32] = new dbRecord(false, "Fan Drive Control, p. 3","s08334_28.xml","0",2,"","YES")
 db[33] = new dbRecord(false, "I6 Grid Heater, p. 4","s08334_29.xml","0",2,"","YES")
 db[34] = new dbRecord(false, "Exhaust Aftertreatment System, p. 5","s08334_30.xml","0",2,"","YES")
 db[35] = new dbRecord(false, "Exhaust Aftertreatment System, p. 6","s08334_31.xml","0",2,"","YES")
 db[36] = new dbRecord(true, "Gauges (Chapter 6)","s08334_32.xml","0",1,"","")
 db[37] = new dbRecord(false, "Fuel Level Gauge, p. 1","s08334_32.xml","0",2,"","YES")
 db[38] = new dbRecord(false, "Engine Oil Pressure, Speedometer, Tachometer, Water Temperature, Voltmeter, p. 2","s08334_33.xml","0",2,"","YES")
 db[39] = new dbRecord(false, "Transmission Oil Temperature Gauge, p. 3","s08334_34.xml","0",2,"","YES")
 db[40] = new dbRecord(true, "Warning Lights (Chapter 7)","s08334_35.xml","0",1,"","")
 db[41] = new dbRecord(false, "Low Oil Pressure, High Water temp, Bk Warning, Low Coolant Level Lt and Alarms, p. 1","s08334_35.xml","0",2,"","YES")
 db[42] = new dbRecord(false, "Diagnostic / Programming Connector, p. 2","s08334_36.xml","0",2,"","YES")
 db[43] = new dbRecord(false, "Diagnostic / Programmable Connector, p. 3","s08334_37.xml","0",2,"","YES")
 db[44] = new dbRecord(false, "MSM Module, Wait to Start, Engine Warning, Fuel Filter Lights and Alarms, p. 4","s08334_38.xml","0",2,"","YES")
 db[45] = new dbRecord(false, "MSM Module, Wait to Start, Engine Warning, Fuel Filter Lights and Alarms, p. 5","s08334_39.xml","0",2,"","YES")
 db[46] = new dbRecord(false, "Parking Brake and Warning Lights with Air Brakes, p. 6","s08334_40.xml","0",2,"","YES")
 db[47] = new dbRecord(true, "Chassis Accessories (Chapter 8)","s08334_41.xml","0",1,"","")
 db[48] = new dbRecord(false, "Air Dryer (AD-9) with Air Brakes, p. 1","s08334_41.xml","0",2,"","YES")
 db[49] = new dbRecord(false, "Allison WTEC Transmission Gen IV, p. 2","s08334_42.xml","0",2,"","YES")
 db[50] = new dbRecord(false, "Allison WTEC Transmission Gen IV, p. 3","s08334_43.xml","0",2,"","YES")
 db[51] = new dbRecord(false, "Allison WTEC Transmission Gen IV, p. 4","s08334_44.xml","0",2,"","YES")
 db[52] = new dbRecord(false, "Allison WTEC Transmission Gen IV, p. 5","s08334_45.xml","0",2,"","YES")
 db[53] = new dbRecord(false, "Allison WTEC Transmission Gen IV, p. 6","s08334_46.xml","0",2,"","YES")
 db[54] = new dbRecord(false, "Allison WTEC Transmission Gen IV, p. 7","s08334_47.xml","0",2,"","YES")
 db[55] = new dbRecord(false, "Allison WTEC Transmission Gen IV, p. 8","s08334_48.xml","0",2,"","YES")
 db[56] = new dbRecord(false, "J1939 Datalink Connection, p. 9","s08334_49.xml","0",2,"","YES")
 db[57] = new dbRecord(false, "Xmsn Retarder Controls Only with I6 - Allison WTEC Xmsn (Air Verified), p. 10","s08334_50.xml","0",2,"","YES")
 db[58] = new dbRecord(false, "Allison with WTEC Transmission Gen IV (Electronic), p. 11","s08334_51.xml","0",2,"","YES")
 db[59] = new dbRecord(false, "Drain Valve Wiring, p. 12","s08334_52.xml","0",2,"","YES")
 db[60] = new dbRecord(false, "Fuel Filter Warning System, p. 13","s08334_53.xml","0",2,"","YES")
 db[61] = new dbRecord(false, "ABS6 with Bendix, p. 14","s08334_54.xml","0",2,"","YES")
 db[62] = new dbRecord(false, "ABS6 with Bendix, p. 15","s08334_55.xml","0",2,"","YES")
 db[63] = new dbRecord(false, "ABS6 with Bendix, p. 16","s08334_56.xml","0",2,"","YES")
 db[64] = new dbRecord(false, "Allison LCT Transmission Gen IV, p. 17","s08334_57.xml","0",2,"","YES")
 db[65] = new dbRecord(false, "Allison LCT Transmission Gen IV, p. 18","s08334_58.xml","0",2,"","YES")
 db[66] = new dbRecord(false, "Allison LCT Transmission Gen IV, p. 19","s08334_59.xml","0",2,"","YES")
 db[67] = new dbRecord(false, "Allison LCT Transmission Gen IV, p. 20","s08334_60.xml","0",2,"","YES")
 db[68] = new dbRecord(false, "J1708 Datalink Connection, p. 21","s08334_61.xml","0",2,"","YES")
 db[69] = new dbRecord(false, "Park Brake Lift Interlock, p. 22","s08334_62.xml","0",2,"","YES")
 db[70] = new dbRecord(false, "Body Builder Connections, p. 23","s08334_63.xml","0",2,"","YES")
 db[71] = new dbRecord(false, "Fuel Filter, p. 24","s08334_64.xml","0",2,"","YES")
 db[72] = new dbRecord(true, "Light Systems (Chapter 9)","s08334_65.xml","0",1,"","")
 db[73] = new dbRecord(false, "Backup Light System Allison Gen IV, p. 1","s08334_65.xml","0",2,"","YES")
 db[74] = new dbRecord(false, "Headlight System with Douglas T/S Switch (Tilt Column), p. 2","s08334_66.xml","0",2,"","YES")
 db[75] = new dbRecord(false, "Headlight System with International T/S Switch (Stationary Column), p. 3","s08334_67.xml","0",2,"","YES")
 db[76] = new dbRecord(false, "Daytime Running Lights with Douglas or International T/S Switch, p. 4","s08334_68.xml","0",2,"","YES")
 db[77] = new dbRecord(false, "Stop Light Switch with Air Brakes, p. 5","s08334_69.xml","0",2,"","YES")
 db[78] = new dbRecord(false, "Stop Light Switch with Air Brakes, p. 6","s08334_70.xml","0",2,"","YES")
 db[79] = new dbRecord(false, "Panel Lights, p. 7","s08334_71.xml","0",2,"","YES")
 db[80] = new dbRecord(false, "Daytime Running Lights with Engine Running Only / Leece Neville Alternator Feed, p. 8","s08334_72.xml","0",2,"","YES")
 db[81] = new dbRecord(false, "Daytime Running Lights with Engine Running Only / Delco Alternator Feed, p. 9","s08334_73.xml","0",2,"","YES")
 db[82] = new dbRecord(true, "Electronic Engines (Chapter 10)","s08334_74.xml","0",1,"","")
 db[83] = new dbRecord(false, "Electronic Engine Controls, p. 1","s08334_74.xml","0",2,"","YES")
 db[84] = new dbRecord(false, "Electronic Engine Controls, p. 2","s08334_75.xml","0",2,"","YES")
 db[85] = new dbRecord(false, "Electronic Engine Controls, p. 3","s08334_76.xml","0",2,"","YES")
 db[86] = new dbRecord(false, "Electronic Engine Controls, p. 4","s08334_77.xml","0",2,"","YES")
 db[87] = new dbRecord(false, "Cruise Control and Electronic Hand Throttle, p. 5","s08334_78.xml","0",2,"","YES")
 db[88] = new dbRecord(false, "Engine Brakes with WTEC IV Transmission and I6 Engine, p. 6","s08334_79.xml","0",2,"","YES")
 db[89] = new dbRecord(false, "Exhaust Brakes with WTEC IV Transmission and I6 Engine, p. 7","s08334_80.xml","0",2,"","YES")
 db[90] = new dbRecord(false, "Spare Speedometer and Tachometer Output Signals, p. 8","s08334_81.xml","0",2,"","YES")
 db[91] = new dbRecord(true, "Connector Body Composites (Chapter 11)","s08334_82.xml","0",1,"","")
 db[92] = new dbRecord(false, "Connector Composites (1), p. 1","s08334_82.xml","0",2,"","YES")
 db[93] = new dbRecord(false, "Connector Composite (1), p. 2","s08334_83.xml","0",2,"","YES")
 db[94] = new dbRecord(false, "Connector Composites (2A), (2F), p. 3","s08334_84.xml","0",2,"","YES")
 db[95] = new dbRecord(false, "Connector Composite (2M), p. 4","s08334_85.xml","0",2,"","YES")
 db[96] = new dbRecord(false, "Connector Composites (3F), (4M), (6F), (7M), (8M), p. 5","s08334_86.xml","0",2,"","YES")
 db[97] = new dbRecord(false, "Connector Composites (9), (10), (11M), (12M), p. 6","s08334_87.xml","0",2,"","YES")
 db[98] = new dbRecord(false, "Connector Composites (13M), (20M), (22M), p. 7","s08334_88.xml","0",2,"","YES")
 db[99] = new dbRecord(false, "Connector Composites (23M), (35x3), (37F), (43M), (69), p. 8","s08334_89.xml","0",2,"","YES")
 db[100] = new dbRecord(false, "Connector Composites (78M), (79M), (162), (165), p. 9","s08334_90.xml","0",2,"","YES")
 db[101] = new dbRecord(false, "Connector Composites (168), (169M), (170), (170M), p. 10","s08334_91.xml","0",2,"","YES")
 db[102] = new dbRecord(false, "Connector Composites (200), (211M), (284), p. 11","s08334_92.xml","0",2,"","YES")
 db[103] = new dbRecord(false, "Connector Composites (288x1), (289), (290), (291), p. 12","s08334_93.xml","0",2,"","YES")
 db[104] = new dbRecord(false, "Connector Composites (292), (297), (350x2), (351), p. 13","s08334_94.xml","0",2,"","YES")
 db[105] = new dbRecord(false, "Connector Composites (352), (353), (354), (373M), p. 14","s08334_95.xml","0",2,"","YES")
 db[106] = new dbRecord(false, "Connector Composites (374M), (377), (382M), p. 15","s08334_96.xml","0",2,"","YES")
 db[107] = new dbRecord(false, "Connector Composites (384M), (386A), (391), (392), p. 16","s08334_97.xml","0",2,"","YES")
 db[108] = new dbRecord(false, "Connector Composites (523), (643), p. 17","s08334_98.xml","0",2,"","YES")
 db[109] = new dbRecord(false, "Connector Composites (644), (918), p. 18","s08334_99.xml","0",2,"","YES")
 db[110] = new dbRecord(false, "Connector Composites (919), (922), (922A), (925), p. 19","s08334_100.xml","0",2,"","YES")
 db[111] = new dbRecord(false, "Connector Composites (926), (996M), (1023), p. 20","s08334_101.xml","0",2,"","YES")
 db[112] = new dbRecord(false, "Connector Composites (1050), (1102), (1103), (1134), p. 21","s08334_102.xml","0",2,"","YES")
 db[113] = new dbRecord(false, "Connector Composites (1150), (1151), (1152), (1153), p. 22","s08334_103.xml","0",2,"","YES")
 db[114] = new dbRecord(false, "Connector Composites (1272), (1601), (1707M), (1708), p. 23","s08334_104.xml","0",2,"","YES")
 db[115] = new dbRecord(false, "Connector Composites (1709), (1850), (3043), p. 24","s08334_105.xml","0",2,"","YES")
 db[116] = new dbRecord(false, "Connector Composites (3114), (3115), (3116), p. 25","s08334_106.xml","0",2,"","YES")
 db[117] = new dbRecord(false, "Connector Composites (3117), (3118), (3216M), p. 26","s08334_107.xml","0",2,"","YES")
 db[118] = new dbRecord(false, "Connector Composites (4321M), (5556M), (5678), p. 27","s08334_108.xml","0",2,"","YES")
 db[119] = new dbRecord(false, "Connector Composites (6005M), (6010), (6011), (6012), p. 28","s08334_109.xml","0",2,"","YES")
 db[120] = new dbRecord(false, "Connector Composites (6020), p. 29","s08334_110.xml","0",2,"","YES")
 db[121] = new dbRecord(false, "Connector Composites (6120), (6200), (6201), (6202), p. 30","s08334_111.xml","0",2,"","YES")
 db[122] = new dbRecord(false, "Connector Composites (6260), (6261), (6262), (6263), p. 31","s08334_112.xml","0",2,"","YES")
 db[123] = new dbRecord(false, "Connector Composites (6308), (6400), (6665M), p. 32","s08334_113.xml","0",2,"","YES")
 db[124] = new dbRecord(false, "Connector Composites (6703), (6705), (6741), p. 33","s08334_114.xml","0",2,"","YES")
 db[125] = new dbRecord(false, "Connector Composites (7150), p. 34","s08334_115.xml","0",2,"","YES")
 db[126] = new dbRecord(false, "Connector Composites (7150A), p. 35","s08334_116.xml","0",2,"","YES")
 db[127] = new dbRecord(false, "Connector Composites (7250), (7306), p. 36","s08334_117.xml","0",2,"","YES")
 db[128] = new dbRecord(false, "Connector Composites (7350), (7600), (7603), (7604), p. 37","s08334_118.xml","0",2,"","YES")
 db[129] = new dbRecord(false, "Connector Composites (7607), (7966M), (7777M), p. 38","s08334_119.xml","0",2,"","YES")
 db[130] = new dbRecord(false, "Connector Composites (7980), (7981), (7982), (7983), (7999M), p. 39","s08334_120.xml","0",2,"","YES")
 db[131] = new dbRecord(false, "Connector Composites (9258), (9259), (9260), (9263), p. 40","s08334_121.xml","0",2,"","YES")
 db[132] = new dbRecord(false, "Connector Composites (9850), p. 41","s08334_122.xml","0",2,"","YES")
 db[133] = new dbRecord(false, "Connector Composites (9851), p. 42","s08334_123.xml","0",2,"","YES")
 db[134] = new dbRecord(false, "Connector Composites (9875), (9876M), p. 43","s08334_124.xml","0",2,"","YES")
// AHJO - In the following function the parameter 'occurs' was added Oct/Nov 2001
function dbRecord(mother,display,URL,occurs,indent,statusMsg,link){
	this.mother = mother   // is this item a parent?
	this.display = display // text to display
	this.URL = URL         // used to link to TOC
	this.occurances =  occurs  // how many times does search occur - THIS LINE WAS ADDED by AHJO
	this.indent = indent   // how many levels nested?
	this.statusMsg = statusMsg  // descriptive text for status bar 
	this.link = link  //  link tied to text; if empty string, item appears as straight text
	return this
}
// pre-load all images into cache
var collapsedImg = new Image(widgetWidth,widgetHeight)
collapsedImg.src = collapsedWidget
var expandedImg = new Image(widgetWidth,widgetHeight)
expandedImg.src = expandedWidget
var endpointImg = new Image(widgetWidth,widgetHeight)
endpointImg.src = endpointWidget
// mainframeURL = parent.mainframe.document.URL // get URL of mainframe 
// ** functions that get and set persistent cookie data **
// set cookie data
var mycookie = document.cookie
function setCurrState(setting) {
        mycookie = document.cookie = "currState=" + escape(setting)
}
// retrieve cookie data
function getCurrState() {
        var label = "currState="
        var labelLen = label.length
        var cLen = mycookie.length
        var i = 0
        while (i < cLen) {
                var j = i + labelLen
                if (mycookie.substring(i,j) == label) {
                        var cEnd = mycookie.indexOf(";",j)
                        if (cEnd ==     -1) {
                                cEnd = mycookie.length
                       }
                        return unescape(mycookie.substring(j,cEnd))
                }
               i++
       }
        return ""
}
// **function that updates persistent storage of state**
// toggles an outline mother entry, storing new value in the cookie
function toggle(n) {
	if (n != 0) {
		var newString = ""
		var currState = getCurrState() // of whole outline
		var expanded = currState.charAt(n-1) // of clicked item
		newString += currState.substring(0,n-1)
		newString += expanded ^ 1 // Bitwise XOR clicked item
		newString += currState.substring(n,currState.length)
		setCurrState(newString) // write new state back to cookie
	}
}
// **functions used in assembling updated outline**
// returns the proper GIF file name for each entry's control
function getGIF(n) {
	var mom = db[n].mother  // is entry a parent?
	var expanded = getCurrState().charAt(n-1) // of clicked item
	if (!mom) {
		return endpointWidget
	} else {
		if (expanded == 1) {
			return expandedWidget
		}
	}
	return collapsedWidget
}
// returns the proper status line text based on the icon style
function getGIFStatus(n) {
	var mom = db[n].mother  // is entry a parent
	var expanded = getCurrState().charAt(n-1) // of rolled item
	if (!mom) {
		return "No further items"
	} else {
		if (expanded == 1) {
			return "Click to collapse nested items"
		}
	}
	return "Click to expand nested items"
}
// initialize 'current state' storage field
if (getCurrState() == "" || getCurrState().length != (db.length-1)) {
	initState = ""
	for (i = 1; i < db.length; i++) {
		initState += "0"
	}
	setCurrState(initState)
}
// end -->


    </SCRIPT>
</HEAD>
<BODY>
<SCRIPT LANGUAGE="JavaScript1.1">
<!-- start
// build new outline based on the values of the cookie
// and data points in the outline data array.
// This fires each time the user clicks on a control,
// because the HREF for each one reloads the current document.
var newOutline = ""
var prevIndentDisplayed = 0
var showMyDaughter = 0
// cycle through each entry in the outline array
for (var i = 1; i < db.length; i++) {
	var theGIF = getGIF(i)				// get the image
	var theGIFStatus = getGIFStatus(i)  // get the status message
	var currIndent = db[i].indent		// get the indent level
	var expanded = getCurrState().charAt(i-1) // current state
        db[i].currentrow = ""

	if (currIndent == 0 || currIndent == 1 || db[i].currentrow == "currentrow" || currIndent <= prevIndentDisplayed || (showMyDaughter == 1 && (currIndent - prevIndentDisplayed == 1))) {
 // Phil added the if to remove the image from before the root element 
         if (currIndent != 0) {
			newOutline += "<SPAN class=\"" + db[i].currentrow + "\" style=\" position:relative;left:" + (indentPixels * currIndent) + "px;width:200px\"><A HREF=\"javascript:history.go(0)\" onMouseOver=\"window.status=\'" + theGIFStatus + "\';return true;\" onClick=\"toggle(" + i + ");return " + "\">"
			newOutline += "<IMG ALIGN=TOP SRC=\"" + theGIF + "\" HEIGHT=" + widgetHeight + " WIDTH=" + widgetWidth + " BORDER=0></A>"
			newOutline += "<SPAN title=\"" + db[i].display + "\" style=\"width:" + (200-widgetWidth) + "px\">"
			}
			if (db[i].link == "" || db[i].link == null) {
				newOutline += " <font size='1'>" +  db[i].display + "</font></SPAN></SPAN>" + "<BR>"	// no link, just a listed item
			} else {
                 if (db[i].occurances > 0)	{ 
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><font size='1'>" + db[i].display + "&nbsp;&nbsp;(" + db[i].occurances + ")</font></A></SPAN></SPAN><BR>"
			} else {
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><font size='1'>" + db[i].display + "</font></A></SPAN></SPAN><BR>"
			}
			}
		prevIndentDisplayed = currIndent
		showMyDaughter = expanded
		if (db.length > 25) {
			document.write(newOutline)
			newOutline = ""
		}
	}
}
document.write(newOutline)
// end -->


</SCRIPT>
</BODY>
</html>
