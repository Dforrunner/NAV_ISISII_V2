<HTML>
<HEAD>
    <TITLE>Service Section TOC</TITLE>
    <LINK href="../style.css" rel="STYLESHEET" type="text/css">
    <SCRIPT LANGUAGE="JavaScript1.1">
<!-- begin hiding
var indentPixels = 15
var collapsedWidget = "../images/plus.gif"
var expandedWidget = "../images/minus.gif"
var endpointWidget = "../images/end.gif"
var widgetWidth = 17
var widgetHeight = 18
var displayTarget = "mainframe"
// AHJO - In the folowing db the fourth field (after the xml file name) is new and set to "0" 
var db = new Array()
 db[1] = new dbRecord(true, "5000, 9100, 9200, 9400 and 9900 Chassis - Only With Daycab and With or Without Box Sleeper - Built October 1, 1998 To July 18, 1999 - ELECTRICAL CIRCUIT DIAGRAMS","s08185_1.xml","0",0,"","YES")
 db[2] = new dbRecord(true, "Electrical Circuit Diagrams - 9200, 9400 9900 Series Pro Sleeper &#38; Sky-rise","s08185_2.xml","0",1,"","")
 db[3] = new dbRecord(false, "INSTRUCTIONS AND CHARTS (Chapter 1)","s08185_3.xml","0",2,"","YES")
 db[4] = new dbRecord(false, "12 VOLT POWER DISTRIBUTION CIRCUIT DIAGRAMS (Chapter 2)","s08185_4.xml","0",2,"","YES")
 db[5] = new dbRecord(false, "12 VOLT CHARGING &#38; CRANKING SYSTEM (Chapter 3)","s08185_5.xml","0",2,"","YES")
 db[6] = new dbRecord(false, "ENGINE SYSTEMS (Chapter 4)","s08185_6.xml","0",2,"","YES")
 db[7] = new dbRecord(false, "FANS (Chapter 5)","s08185_7.xml","0",2,"","YES")
 db[8] = new dbRecord(false, "GAUGES AND SYSTEMS (Chapter 6)","s08185_8.xml","0",2,"","YES")
 db[9] = new dbRecord(false, "WARNING LIGHTS (Chapter 7)","s08185_9.xml","0",2,"","YES")
 db[10] = new dbRecord(false, "CAB ACCESSORIES (Chapter 8)","s08185_10.xml","0",2,"","YES")
 db[11] = new dbRecord(false, "CHASSIS ACCESSORIES (Chapter 9)","s08185_11.xml","0",2,"","YES")
 db[12] = new dbRecord(false, "SLEEPER LIGHTING AND ACCESSORIES (Chapter 10)","s08185_12.xml","0",2,"","YES")
 db[13] = new dbRecord(false, "LIGHT SYSTEMS (Chapter 11)","s08185_13.xml","0",2,"","YES")
 db[14] = new dbRecord(false, "HEATER AND AIR CONDITIONER (Chapter 12)","s08185_14.xml","0",2,"","YES")
 db[15] = new dbRecord(true, "CONNECTOR COMPOSITES (Chapter 13)","s08185_15.xml","0",2,"","")
 db[16] = new dbRecord(false, "Left Gauge Cluster (Connector 423)","s08185_16.xml","0",3,"","YES")
 db[17] = new dbRecord(false, "Left Gauge Cluster (Connector 424)","s08185_17.xml","0",3,"","YES")
 db[18] = new dbRecord(false, "Left Gauge Cluster - Gauge Information","s08185_18.xml","0",3,"","YES")
 db[19] = new dbRecord(false, "Left Gauge Cluster - Terminal Information","s08185_19.xml","0",3,"","YES")
 db[20] = new dbRecord(false, "Left Gauge Cluster - Terminal Information","s08185_20.xml","0",3,"","YES")
 db[21] = new dbRecord(false, "Right Gauge Cluster (Connector 420)","s08185_21.xml","0",3,"","YES")
 db[22] = new dbRecord(false, "Right Gauge Cluster - Gauge Information","s08185_22.xml","0",3,"","YES")
 db[23] = new dbRecord(false, "Right Gauge Cluster - Terminal Information","s08185_23.xml","0",3,"","YES")
 db[24] = new dbRecord(false, "Speedometer/Tachometer Module - Terminal Information","s08185_24.xml","0",3,"","YES")
 db[25] = new dbRecord(false, "Speedometer/Tachometer Module - Terminal Information","s08185_25.xml","0",3,"","YES")
 db[26] = new dbRecord(false, "Connector Composites (1), (2), (3)","s08185_26.xml","0",3,"","YES")
 db[27] = new dbRecord(false, "Connector Composites (4), (5), (9), (11), (12), (15),","s08185_27.xml","0",3,"","YES")
 db[28] = new dbRecord(false, "Connector Composites (20), (27), (28), (40), (41), (42)","s08185_28.xml","0",3,"","YES")
 db[29] = new dbRecord(false, "Connector Composites (43), (65), (66), (70), (71)","s08185_29.xml","0",3,"","YES")
 db[30] = new dbRecord(false, "Connector Composites (72), (73), (76), (77), (93)","s08185_30.xml","0",3,"","YES")
 db[31] = new dbRecord(false, "Connector Composites (94), (100), (105), (112), (113), (115)","s08185_31.xml","0",3,"","YES")
 db[32] = new dbRecord(false, "Connector Composites (116), (117), (118), (127A), (128)","s08185_32.xml","0",3,"","YES")
 db[33] = new dbRecord(false, "Connector Composites (137), (139), (141), (142), (143), (144), (145), (146), (147), (148)","s08185_33.xml","0",3,"","YES")
 db[34] = new dbRecord(false, "Connector Composites (149), (152), (159), (165), (161), (162)","s08185_34.xml","0",3,"","YES")
 db[35] = new dbRecord(false, "Connector Composites (166), (167), (170), (171), (180)","s08185_35.xml","0",3,"","YES")
 db[36] = new dbRecord(false, "Connector Composite (190)","s08185_36.xml","0",3,"","YES")
 db[37] = new dbRecord(false, "Connector Composites (200), (201), (211), (216), (217), (218)","s08185_37.xml","0",3,"","YES")
 db[38] = new dbRecord(false, "Connector Composites (227)","s08185_38.xml","0",3,"","YES")
 db[39] = new dbRecord(false, "Connector Composites (228), (229), (230)","s08185_39.xml","0",3,"","YES")
 db[40] = new dbRecord(false, "Connector Composites (235), (236), (241), (243), (249), (250)","s08185_40.xml","0",3,"","YES")
 db[41] = new dbRecord(false, "Connector Composites (251), (252), (260), (267)","s08185_41.xml","0",3,"","YES")
 db[42] = new dbRecord(false, "Connector Composites (273), (268), (275), (278), (282), (282), (289)","s08185_42.xml","0",3,"","YES")
 db[43] = new dbRecord(false, "Connector Composites (290), (291), (292), (294), (296)","s08185_43.xml","0",3,"","YES")
 db[44] = new dbRecord(false, "Connector Composites (298), (299), (303), (311), (312), (313), (314), (315)","s08185_44.xml","0",3,"","YES")
 db[45] = new dbRecord(false, "Connector Composites (316), (318), (350), (351), (352), (353), (354)","s08185_45.xml","0",3,"","YES")
 db[46] = new dbRecord(false, "Connector Composites (355), (360), (363), (379)","s08185_46.xml","0",3,"","YES")
 db[47] = new dbRecord(false, "Connector Composites (396), (400), (402), (403), (404)","s08185_47.xml","0",3,"","YES")
 db[48] = new dbRecord(false, "Connector Composites (406), (409), (417), (418), (420), (421)","s08185_48.xml","0",3,"","YES")
 db[49] = new dbRecord(false, "Connector Composites (422), (423), (424), (426)","s08185_49.xml","0",3,"","YES")
 db[50] = new dbRecord(false, "Connector Composites (427), (428), (429), (430)","s08185_50.xml","0",3,"","YES")
 db[51] = new dbRecord(false, "Connector Composites (431), (432), (433), (434), (435)","s08185_51.xml","0",3,"","YES")
 db[52] = new dbRecord(false, "Connector Composites (436), (437), (438), (439), (440), (441), (442)","s08185_52.xml","0",3,"","YES")
 db[53] = new dbRecord(false, "Connector Composites (443), (444), (446), (450), (451), (453), (454)","s08185_53.xml","0",3,"","YES")
 db[54] = new dbRecord(false, "Connector Composites (455), (456), (460), (462 F1, F2, F3)","s08185_54.xml","0",3,"","YES")
 db[55] = new dbRecord(false, "Connector Composites (462), (463)","s08185_55.xml","0",3,"","YES")
 db[56] = new dbRecord(false, "Connector Composites (463 F9, R5, R6, R7, R8)","s08185_56.xml","0",3,"","YES")
 db[57] = new dbRecord(false, "Connector Composites (464)","s08185_57.xml","0",3,"","YES")
 db[58] = new dbRecord(false, "Connector Composite (464), (465), (468), (470), (471), (480)","s08185_58.xml","0",3,"","YES")
 db[59] = new dbRecord(false, "Connector Composites (489), (490), (491), (492), (494), (495), (497), (498), (499)","s08185_59.xml","0",3,"","YES")
 db[60] = new dbRecord(false, "Connector Composites (501), (503), (504), (506)","s08185_60.xml","0",3,"","YES")
 db[61] = new dbRecord(false, "Connector Composites (509), (511), (512), (513), (514), (515)","s08185_61.xml","0",3,"","YES")
 db[62] = new dbRecord(false, "Connector Composites (517), (520), (521), (522), (523), (524), (525), (526)","s08185_62.xml","0",3,"","YES")
 db[63] = new dbRecord(false, "Connector Composites (528), (529), (530), (531), (560), (562), (580), (581)","s08185_63.xml","0",3,"","YES")
 db[64] = new dbRecord(false, "Connector Composites (600), (615), (616), (617), (618), (624), (625), (629), (630)","s08185_64.xml","0",3,"","YES")
 db[65] = new dbRecord(false, "Connector Composites (634), (640), (659), (662), (668), (669)","s08185_65.xml","0",3,"","YES")
 db[66] = new dbRecord(false, "Connector Composites (675), (676), (690)","s08185_66.xml","0",3,"","YES")
 db[67] = new dbRecord(false, "Connector Composites (753), (755), (766), (767), (768), (769), (770)","s08185_67.xml","0",3,"","YES")
 db[68] = new dbRecord(false, "Connector Composites  (771), (774), (775), (776), (777), (778), (823)","s08185_68.xml","0",3,"","YES")
 db[69] = new dbRecord(false, "Connector Composites (854), (922), (923), (935)","s08185_69.xml","0",3,"","YES")
 db[70] = new dbRecord(false, "Connector Composites (962), (963), (1075), (1091)","s08185_70.xml","0",3,"","YES")
 db[71] = new dbRecord(false, "Connector Composites (1093), (1094), (1095), (1097), (1098)","s08185_71.xml","0",3,"","YES")
 db[72] = new dbRecord(false, "Connector Composites (1099), (1110), (1112), (1113), (1137), (1161), (1160), Junction Points","s08185_72.xml","0",3,"","YES")
 db[73] = new dbRecord(false, "FUSES, CIRCUIT BREAKERS, RELAYS (Chapter 14)","s08185_73.xml","0",2,"","YES")
// AHJO - In the following function the parameter 'occurs' was added Oct/Nov 2001
function dbRecord(mother,display,URL,occurs,indent,statusMsg,link){
	this.mother = mother   // is this item a parent?
	this.display = display // text to display
	this.URL = URL         // used to link to TOC
	this.occurances =  occurs  // how many times does search occur - THIS LINE WAS ADDED by AHJO
	this.indent = indent   // how many levels nested?
	this.statusMsg = statusMsg  // descriptive text for status bar 
	this.link = link  //  link tied to text; if empty string, item appears as straight text
	return this
}
// pre-load all images into cache
var collapsedImg = new Image(widgetWidth,widgetHeight)
collapsedImg.src = collapsedWidget
var expandedImg = new Image(widgetWidth,widgetHeight)
expandedImg.src = expandedWidget
var endpointImg = new Image(widgetWidth,widgetHeight)
endpointImg.src = endpointWidget
// mainframeURL = parent.mainframe.document.URL // get URL of mainframe 
// ** functions that get and set persistent cookie data **
// set cookie data
var mycookie = document.cookie
function setCurrState(setting) {
        mycookie = document.cookie = "currState=" + escape(setting)
}
// retrieve cookie data
function getCurrState() {
        var label = "currState="
        var labelLen = label.length
        var cLen = mycookie.length
        var i = 0
        while (i < cLen) {
                var j = i + labelLen
                if (mycookie.substring(i,j) == label) {
                        var cEnd = mycookie.indexOf(";",j)
                        if (cEnd ==     -1) {
                                cEnd = mycookie.length
                       }
                        return unescape(mycookie.substring(j,cEnd))
                }
               i++
       }
        return ""
}
// **function that updates persistent storage of state**
// toggles an outline mother entry, storing new value in the cookie
function toggle(n) {
	if (n != 0) {
		var newString = ""
		var currState = getCurrState() // of whole outline
		var expanded = currState.charAt(n-1) // of clicked item
		newString += currState.substring(0,n-1)
		newString += expanded ^ 1 // Bitwise XOR clicked item
		newString += currState.substring(n,currState.length)
		setCurrState(newString) // write new state back to cookie
	}
}
// **functions used in assembling updated outline**
// returns the proper GIF file name for each entry's control
function getGIF(n) {
	var mom = db[n].mother  // is entry a parent?
	var expanded = getCurrState().charAt(n-1) // of clicked item
	if (!mom) {
		return endpointWidget
	} else {
		if (expanded == 1) {
			return expandedWidget
		}
	}
	return collapsedWidget
}
// returns the proper status line text based on the icon style
function getGIFStatus(n) {
	var mom = db[n].mother  // is entry a parent
	var expanded = getCurrState().charAt(n-1) // of rolled item
	if (!mom) {
		return "No further items"
	} else {
		if (expanded == 1) {
			return "Click to collapse nested items"
		}
	}
	return "Click to expand nested items"
}
// initialize 'current state' storage field
if (getCurrState() == "" || getCurrState().length != (db.length-1)) {
	initState = ""
	for (i = 1; i < db.length; i++) {
		initState += "0"
	}
	setCurrState(initState)
}
// end -->


    </SCRIPT>
</HEAD>
<BODY>
<SCRIPT LANGUAGE="JavaScript1.1">
<!-- start
// build new outline based on the values of the cookie
// and data points in the outline data array.
// This fires each time the user clicks on a control,
// because the HREF for each one reloads the current document.
var newOutline = ""
var prevIndentDisplayed = 0
var showMyDaughter = 0
// cycle through each entry in the outline array
for (var i = 1; i < db.length; i++) {
	var theGIF = getGIF(i)				// get the image
	var theGIFStatus = getGIFStatus(i)  // get the status message
	var currIndent = db[i].indent		// get the indent level
	var expanded = getCurrState().charAt(i-1) // current state
        db[i].currentrow = ""

	if (currIndent == 0 || currIndent == 1 || db[i].currentrow == "currentrow" || currIndent <= prevIndentDisplayed || (showMyDaughter == 1 && (currIndent - prevIndentDisplayed == 1))) {
 // Phil added the if to remove the image from before the root element 
         if (currIndent != 0) {
			newOutline += "<SPAN class=\"" + db[i].currentrow + "\" style=\" position:relative;left:" + (indentPixels * currIndent) + "px;width:200px\"><A HREF=\"javascript:history.go(0)\" onMouseOver=\"window.status=\'" + theGIFStatus + "\';return true;\" onClick=\"toggle(" + i + ");return " + "\">"
			newOutline += "<IMG ALIGN=TOP SRC=\"" + theGIF + "\" HEIGHT=" + widgetHeight + " WIDTH=" + widgetWidth + " BORDER=0></A>"
			newOutline += "<SPAN title=\"" + db[i].display + "\" style=\"width:" + (200-widgetWidth) + "px\">"
			}
			if (db[i].link == "" || db[i].link == null) {
				newOutline += " <font size='1'>" +  db[i].display + "</font></SPAN></SPAN>" + "<BR>"	// no link, just a listed item
			} else {
                 if (db[i].occurances > 0)	{ 
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><font size='1'>" + db[i].display + "&nbsp;&nbsp;(" + db[i].occurances + ")</font></A></SPAN></SPAN><BR>"
			} else {
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><font size='1'>" + db[i].display + "</font></A></SPAN></SPAN><BR>"
			}
			}
		prevIndentDisplayed = currIndent
		showMyDaughter = expanded
		if (db.length > 25) {
			document.write(newOutline)
			newOutline = ""
		}
	}
}
document.write(newOutline)
// end -->


</SCRIPT>
</BODY>
</html>
