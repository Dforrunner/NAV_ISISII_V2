<HTML>
<HEAD>
    <TITLE>Service Section TOC</TITLE>
    <LINK href="../style.css" rel="STYLESHEET" type="text/css">
    <SCRIPT LANGUAGE="JavaScript1.1">
<!-- begin hiding
var indentPixels = 15
var collapsedWidget = "../images/plus.gif"
var expandedWidget = "../images/minus.gif"
var endpointWidget = "../images/end.gif"
var widgetWidth = 17
var widgetHeight = 18
var displayTarget = "mainframe"
// AHJO - In the folowing db the fourth field (after the xml file name) is new and set to "0" 
var db = new Array()
 db[1] = new dbRecord(true, "Body Builder Electrical Data Book for Models Built January 2001 to February 28, 2007","s08300_1.xml","0",0,"","YES")
 db[2] = new dbRecord(true, "General Electrical","s08300_SBB7300001.xml","0",0,"","YES")
 db[3] = new dbRecord(false, "Description","s08300_SBB7300001.xml","0",1,"","YES")
 db[4] = new dbRecord(false, "Electrical Abbreviations","s08300_3.xml","0",1,"","YES")
 db[5] = new dbRecord(false, "Color Code System For International&#174; Truck","s08300_4.xml","0",1,"","YES")
 db[6] = new dbRecord(false, "Recommended Circuit Protection","s08300_5.xml","0",1,"","YES")
 db[7] = new dbRecord(false, "Circuit Protection Devices","s08300_6.xml","0",1,"","YES")
 db[8] = new dbRecord(false, "Electrical Components Commonly Used By Equipment Installers","s08300_7.xml","0",1,"","YES")
 db[9] = new dbRecord(false, "Standard Terminals and Splices","s08300_8.xml","0",1,"","YES")
 db[10] = new dbRecord(false, "Splice Inspection","s08300_9.xml","0",1,"","YES")
 db[11] = new dbRecord(false, "Splice Clip Installation","s08300_10.xml","0",1,"","YES")
 db[12] = new dbRecord(false, "Crimp and Seal Splice Sleeve Installation","s08300_11.xml","0",1,"","YES")
 db[13] = new dbRecord(false, "Data Link Repair","s08300_12.xml","0",1,"","YES")
 db[14] = new dbRecord(false, "Wire Splicing","s08300_13.xml","0",1,"","YES")
 db[15] = new dbRecord(false, "Service Procedure","s08300_14.xml","0",1,"","YES")
 db[16] = new dbRecord(false, "J1939 HIGH SPEED DATA LINK CABLE (SAE J1939/11) - Prior to January 2002","s08300_15.xml","0",1,"","YES")
 db[17] = new dbRecord(false, "J1939 HIGH SPEED DATA LINK CABLE (SAE J1939/15) - Beginning January 2002","s08300_16.xml","0",1,"","YES")
 db[18] = new dbRecord(false, "Suppression","s08300_17.xml","0",1,"","YES")
 db[19] = new dbRecord(false, "Welding Information","s08300_18.xml","0",1,"","YES")
 db[20] = new dbRecord(false, "Routing Guidelines","s08300_19.xml","0",1,"","YES")
 db[21] = new dbRecord(false, "Electrical Dos and Don'ts","s08300_20.xml","0",1,"","YES")
 db[22] = new dbRecord(false, "How Do I - General Information","s08300_BBHDI.xml","0",1,"","YES")
 db[23] = new dbRecord(true, "International&#174; Diamond Logic&#8482; Electrical System Overview ","s08300_SBB7300002.xml","0",0,"","YES")
 db[24] = new dbRecord(false, "Multiplexing Architecture","s08300_SBB7300002.xml","0",1,"","YES")
 db[25] = new dbRecord(false, "Data Links","s08300_23.xml","0",1,"","YES")
 db[26] = new dbRecord(false, "Electrical System Controller (ESC)","s08300_24.xml","0",1,"","YES")
 db[27] = new dbRecord(false, "Remote Power Module (RPM)","s08300_25.xml","0",1,"","YES")
 db[28] = new dbRecord(true, "Electrical Features","s08300_SBB7300003.xml","0",0,"","YES")
 db[29] = new dbRecord(false, "General","s08300_SBB7300003.xml","0",1,"","YES")
 db[30] = new dbRecord(true, "Electrical System Controller (ESC)","s08300_27.xml","0",1,"","")
 db[31] = new dbRecord(false, "Electrical System Controller (3200, 4200, 4300, 4400, 7000 Models)","s08300_28.xml","0",2,"","YES")
 db[32] = new dbRecord(false, "60ACW - Body Integration, I/O Expansion Harness","s08300_BB60ACW.xml","0",2,"","YES")
 db[33] = new dbRecord(false, "Park, Dome and Brake (Stop Lamp) ESC Connections","s08300_BBESC.xml","0",2,"","YES")
 db[34] = new dbRecord(true, "Battery, Ignition and Accessory Taps","s08300_31.xml","0",1,"","")
 db[35] = new dbRecord(false, "Standard Battery and Ignition Taps","s08300_31.xml","0",2,"","YES")
 db[36] = new dbRecord(false, "08WAD, 08WCS, 08WHX and 08WHY - Battery Disconnect Switch","s08300_BB08WAD.xml","0",2,"","YES")
 db[37] = new dbRecord(false, "60AAC - International&#174; Diamond Logic&#174; PowerPack 3","s08300_BB60AAC.xml","0",2,"","YES")
 db[38] = new dbRecord(false, "Ground Connections ","s08300_34.xml","0",1,"","YES")
 db[39] = new dbRecord(true, "Fused Battery Connections Outside Cab","s08300_35.xml","0",1,"","")
 db[40] = new dbRecord(false, "08WHZ - Body Power Feeds","s08300_BB08WHZ.xml","0",2,"","YES")
 db[41] = new dbRecord(false, "08TKK - Trailer Auxiliary Circuit","s08300_BB08TKK.xml","0",2,"","YES")
 db[42] = new dbRecord(false, "Fused Battery Connections Inside Cab - 08518, 08718, 08WCK","s08300_BB08518.xml","0",1,"","YES")
 db[43] = new dbRecord(true, "CB and 2-Way Radio Connections Inside Cab","s08300_39.xml","0",1,"","")
 db[44] = new dbRecord(false, "08RCB and 08RBK - CB Radios","s08300_BB08RBK.xml","0",2,"","YES")
 db[45] = new dbRecord(false, "08REA and 08RGA - 2-Way Radio","s08300_BB08REA.xml","0",2,"","YES")
 db[46] = new dbRecord(true, "Gauge Cluster - Optional Gauges","s08300_42.xml","0",1,"","")
 db[47] = new dbRecord(false, "04SBL - Instrument Cluster - Adding Gauges","s08300_BB04SBL.xml","0",2,"","YES")
 db[48] = new dbRecord(false, "16HGG - Instrument Cluster - Adding Gauges","s08300_BB16HGG.xml","0",2,"","YES")
 db[49] = new dbRecord(false, "16HGH - Instrument Cluster - Adding Gauges","s08300_BB16HGH.xml","0",2,"","YES")
 db[50] = new dbRecord(false, "16HGJ - Instrument Cluster - Adding Gauges","s08300_BB16HGJ.xml","0",2,"","YES")
 db[51] = new dbRecord(false, "16HGL - Instrument Cluster - Adding Gauges","s08300_BB16HGL.xml","0",2,"","YES")
 db[52] = new dbRecord(false, "16HGN - Instrument Cluster - Adding Gauges","s08300_BB16HGN.xml","0",2,"","YES")
 db[53] = new dbRecord(false, "16HKA - Instrument Cluster - Omit Fault Codes","s08300_BB16HKA.xml","0",2,"","YES")
 db[54] = new dbRecord(true, "Lights","s08300_50.xml","0",1,"","")
 db[55] = new dbRecord(false, "Stop/Turn/Tail","s08300_51.xml","0",2,"","YES")
 db[56] = new dbRecord(false, "Trailer Sockets","s08300_52.xml","0",2,"","YES")
 db[57] = new dbRecord(false, "Fog/Driving Lights","s08300_53.xml","0",2,"","YES")
 db[58] = new dbRecord(false, "Work Light / Aux. Rear Light","s08300_54.xml","0",2,"","YES")
 db[59] = new dbRecord(false, "Auxiliary Front Lights","s08300_55.xml","0",2,"","YES")
 db[60] = new dbRecord(false, "Other External Lighting","s08300_56.xml","0",2,"","YES")
 db[61] = new dbRecord(false, "In Cab Lighting","s08300_57.xml","0",2,"","YES")
 db[62] = new dbRecord(false, "Hazard Light Override Stop Lights","s08300_58.xml","0",2,"","YES")
 db[63] = new dbRecord(false, "Lights On With Wipers (LOWW) / Day Time Running Lights (DTRL)","s08300_BBLOWW.xml","0",2,"","YES")
 db[64] = new dbRecord(false, "08WPZ - Test Exterior Lamps Except Back Ups","s08300_BB08WPZ.xml","0",2,"","YES")
 db[65] = new dbRecord(false, "08WRB - Headlights On With Wipers","s08300_BB08WRB.xml","0",2,"","YES")
 db[66] = new dbRecord(true, "Hvac","s08300_62.xml","0",1,"","")
 db[67] = new dbRecord(false, "16WKB - Air Conditioning","s08300_62.xml","0",2,"","YES")
 db[68] = new dbRecord(true, "Automatic Transmission Interfaces","s08300_63.xml","0",1,"","")
 db[69] = new dbRecord(false, "Automatic Transmission Interfaces","s08300_BB13WTA.xml","0",2,"","YES")
 db[70] = new dbRecord(true, "Power Windows / Locks, Remote Keyless Entry","s08300_65.xml","0",1,"","")
 db[71] = new dbRecord(false, "16WJU, 16WJV and 16WKZ - Electric Windows, Remote Lock and Unlock, and Use of the Aux Feature","s08300_BB16WJU.xml","0",2,"","YES")
 db[72] = new dbRecord(true, "Electric Trailer Brakes / Lights","s08300_67.xml","0",1,"","")
 db[73] = new dbRecord(false, "08HAG and 08HAH - Electric Trailer Brakes","s08300_BB08HAG.xml","0",2,"","YES")
 db[74] = new dbRecord(true, "Engine Control","s08300_69.xml","0",1,"","")
 db[75] = new dbRecord(false, "12VXY - Remote Mounted Engine Control","s08300_BB12VXY.xml","0",2,"","YES")
 db[76] = new dbRecord(true, "Pto","s08300_71.xml","0",1,"","")
 db[77] = new dbRecord(false, "60ABA - PTO Accommodation Cable Shift","s08300_BB60ABA.xml","0",2,"","YES")
 db[78] = new dbRecord(false, "60ABB - PTO Accommodation Muncie&#174; Powerflex&#8482; Lectra-Shift","s08300_BB60ABB.xml","0",2,"","YES")
 db[79] = new dbRecord(false, "60ABE - PTO Accommodation for Electric over Hydraulic PTO","s08300_BB60ABE.xml","0",2,"","YES")
 db[80] = new dbRecord(false, "60ABK - PTO Accommodation Electric over Air Non-Clutched","s08300_BB60ABK.xml","0",2,"","YES")
 db[81] = new dbRecord(false, "60ABL - PTO Accommodation Electric Over Air Clutched","s08300_BB60ABL.xml","0",2,"","YES")
 db[82] = new dbRecord(false, "13XAA - PTO Control","s08300_BB13XAA.xml","0",2,"","YES")
 db[83] = new dbRecord(false, "16WLM - PTO Hourmeter","s08300_BB16WLM.xml","0",2,"","YES")
 db[84] = new dbRecord(true, "Remote Throttle","s08300_79.xml","0",1,"","")
 db[85] = new dbRecord(false, "60AJA - Remote Throttle Control Interlocked to Park Brake Applied - Recovery Only","s08300_BB60AJA.xml","0",2,"","YES")
 db[86] = new dbRecord(false, "60AJE - Remote Throttle Control Interlocked to Park Brake Applied","s08300_BB60AJE.xml","0",2,"","YES")
 db[87] = new dbRecord(false, "60AJG - Remote Throttle Control Programmable Mode for Various Switch Actions","s08300_BB60AJG.xml","0",2,"","YES")
 db[88] = new dbRecord(false, "60AJH - Remote Throttle Control for Dual Function Engine Running / Emergency Power Engine Off","s08300_BB60AJH.xml","0",2,"","YES")
 db[89] = new dbRecord(false, "60AJJ - Remote Throttle Control Interlocked to Park Brake Applied - Refuse","s08300_BB60AJJ.xml","0",2,"","YES")
 db[90] = new dbRecord(true, "Remote Start / Stop","s08300_85.xml","0",1,"","")
 db[91] = new dbRecord(false, "60ABC - Remote Start/Stop","s08300_BB60ABC.xml","0",2,"","YES")
 db[92] = new dbRecord(false, "60ABD - Remote Start/Stop with Emergency Pump","s08300_BB60ABD.xml","0",2,"","YES")
 db[93] = new dbRecord(true, "Special Gauge Cluster Indicators and Alarms","s08300_88.xml","0",1,"","")
 db[94] = new dbRecord(false, "60AJC - Two Indicator Lights and Audible Alarms Programmable Mode for Various Switch Actions (Waste Solution)","s08300_BB60AJC.xml","0",2,"","YES")
 db[95] = new dbRecord(false, "60AJD - Body Integrated, Indicator Lights (Utility Solutions) ","s08300_BB60AJD.xml","0",2,"","YES")
 db[96] = new dbRecord(false, "60AJK - Dump Box Indicator Lights And Alarm","s08300_BB60AJK.xml","0",2,"","YES")
 db[97] = new dbRecord(true, "In Cab Switch Controls for Body Accessories Using Remote Power Modules","s08300_92.xml","0",1,"","")
 db[98] = new dbRecord(false, "Remote Power Modules (RPM)","s08300_BB08SAJ.xml","0",2,"","YES")
 db[99] = new dbRecord(false, "60AAA (One), 60AAB (Two) - Remote Power Modules (RPM)","s08300_BB60AAA.xml","0",2,"","YES")
 db[100] = new dbRecord(false, "08WTJ - Switch Body Circuits Frame MTG Rear","s08300_BB08WTJ.xml","0",2,"","YES")
 db[101] = new dbRecord(true, "In Cab and External Switch (3-Way) Controls for Body Accessories","s08300_96.xml","0",1,"","")
 db[102] = new dbRecord(false, "60ACS - One Momentary Rocker Switch / Remote Switch Capability ","s08300_BB60ACS.xml","0",2,"","YES")
 db[103] = new dbRecord(false, "60ACT - Two Momentary Rocker Switches/ Remote Switch Capability","s08300_BB60ACT.xml","0",2,"","YES")
 db[104] = new dbRecord(false, "60ACU - Three Momentary Rocker Switches/ Remote Switch Capability","s08300_BB60ACU.xml","0",2,"","YES")
 db[105] = new dbRecord(true, "High Current In Cab Switch Controls for Body Accessories","s08300_100.xml","0",1,"","")
 db[106] = new dbRecord(false, "60ACE - Dual Output Latched Switch 40 Amps","s08300_BB60ACE.xml","0",2,"","YES")
 db[107] = new dbRecord(false, "08XBK - Auxiliary 40 Amp Circuit, Switch Controlled","s08300_BB08XBK.xml","0",2,"","YES")
 db[108] = new dbRecord(false, "08WJA, 08WJB - Power Source For Lift Gate","s08300_BB08WJA.xml","0",2,"","YES")
 db[109] = new dbRecord(true, "Interlocked Switch Controls for Body Accessories","s08300_104.xml","0",1,"","")
 db[110] = new dbRecord(false, "60ACG - One Interlocked Latched Switch Disengage at 30 MPH","s08300_BB60ACG.xml","0",2,"","YES")
 db[111] = new dbRecord(false, "60ACH - Two Interlocked Latched Switch Disengage at 30 MPH","s08300_BB60ACH.xml","0",2,"","YES")
 db[112] = new dbRecord(true, "Remote Air Solenoid Module","s08300_AIR.xml","0",1,"","")
 db[113] = new dbRecord(false, "08WGA, 08WGB, 08WGC, 08WGD, 08WGP and 08WGR - TEM Air Solenoids","s08300_BB08WGA.xml","0",2,"","YES")
 db[114] = new dbRecord(false, "Switches - General Description","s08300_109.xml","0",1,"","YES")
 db[115] = new dbRecord(true, "Cab Features","s08300_CAB.xml","0",1,"","")
 db[116] = new dbRecord(false, "08WGL - Windshield Wiper Speed Control","s08300_BB08WGL.xml","0",2,"","YES")
// AHJO - In the following function the parameter 'occurs' was added Oct/Nov 2001
function dbRecord(mother,display,URL,occurs,indent,statusMsg,link){
	this.mother = mother   // is this item a parent?
	this.display = display // text to display
	this.URL = URL         // used to link to TOC
	this.occurances =  occurs  // how many times does search occur - THIS LINE WAS ADDED by AHJO
	this.indent = indent   // how many levels nested?
	this.statusMsg = statusMsg  // descriptive text for status bar 
	this.link = link  //  link tied to text; if empty string, item appears as straight text
	return this
}
// pre-load all images into cache
var collapsedImg = new Image(widgetWidth,widgetHeight)
collapsedImg.src = collapsedWidget
var expandedImg = new Image(widgetWidth,widgetHeight)
expandedImg.src = expandedWidget
var endpointImg = new Image(widgetWidth,widgetHeight)
endpointImg.src = endpointWidget
// mainframeURL = parent.mainframe.document.URL // get URL of mainframe 
// ** functions that get and set persistent cookie data **
// set cookie data
var mycookie = document.cookie
function setCurrState(setting) {
        mycookie = document.cookie = "currState=" + escape(setting)
}
// retrieve cookie data
function getCurrState() {
        var label = "currState="
        var labelLen = label.length
        var cLen = mycookie.length
        var i = 0
        while (i < cLen) {
                var j = i + labelLen
                if (mycookie.substring(i,j) == label) {
                        var cEnd = mycookie.indexOf(";",j)
                        if (cEnd ==     -1) {
                                cEnd = mycookie.length
                       }
                        return unescape(mycookie.substring(j,cEnd))
                }
               i++
       }
        return ""
}
// **function that updates persistent storage of state**
// toggles an outline mother entry, storing new value in the cookie
function toggle(n) {
	if (n != 0) {
		var newString = ""
		var currState = getCurrState() // of whole outline
		var expanded = currState.charAt(n-1) // of clicked item
		newString += currState.substring(0,n-1)
		newString += expanded ^ 1 // Bitwise XOR clicked item
		newString += currState.substring(n,currState.length)
		setCurrState(newString) // write new state back to cookie
	}
}
// **functions used in assembling updated outline**
// returns the proper GIF file name for each entry's control
function getGIF(n) {
	var mom = db[n].mother  // is entry a parent?
	var expanded = getCurrState().charAt(n-1) // of clicked item
	if (!mom) {
		return endpointWidget
	} else {
		if (expanded == 1) {
			return expandedWidget
		}
	}
	return collapsedWidget
}
// returns the proper status line text based on the icon style
function getGIFStatus(n) {
	var mom = db[n].mother  // is entry a parent
	var expanded = getCurrState().charAt(n-1) // of rolled item
	if (!mom) {
		return "No further items"
	} else {
		if (expanded == 1) {
			return "Click to collapse nested items"
		}
	}
	return "Click to expand nested items"
}
// initialize 'current state' storage field
if (getCurrState() == "" || getCurrState().length != (db.length-1)) {
	initState = ""
	for (i = 1; i < db.length; i++) {
		initState += "0"
	}
	setCurrState(initState)
}
// end -->


    </SCRIPT>
</HEAD>
<BODY>
<h3>Body Builder Electrical Data Book for Models Built January 2001 to February 28, 2007</h3>
<SCRIPT LANGUAGE="JavaScript1.1">
<!-- start
// build new outline based on the values of the cookie
// and data points in the outline data array.
// This fires each time the user clicks on a control,
// because the HREF for each one reloads the current document.
var newOutline = ""
var prevIndentDisplayed = 0
var showMyDaughter = 0
// cycle through each entry in the outline array
for (var i = 1; i < db.length; i++) {
	var theGIF = getGIF(i)				// get the image
	var theGIFStatus = getGIFStatus(i)  // get the status message
	var currIndent = db[i].indent		// get the indent level
	var expanded = getCurrState().charAt(i-1) // current state
        db[i].currentrow = ""

	if (currIndent == 0 || currIndent == 1 || db[i].currentrow == "currentrow" || currIndent <= prevIndentDisplayed || (showMyDaughter == 1 && (currIndent - prevIndentDisplayed == 1))) {
 // Phil added the if to remove the image from before the root element 
         if (currIndent != 0) {
			newOutline += "<SPAN class=\"" + db[i].currentrow + "\" style=\" position:relative;left:" + (indentPixels * currIndent) + "px;width:200px\"><A HREF=\"javascript:history.go(0)\" onMouseOver=\"window.status=\'" + theGIFStatus + "\';return true;\" onClick=\"toggle(" + i + ");return " + "\">"
			newOutline += "<IMG ALIGN=TOP SRC=\"" + theGIF + "\" HEIGHT=" + widgetHeight + " WIDTH=" + widgetWidth + " BORDER=0></A>"
			newOutline += "<SPAN title=\"" + db[i].display + "\" style=\"width:" + (200-widgetWidth) + "px\">"
			}
			if (db[i].link == "" || db[i].link == null) {
				newOutline += " <font size='1'>" +  db[i].display + "</font></SPAN></SPAN>" + "<BR>"	// no link, just a listed item
			} else {
                 if (db[i].occurances > 0)	{ 
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><font size='1'>" + db[i].display + "&nbsp;&nbsp;(" + db[i].occurances + ")</font></A></SPAN></SPAN><BR>"
			} else {
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><font size='1'>" + db[i].display + "</font></A></SPAN></SPAN><BR>"
			}
			}
		prevIndentDisplayed = currIndent
		showMyDaughter = expanded
		if (db.length > 25) {
			document.write(newOutline)
			newOutline = ""
		}
	}
}
document.write(newOutline)
// end -->


</SCRIPT>
</BODY>
</html>
