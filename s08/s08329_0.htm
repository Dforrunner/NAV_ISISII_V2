<HTML>
<HEAD>
    <TITLE>Service Section TOC</TITLE>
    <LINK href="../style.css" rel="STYLESHEET" type="text/css">
    <SCRIPT LANGUAGE="JavaScript1.1">
<!-- begin hiding
var indentPixels = 15
var collapsedWidget = "../images/plus.gif"
var expandedWidget = "../images/minus.gif"
var endpointWidget = "../images/end.gif"
var widgetWidth = 17
var widgetHeight = 18
var displayTarget = "mainframe"
// AHJO - In the folowing db the fourth field (after the xml file name) is new and set to "0" 
var db = new Array()
 db[1] = new dbRecord(true, "BE, CE Bus Starting March, 2007 - ELECTRICAL CIRCUIT DIAGRAMS (Chassis Only)","s08329_1.xml","0",0,"","YES")
 db[2] = new dbRecord(true, "BE, CE Bus Chassis Circuit Diagrams","s08329_S08329A.xml","0",0,"","YES")
 db[3] = new dbRecord(false, "Table of Contents (Chapter 1)","s08329_S08329A.xml","0",1,"","YES")
 db[4] = new dbRecord(true, "INSTRUCTIONS AND CHARTS (Chapter 2)","s08329_3.xml","0",1,"","")
 db[5] = new dbRecord(false, "Abbreviations, p. 1","s08329_3.xml","0",2,"","YES")
 db[6] = new dbRecord(false, "Acronyms, p. 2","s08329_4.xml","0",2,"","YES")
 db[7] = new dbRecord(false, "Circuit Diagram Instructions, p. 3","s08329_5.xml","0",2,"","YES")
 db[8] = new dbRecord(false, "Circuit Number Identification and Color, p. 4","s08329_6.xml","0",2,"","YES")
 db[9] = new dbRecord(false, "Circuit Number Identification and Color, p. 5","s08329_7.xml","0",2,"","YES")
 db[10] = new dbRecord(false, "Circuit Number Identification and Color, p. 6","s08329_8.xml","0",2,"","YES")
 db[11] = new dbRecord(false, "Lamp Bulb Chart, p. 7","s08329_9.xml","0",2,"","YES")
 db[12] = new dbRecord(false, "Relay Function and Wiring Guide, p. 8","s08329_10.xml","0",2,"","YES")
 db[13] = new dbRecord(false, "Schematic Symbol Chart, p. 9","s08329_11.xml","0",2,"","YES")
 db[14] = new dbRecord(false, "Schematic Symbol Chart, p. 10","s08329_12.xml","0",2,"","YES")
 db[15] = new dbRecord(false, "Schematic Symbol Chart, p. 11","s08329_13.xml","0",2,"","YES")
 db[16] = new dbRecord(false, "Schematic Symbol Chart, p. 12","s08329_14.xml","0",2,"","YES")
 db[17] = new dbRecord(true, "12 VOLT POWER DISTRIBUTION and Data Link (Chapter 3)","s08329_15.xml","0",1,"","")
 db[18] = new dbRecord(false, "Battery Feed, p. 1","s08329_15.xml","0",2,"","YES")
 db[19] = new dbRecord(false, "Accessory Feed, p. 2","s08329_16.xml","0",2,"","YES")
 db[20] = new dbRecord(false, "Ignition Feed, p. 3","s08329_17.xml","0",2,"","YES")
 db[21] = new dbRecord(false, "Ignition Feed, p. 4","s08329_18.xml","0",2,"","YES")
 db[22] = new dbRecord(false, "Ground - Platform, p. 5","s08329_19.xml","0",2,"","YES")
 db[23] = new dbRecord(false, "Ground - Platform, p. 6","s08329_20.xml","0",2,"","YES")
 db[24] = new dbRecord(false, "Ground - Chassis, p. 7","s08329_21.xml","0",2,"","YES")
 db[25] = new dbRecord(false, "Ground - Engine, p. 8","s08329_22.xml","0",2,"","YES")
 db[26] = new dbRecord(false, "J1939 Data Link - Platform and Diagnostic Connector, p. 9","s08329_23.xml","0",2,"","YES")
 db[27] = new dbRecord(false, "J1939 Data Link - Engine, p. 10","s08329_24.xml","0",2,"","YES")
 db[28] = new dbRecord(false, "J1939 Data Link - Chassis, p. 11","s08329_25.xml","0",2,"","YES")
 db[29] = new dbRecord(false, "J1708 Datalink Basic, p. 12","s08329_26.xml","0",2,"","YES")
 db[30] = new dbRecord(false, "Zero Volt Reference, p. 13","s08329_27.xml","0",2,"","YES")
 db[31] = new dbRecord(false, "J1939 Data Link Complete - Platform and Diagnostic Connector, p. 14","s08329_28.xml","0",2,"","YES")
 db[32] = new dbRecord(false, "J1939 Data Link Basic - Platform and Diagnostic Connector w/ LCT, p. 15","s08329_29.xml","0",2,"","YES")
 db[33] = new dbRecord(false, "J1939 Data Link Basic - Platform and Diagnostic Connector w/ WTEC, p. 16","s08329_30.xml","0",2,"","YES")
 db[34] = new dbRecord(false, "J1708 Data Link Complete, p. 17","s08329_31.xml","0",2,"","YES")
 db[35] = new dbRecord(true, "Charging and Cranking System (Chapter 4)","s08329_32.xml","0",1,"","")
 db[36] = new dbRecord(false, "Charging and Cranking - I6 / V8 Engine, p. 1","s08329_32.xml","0",2,"","YES")
 db[37] = new dbRecord(true, "Cab Accessories (Chapter 5)","s08329_33.xml","0",1,"","")
 db[38] = new dbRecord(false, "Horn and Steering Wheel Switches, p. 1","s08329_33.xml","0",2,"","YES")
 db[39] = new dbRecord(false, "Switch Pack, p. 2","s08329_34.xml","0",2,"","YES")
 db[40] = new dbRecord(false, "Windshield Wiper and Washer, High Beam, Flash to Pass and Turn Signal Systems, p. 3","s08329_35.xml","0",2,"","YES")
 db[41] = new dbRecord(false, "Windshield Wiper and Washer, High Beam, Flash to Pass and Turn Signal Systems, p. 4","s08329_36.xml","0",2,"","YES")
 db[42] = new dbRecord(false, "Driver's Air Conditioning (Optional), p. 5","s08329_37.xml","0",2,"","YES")
 db[43] = new dbRecord(false, "Compass and Temperature Display, p. 6","s08329_38.xml","0",2,"","YES")
 db[44] = new dbRecord(false, "Lighted Steering Wheel Switches, p. 7","s08329_39.xml","0",2,"","YES")
 db[45] = new dbRecord(false, "AC Compressor Control, p. 8","s08329_40.xml","0",2,"","YES")
 db[46] = new dbRecord(false, "Telematics System, p. 9","s08329_41.xml","0",2,"","YES")
 db[47] = new dbRecord(true, "Engine Electronics (Chapter 6)","s08329_42.xml","0",1,"","")
 db[48] = new dbRecord(false, "Electronic Engine Controls - I6 Engine, p. 1","s08329_42.xml","0",2,"","YES")
 db[49] = new dbRecord(false, "Electronic Engine Controls - I6 Engine, p. 2","s08329_43.xml","0",2,"","YES")
 db[50] = new dbRecord(false, "Electronic Engine Controls - I6 Engine, p. 3","s08329_44.xml","0",2,"","YES")
 db[51] = new dbRecord(false, "Fan and Shutter Wiring (Optional), p. 4","s08329_45.xml","0",2,"","YES")
 db[52] = new dbRecord(false, "Electronic Engine Controls - V8 Engine, p. 5","s08329_46.xml","0",2,"","YES")
 db[53] = new dbRecord(false, "Electronic Engine Controls - V8 Engine, p. 6","s08329_47.xml","0",2,"","YES")
 db[54] = new dbRecord(false, "Electronic Engine Controls - V8 Engine, p. 7","s08329_48.xml","0",2,"","YES")
 db[55] = new dbRecord(true, "GAuges and Warning Lights (Chapter 7)","s08329_49.xml","0",1,"","")
 db[56] = new dbRecord(false, "IP Gauges, p. 1","s08329_49.xml","0",2,"","YES")
 db[57] = new dbRecord(false, "Warning Lights, p. 2","s08329_50.xml","0",2,"","YES")
 db[58] = new dbRecord(false, "Blank Page, p. 3","s08329_51.xml","0",2,"","YES")
 db[59] = new dbRecord(false, "Engine Oil Pressure and Temperature, Speedometer, Tachometer, Voltmeter and Water Temperature Gauge Circuits, p. 4","s08329_52.xml","0",2,"","YES")
 db[60] = new dbRecord(false, "Instrument Gauge Cluster, p. 5","s08329_53.xml","0",2,"","YES")
 db[61] = new dbRecord(false, "Ammeter (Optional), p. 6","s08329_54.xml","0",2,"","YES")
 db[62] = new dbRecord(false, "Coolant Tank Level, p. 7","s08329_55.xml","0",2,"","YES")
 db[63] = new dbRecord(false, "Fuel Gauges, p. 8","s08329_56.xml","0",2,"","YES")
 db[64] = new dbRecord(false, "Park Brake, p. 9","s08329_57.xml","0",2,"","YES")
 db[65] = new dbRecord(false, "Air Pressure Inputs, p. 10","s08329_58.xml","0",2,"","YES")
 db[66] = new dbRecord(false, "Change Transmission Oil Filter Light and Exhaust Aftertreatment Indicators, p. 11","s08329_59.xml","0",2,"","YES")
 db[67] = new dbRecord(false, "Espar Coolant Heater with RSM Tank, p. 12","s08329_60.xml","0",2,"","YES")
 db[68] = new dbRecord(false, "Espar Coolant Heater with AF Fuel Tank, p. 13","s08329_61.xml","0",2,"","YES")
 db[69] = new dbRecord(true, "Chassis Accessories (Chapter 8)","s08329_62.xml","0",1,"","")
 db[70] = new dbRecord(false, "Air Dryer and Drain Valve, p. 1","s08329_62.xml","0",2,"","YES")
 db[71] = new dbRecord(false, "Fuel Heater System, p. 2","s08329_63.xml","0",2,"","YES")
 db[72] = new dbRecord(false, "ABS - Hydraulic I6, p. 3","s08329_64.xml","0",2,"","YES")
 db[73] = new dbRecord(false, "ABS - Hydraulic I6, p. 4","s08329_65.xml","0",2,"","YES")
 db[74] = new dbRecord(false, "Air Solenoid Module (Optional), p. 5","s08329_66.xml","0",2,"","YES")
 db[75] = new dbRecord(false, "Bendix Air ABS, p. 6","s08329_67.xml","0",2,"","YES")
 db[76] = new dbRecord(false, "Bendix Air ABS6, p. 7","s08329_68.xml","0",2,"","YES")
 db[77] = new dbRecord(false, "Bendix Air ABS6, p. 8","s08329_69.xml","0",2,"","YES")
 db[78] = new dbRecord(false, "Allison LCT Transmission, p. 9","s08329_70.xml","0",2,"","YES")
 db[79] = new dbRecord(false, "Allison LCT Transmission, p. 10","s08329_71.xml","0",2,"","YES")
 db[80] = new dbRecord(false, "Allison LCT Transmission, p. 11","s08329_72.xml","0",2,"","YES")
 db[81] = new dbRecord(false, "Allison WTEC MD Transmission, p. 12","s08329_73.xml","0",2,"","YES")
 db[82] = new dbRecord(false, "Allison WTEC MD Transmission, p. 13","s08329_74.xml","0",2,"","YES")
 db[83] = new dbRecord(false, "Allison WTEC MD Transmission, p. 14","s08329_75.xml","0",2,"","YES")
 db[84] = new dbRecord(false, "Crossing Gate, p. 15","s08329_76.xml","0",2,"","YES")
 db[85] = new dbRecord(false, "Brake Monitoring (Optional), p. 16","s08329_77.xml","0",2,"","YES")
 db[86] = new dbRecord(true, "Light Systems (Chapter 9)","s08329_78.xml","0",1,"","")
 db[87] = new dbRecord(false, "Back-Up Lights / Exterior Light Check, p. 1","s08329_78.xml","0",2,"","YES")
 db[88] = new dbRecord(false, "Fog Lights (Optional), p. 2","s08329_79.xml","0",2,"","YES")
 db[89] = new dbRecord(false, "Air Brake Stop Switches and Stop Light Relay, p. 3","s08329_80.xml","0",2,"","YES")
 db[90] = new dbRecord(false, "Headlights, Marker, Park, Turn, and Stop Light - N/Pedestal Mount Lights, p. 4","s08329_81.xml","0",2,"","YES")
 db[91] = new dbRecord(false, "Headlights, Marker, Park, Turn, and Stop Light, p. 5","s08329_82.xml","0",2,"","YES")
 db[92] = new dbRecord(false, "Headlights, Marker, Park, Turn, and Stop Light - with Pedestal Mount Lights, p. 6","s08329_83.xml","0",2,"","YES")
 db[93] = new dbRecord(false, "Panel Lights, p. 7","s08329_84.xml","0",2,"","YES")
 db[94] = new dbRecord(false, "Child Reminder System, p. 8","s08329_85.xml","0",2,"","YES")
 db[95] = new dbRecord(true, "Body Builder Connection Data (Chapter 10)","s08329_86.xml","0",1,"","")
 db[96] = new dbRecord(false, "Body Builder Connections, p. 1","s08329_86.xml","0",2,"","YES")
 db[97] = new dbRecord(false, "Body Builder Connections, p. 2","s08329_87.xml","0",2,"","YES")
 db[98] = new dbRecord(false, "Body Builder Connections, p. 3","s08329_88.xml","0",2,"","YES")
 db[99] = new dbRecord(false, "Body Builder Connections, p. 4","s08329_89.xml","0",2,"","YES")
 db[100] = new dbRecord(false, "Stop Arm and Red / Amber Lights, p. 5","s08329_90.xml","0",2,"","YES")
 db[101] = new dbRecord(false, "Emergency Exit Buzzer Lights and Post Trip Inspection, p. 6","s08329_91.xml","0",2,"","YES")
 db[102] = new dbRecord(false, "Door Open / Close with Electrical Control, p. 7","s08329_92.xml","0",2,"","YES")
 db[103] = new dbRecord(false, "Door Open / Close with Air Control, p. 8","s08329_93.xml","0",2,"","YES")
 db[104] = new dbRecord(false, "WheelChair Lift Interlock, p. 9","s08329_94.xml","0",2,"","YES")
 db[105] = new dbRecord(false, "Flasher Switches, p. 10","s08329_95.xml","0",2,"","YES")
 db[106] = new dbRecord(false, "Park Brake Status, p. 11","s08329_96.xml","0",2,"","YES")
 db[107] = new dbRecord(false, "Dual Wiper Motors for PT, p. 12","s08329_97.xml","0",2,"","YES")
 db[108] = new dbRecord(false, "Redundant Door Controls, p. 13","s08329_98.xml","0",2,"","YES")
 db[109] = new dbRecord(false, "Manual Door Controls, p. 14","s08329_99.xml","0",2,"","YES")
 db[110] = new dbRecord(true, "CONNECTOR COMPOSITES (Chapter 11)","s08329_100.xml","0",1,"","")
 db[111] = new dbRecord(false, "Connector Composites (1002), (1003), (1004), p. 1","s08329_100.xml","0",2,"","YES")
 db[112] = new dbRecord(false, "Connector Composites (1005), (1006), (1007), p. 2","s08329_101.xml","0",2,"","YES")
 db[113] = new dbRecord(false, "Connector Composites (1009), (1010), (1011), p. 3","s08329_102.xml","0",2,"","YES")
 db[114] = new dbRecord(false, "Connector Composite (1011), p. 4","s08329_103.xml","0",2,"","YES")
 db[115] = new dbRecord(false, "Connector Composite (1011), p. 5","s08329_104.xml","0",2,"","YES")
 db[116] = new dbRecord(false, "Connector Composites (1012), (1014F), p. 6","s08329_105.xml","0",2,"","YES")
 db[117] = new dbRecord(false, "Connector Composites (1015), (1016), (1017), (1018), p. 7","s08329_106.xml","0",2,"","YES")
 db[118] = new dbRecord(false, "Connector Composites (1019), (1020), (1021), (1023), (1028), p. 8","s08329_107.xml","0",2,"","YES")
 db[119] = new dbRecord(false, "Connector Composites (1029), (1100), (1101), (1104), (1105), p. 9","s08329_108.xml","0",2,"","YES")
 db[120] = new dbRecord(false, "Connector Composites (1200), (1201), (1203), (1204), p. 10","s08329_109.xml","0",2,"","YES")
 db[121] = new dbRecord(false, "Connector Composites (1400), (1401), (1402), p. 11","s08329_110.xml","0",2,"","YES")
 db[122] = new dbRecord(false, "Connector Composites (1403), (1404), (1500), (1501), p. 12","s08329_111.xml","0",2,"","YES")
 db[123] = new dbRecord(false, "Connector Composites (1505), (1555), (1600), p. 13","s08329_112.xml","0",2,"","YES")
 db[124] = new dbRecord(false, "Connector Composites (1601), (1602), (1603), p. 14","s08329_113.xml","0",2,"","YES")
 db[125] = new dbRecord(false, "Connector Composites (1604), (1650), (1657M), p. 15","s08329_114.xml","0",2,"","YES")
 db[126] = new dbRecord(false, "Connector Composites (1660), (1661), p. 16","s08329_115.xml","0",2,"","YES")
 db[127] = new dbRecord(false, "Connector Composites (1700), p. 17","s08329_116.xml","0",2,"","YES")
 db[128] = new dbRecord(false, "Connector Composites (1700), p. 18","s08329_117.xml","0",2,"","YES")
 db[129] = new dbRecord(false, "Connector Composites (1701), p. 19","s08329_118.xml","0",2,"","YES")
 db[130] = new dbRecord(false, "Connector Composites (1701), p. 20","s08329_119.xml","0",2,"","YES")
 db[131] = new dbRecord(false, "Connector Composites (1702), p. 21","s08329_120.xml","0",2,"","YES")
 db[132] = new dbRecord(false, "Connector Composites (1800), (1804), p. 22","s08329_121.xml","0",2,"","YES")
 db[133] = new dbRecord(false, "Connector Composites (1809), (1810), (1811), (1812), (1823), p. 23","s08329_122.xml","0",2,"","YES")
 db[134] = new dbRecord(false, "Connector Composites (1824), (1828), (1830), (1850), p. 24","s08329_123.xml","0",2,"","YES")
 db[135] = new dbRecord(false, "Connector Composites  (1900), (1901), (1906), (1907), (1912), p. 25","s08329_124.xml","0",2,"","YES")
 db[136] = new dbRecord(false, "Connector Composites (4002), (4003), (4005), (4006), (4016), p. 26","s08329_125.xml","0",2,"","YES")
 db[137] = new dbRecord(false, "Connector Composites (4017), (4034), (4036), (4039), (4040), (4041), p. 27","s08329_126.xml","0",2,"","YES")
 db[138] = new dbRecord(false, "Connector Composites (4046), (4087), (4111), p. 28","s08329_127.xml","0",2,"","YES")
 db[139] = new dbRecord(false, "Connector Composites (4200), (4201), (4202), (4203), (4301), p. 29","s08329_128.xml","0",2,"","YES")
 db[140] = new dbRecord(false, "Connector Composites (4302), (4303), (4500), (4905), (6011), p. 30","s08329_129.xml","0",2,"","YES")
 db[141] = new dbRecord(false, "Connector Composites (6020), p. 31","s08329_130.xml","0",2,"","YES")
 db[142] = new dbRecord(false, "Connector Composites (6020), p. 32","s08329_131.xml","0",2,"","YES")
 db[143] = new dbRecord(false, "Connector Composites (6022), (6023), (6200), (6259), (6260), p. 33","s08329_132.xml","0",2,"","YES")
 db[144] = new dbRecord(false, "Connector Composites (6261), (6262), (6263), (6316), (6323), p. 34","s08329_133.xml","0",2,"","YES")
 db[145] = new dbRecord(false, "Connector Composites (6334), (6400), (6401), (6402), (6406), (6703), p. 35","s08329_134.xml","0",2,"","YES")
 db[146] = new dbRecord(false, "Connector Composites (6704), (6715), (6740), (7104), p. 36","s08329_135.xml","0",2,"","YES")
 db[147] = new dbRecord(false, "Connector Composites (7150), p. 37","s08329_136.xml","0",2,"","YES")
 db[148] = new dbRecord(false, "Connector Composites (7250), (7350), (7600), p. 38","s08329_137.xml","0",2,"","YES")
 db[149] = new dbRecord(false, "Connector Composites (7603), (7604), (7605), (7607), (7701), p. 39","s08329_138.xml","0",2,"","YES")
 db[150] = new dbRecord(false, "Connector Composites (7801), (8000), (8001), p. 40","s08329_139.xml","0",2,"","YES")
 db[151] = new dbRecord(false, "Connector Composites (8003), (8004), (8100L), (8100R), p. 41","s08329_140.xml","0",2,"","YES")
 db[152] = new dbRecord(false, "Connector Composites (8310), (8311), (8312), (8450), (8601), p. 42","s08329_141.xml","0",2,"","YES")
 db[153] = new dbRecord(false, "Connector Composites (9000), (9001), (9002), p. 43","s08329_142.xml","0",2,"","YES")
 db[154] = new dbRecord(false, "Connector Composites (9003), (9004), (9100), p. 44","s08329_143.xml","0",2,"","YES")
 db[155] = new dbRecord(false, "Connector Composites (9100), (9101), (9254), (9257), p. 45","s08329_144.xml","0",2,"","YES")
 db[156] = new dbRecord(false, "Connector Composites (9258), (9260), (9261), p. 46","s08329_145.xml","0",2,"","YES")
 db[157] = new dbRecord(false, "Connector Composites (9501), (9503), (9506), (9507), p. 47","s08329_146.xml","0",2,"","YES")
 db[158] = new dbRecord(false, "Connector Composites (9508), (9510), (9511), p. 48","s08329_147.xml","0",2,"","YES")
 db[159] = new dbRecord(false, "Connector Composites (9512), (9513), p. 49","s08329_148.xml","0",2,"","YES")
 db[160] = new dbRecord(false, "Connector Composites (9514), (9515), (9516), (9517), p. 50","s08329_149.xml","0",2,"","YES")
 db[161] = new dbRecord(false, "Connector Composites (9518), (9519), (9520), (9521), p. 51","s08329_150.xml","0",2,"","YES")
 db[162] = new dbRecord(false, "Connector Composites (9522), (9526), (9527), p. 52","s08329_151.xml","0",2,"","YES")
 db[163] = new dbRecord(false, "Connector Composites  (9533), (9534), (9535), p. 53","s08329_152.xml","0",2,"","YES")
 db[164] = new dbRecord(false, "Connector Composites  (9536), (9537), (9538), p. 54","s08329_153.xml","0",2,"","YES")
 db[165] = new dbRecord(false, "Connector Composites  (9539), (9540), (9541), p. 55","s08329_154.xml","0",2,"","YES")
 db[166] = new dbRecord(false, "Connector Composites  (9736), (9777), (9778), p. 56","s08329_155.xml","0",2,"","YES")
// AHJO - In the following function the parameter 'occurs' was added Oct/Nov 2001
function dbRecord(mother,display,URL,occurs,indent,statusMsg,link){
	this.mother = mother   // is this item a parent?
	this.display = display // text to display
	this.URL = URL         // used to link to TOC
	this.occurances =  occurs  // how many times does search occur - THIS LINE WAS ADDED by AHJO
	this.indent = indent   // how many levels nested?
	this.statusMsg = statusMsg  // descriptive text for status bar 
	this.link = link  //  link tied to text; if empty string, item appears as straight text
	return this
}
// pre-load all images into cache
var collapsedImg = new Image(widgetWidth,widgetHeight)
collapsedImg.src = collapsedWidget
var expandedImg = new Image(widgetWidth,widgetHeight)
expandedImg.src = expandedWidget
var endpointImg = new Image(widgetWidth,widgetHeight)
endpointImg.src = endpointWidget
// mainframeURL = parent.mainframe.document.URL // get URL of mainframe 
// ** functions that get and set persistent cookie data **
// set cookie data
var mycookie = document.cookie
function setCurrState(setting) {
        mycookie = document.cookie = "currState=" + escape(setting)
}
// retrieve cookie data
function getCurrState() {
        var label = "currState="
        var labelLen = label.length
        var cLen = mycookie.length
        var i = 0
        while (i < cLen) {
                var j = i + labelLen
                if (mycookie.substring(i,j) == label) {
                        var cEnd = mycookie.indexOf(";",j)
                        if (cEnd ==     -1) {
                                cEnd = mycookie.length
                       }
                        return unescape(mycookie.substring(j,cEnd))
                }
               i++
       }
        return ""
}
// **function that updates persistent storage of state**
// toggles an outline mother entry, storing new value in the cookie
function toggle(n) {
	if (n != 0) {
		var newString = ""
		var currState = getCurrState() // of whole outline
		var expanded = currState.charAt(n-1) // of clicked item
		newString += currState.substring(0,n-1)
		newString += expanded ^ 1 // Bitwise XOR clicked item
		newString += currState.substring(n,currState.length)
		setCurrState(newString) // write new state back to cookie
	}
}
// **functions used in assembling updated outline**
// returns the proper GIF file name for each entry's control
function getGIF(n) {
	var mom = db[n].mother  // is entry a parent?
	var expanded = getCurrState().charAt(n-1) // of clicked item
	if (!mom) {
		return endpointWidget
	} else {
		if (expanded == 1) {
			return expandedWidget
		}
	}
	return collapsedWidget
}
// returns the proper status line text based on the icon style
function getGIFStatus(n) {
	var mom = db[n].mother  // is entry a parent
	var expanded = getCurrState().charAt(n-1) // of rolled item
	if (!mom) {
		return "No further items"
	} else {
		if (expanded == 1) {
			return "Click to collapse nested items"
		}
	}
	return "Click to expand nested items"
}
// initialize 'current state' storage field
if (getCurrState() == "" || getCurrState().length != (db.length-1)) {
	initState = ""
	for (i = 1; i < db.length; i++) {
		initState += "0"
	}
	setCurrState(initState)
}
// end -->


    </SCRIPT>
</HEAD>
<BODY>
<h3>BE, CE Bus Starting March, 2007 - ELECTRICAL CIRCUIT DIAGRAMS (Chassis Only)</h3>
<SCRIPT LANGUAGE="JavaScript1.1">
<!-- start
// build new outline based on the values of the cookie
// and data points in the outline data array.
// This fires each time the user clicks on a control,
// because the HREF for each one reloads the current document.
var newOutline = ""
var prevIndentDisplayed = 0
var showMyDaughter = 0
// cycle through each entry in the outline array
for (var i = 1; i < db.length; i++) {
	var theGIF = getGIF(i)				// get the image
	var theGIFStatus = getGIFStatus(i)  // get the status message
	var currIndent = db[i].indent		// get the indent level
	var expanded = getCurrState().charAt(i-1) // current state
        db[i].currentrow = ""

	if (currIndent == 0 || currIndent == 1 || db[i].currentrow == "currentrow" || currIndent <= prevIndentDisplayed || (showMyDaughter == 1 && (currIndent - prevIndentDisplayed == 1))) {
 // Phil added the if to remove the image from before the root element 
         if (currIndent != 0) {
			newOutline += "<SPAN class=\"" + db[i].currentrow + "\" style=\" position:relative;left:" + (indentPixels * currIndent) + "px;width:200px\"><A HREF=\"javascript:history.go(0)\" onMouseOver=\"window.status=\'" + theGIFStatus + "\';return true;\" onClick=\"toggle(" + i + ");return " + "\">"
			newOutline += "<IMG ALIGN=TOP SRC=\"" + theGIF + "\" HEIGHT=" + widgetHeight + " WIDTH=" + widgetWidth + " BORDER=0></A>"
			newOutline += "<SPAN title=\"" + db[i].display + "\" style=\"width:" + (200-widgetWidth) + "px\">"
			}
			if (db[i].link == "" || db[i].link == null) {
				newOutline += " <font size='1'>" +  db[i].display + "</font></SPAN></SPAN>" + "<BR>"	// no link, just a listed item
			} else {
                 if (db[i].occurances > 0)	{ 
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><font size='1'>" + db[i].display + "&nbsp;&nbsp;(" + db[i].occurances + ")</font></A></SPAN></SPAN><BR>"
			} else {
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><font size='1'>" + db[i].display + "</font></A></SPAN></SPAN><BR>"
			}
			}
		prevIndentDisplayed = currIndent
		showMyDaughter = expanded
		if (db.length > 25) {
			document.write(newOutline)
			newOutline = ""
		}
	}
}
document.write(newOutline)
// end -->


</SCRIPT>
</BODY>
</html>
