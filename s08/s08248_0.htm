<HTML>
<HEAD>
    <TITLE>Service Section TOC</TITLE>
    <LINK href="../style.css" rel="STYLESHEET" type="text/css">
    <SCRIPT LANGUAGE="JavaScript1.1">
<!-- begin hiding
var indentPixels = 15
var collapsedWidget = "../images/plus.gif"
var expandedWidget = "../images/minus.gif"
var endpointWidget = "../images/end.gif"
var widgetWidth = 17
var widgetHeight = 18
var displayTarget = "mainframe"
// AHJO - In the folowing db the fourth field (after the xml file name) is new and set to "0" 
var db = new Array()
 db[1] = new dbRecord(true, "IC BUS CHASSIS Built March 1, 2000 and After - ELECTRICAL CIRCUIT DIAGRAMS (Chassis Only) ","s08248_1.xml","0",0,"","YES")
 db[2] = new dbRecord(true, "INSTRUCTIONS AND CHARTS (Chapter 1)","s08248_2.xml","0",1,"","")
 db[3] = new dbRecord(false, "Procedure","s08248_2.xml","0",2,"","YES")
 db[4] = new dbRecord(false, "International Circuit Number Identification (Cont.), p. 2","s08248_3.xml","0",2,"","YES")
 db[5] = new dbRecord(false, "International Circuit Number Identification (Cont.), p. 3","s08248_4.xml","0",2,"","YES")
 db[6] = new dbRecord(false, "Circuit Diagram Instructions, p. 4","s08248_5.xml","0",2,"","YES")
 db[7] = new dbRecord(false, "Circuit Diagram Instructions (Cont.), p. 5","s08248_6.xml","0",2,"","YES")
 db[8] = new dbRecord(false, "Schematic Symbols, p. 6","s08248_7.xml","0",2,"","YES")
 db[9] = new dbRecord(false, "Relay Data, p. 7","s08248_8.xml","0",2,"","YES")
 db[10] = new dbRecord(true, "12 VOLT POWER DISTRIBUTION (Chapter 2)","s08248_9.xml","0",1,"","")
 db[11] = new dbRecord(false, "Procedure","s08248_9.xml","0",2,"","YES")
 db[12] = new dbRecord(false, "Battery, p. 2","s08248_10.xml","0",2,"","YES")
 db[13] = new dbRecord(false, "Ignition, p. 3","s08248_11.xml","0",2,"","YES")
 db[14] = new dbRecord(false, "Ignition (Cont.), p. 4","s08248_12.xml","0",2,"","YES")
 db[15] = new dbRecord(false, "Ground System, p. 5","s08248_13.xml","0",2,"","YES")
 db[16] = new dbRecord(true, "12V CHARGING AND CRANKING SYSTEM (Chapter 3)","s08248_14.xml","0",1,"","")
 db[17] = new dbRecord(false, "Procedure","s08248_14.xml","0",2,"","YES")
 db[18] = new dbRecord(false, "Charging System With 200 and 270 Amp Alternators, p. 2","s08248_15.xml","0",2,"","YES")
 db[19] = new dbRecord(false, "Cranking System, p. 3","s08248_16.xml","0",2,"","YES")
 db[20] = new dbRecord(false, "Cranking System - Ether Start With I6 HEUI, p. 4","s08248_17.xml","0",2,"","YES")
 db[21] = new dbRecord(true, "CAB ACCESSORIES (Chapter 4)","s08248_18.xml","0",1,"","")
 db[22] = new dbRecord(false, "Procedure","s08248_18.xml","0",2,"","YES")
 db[23] = new dbRecord(false, "Turn Signals With Stationary Steering Column, p. 2","s08248_19.xml","0",2,"","YES")
 db[24] = new dbRecord(false, "Turn Signals With Stationary Steering Column and Dual Face, p. 3","s08248_20.xml","0",2,"","YES")
 db[25] = new dbRecord(false, "Turn Signals With Tilt Steering Column, p. 4","s08248_21.xml","0",2,"","YES")
 db[26] = new dbRecord(false, "Turn Signals With Dual Face and With Tilt Steering Column, p. 5","s08248_22.xml","0",2,"","YES")
 db[27] = new dbRecord(false, "Turn Signals With Stationary Steering Column and Separate T/S Flasher, p. 6","s08248_23.xml","0",2,"","YES")
 db[28] = new dbRecord(true, "ENGINE SYSTEMS (Chapter 5)","s08248_24.xml","0",1,"","")
 db[29] = new dbRecord(false, "Procedure","s08248_24.xml","0",2,"","YES")
 db[30] = new dbRecord(false, "Cruise Control and Electronic Hand Throttle System, p. 2","s08248_25.xml","0",2,"","YES")
 db[31] = new dbRecord(false, "Module Power and Ground System, p. 3","s08248_26.xml","0",2,"","YES")
 db[32] = new dbRecord(false, "Shutter and Fan Wiring, p. 4","s08248_27.xml","0",2,"","YES")
 db[33] = new dbRecord(true, "GAUGES AND WARNING LIGHTS (Chapter 6)","s08248_28.xml","0",1,"","")
 db[34] = new dbRecord(false, "Procedure","s08248_28.xml","0",2,"","YES")
 db[35] = new dbRecord(false, "Coolant Level Tank, p. 2","s08248_29.xml","0",2,"","YES")
 db[36] = new dbRecord(false, "Engine Warning Light, Diagnostic Connector, Self Test Switch, p. 3","s08248_30.xml","0",2,"","YES")
 db[37] = new dbRecord(false, "Engine Warning Lights/Alarm Wiring, p. 4","s08248_31.xml","0",2,"","YES")
 db[38] = new dbRecord(false, "Fuel Gauge, p. 5","s08248_32.xml","0",2,"","YES")
 db[39] = new dbRecord(false, "Low Air Press. Alarm and Light W/Hydraulic Brake and Air Actuated Park Brake, p. 6","s08248_33.xml","0",2,"","YES")
 db[40] = new dbRecord(false, "Park Brake and Wait to Start Lights, p. 7","s08248_34.xml","0",2,"","YES")
 db[41] = new dbRecord(false, "Speed/Tach Module and Vehicle Speed Sensor, p. 8","s08248_35.xml","0",2,"","YES")
 db[42] = new dbRecord(false, "Transmission Oil Temp. Gauge and Warning Light, p. 9","s08248_36.xml","0",2,"","YES")
 db[43] = new dbRecord(false, "Transmission Filter Indicator Light, p. 10","s08248_37.xml","0",2,"","YES")
 db[44] = new dbRecord(true, "CHASSIS ACCESSORIES (Chapter 7)","s08248_38.xml","0",1,"","")
 db[45] = new dbRecord(false, "Procedure","s08248_38.xml","0",2,"","YES")
 db[46] = new dbRecord(false, "Fuel Filter Wiring System, p. 2","s08248_39.xml","0",2,"","YES")
 db[47] = new dbRecord(false, "Automatic Transmission Shift Solenoid System, p. 3","s08248_40.xml","0",2,"","YES")
 db[48] = new dbRecord(false, "Automatic Transmission Neutral Position Wiring, p. 4","s08248_41.xml","0",2,"","YES")
 db[49] = new dbRecord(false, "Air Antilock Brakes, p. 5","s08248_42.xml","0",2,"","YES")
 db[50] = new dbRecord(false, "Air Antilock Brakes (Cont.), p. 6","s08248_43.xml","0",2,"","YES")
 db[51] = new dbRecord(false, "Hydraulic Antilock Brakes, p. 7","s08248_44.xml","0",2,"","YES")
 db[52] = new dbRecord(false, "Hydraulic Antilock Brakes (Cont.), p. 8","s08248_45.xml","0",2,"","YES")
 db[53] = new dbRecord(false, "Hydraulic Antilock Brakes (Cont.), p. 9","s08248_46.xml","0",2,"","YES")
 db[54] = new dbRecord(false, "Hydraulic Antilock Brakes (Cont.), p. 10","s08248_47.xml","0",2,"","YES")
 db[55] = new dbRecord(false, "Allison MD Automatic Transmission, p. 11","s08248_48.xml","0",2,"","YES")
 db[56] = new dbRecord(false, "Allison MD Automatic Transmission (Cont.), p. 12","s08248_49.xml","0",2,"","YES")
 db[57] = new dbRecord(false, "Allison MD Automatic Transmission (Cont.), p. 13","s08248_50.xml","0",2,"","YES")
 db[58] = new dbRecord(false, "Allison MD Transmission (Electronic) Spare Inputs/Outputs, p. 14","s08248_51.xml","0",2,"","YES")
 db[59] = new dbRecord(false, "Allison MD Transmission (Electronic) Spare Inputs/Outputs (Cont.), p. 15","s08248_52.xml","0",2,"","YES")
 db[60] = new dbRecord(false, "Allison MD Transmission J1939, p. 16","s08248_53.xml","0",2,"","YES")
 db[61] = new dbRecord(false, "Allison LCT Transmission, p. 17","s08248_54.xml","0",2,"","YES")
 db[62] = new dbRecord(false, "Allison LCT Transmission (Cont.), p. 18","s08248_55.xml","0",2,"","YES")
 db[63] = new dbRecord(false, "Allison LCT Transmission (Cont.), p. 19","s08248_56.xml","0",2,"","YES")
 db[64] = new dbRecord(false, "Allison LCT Transmission (Cont.), p. 20","s08248_57.xml","0",2,"","YES")
 db[65] = new dbRecord(false, "Allison LCT Transmission (Cont.), p. 21","s08248_58.xml","0",2,"","YES")
 db[66] = new dbRecord(false, "Allison LCT Transmission (Cont.), p. 22","s08248_59.xml","0",2,"","YES")
 db[67] = new dbRecord(true, "LIGHT SYSTEMS (Chapter 8)","s08248_60.xml","0",1,"","")
 db[68] = new dbRecord(false, "Procedure","s08248_60.xml","0",2,"","YES")
 db[69] = new dbRecord(false, "Fog Lights, p. 2","s08248_61.xml","0",2,"","YES")
 db[70] = new dbRecord(false, "Headlight System With Tilt Steering Column and DRL, p. 3","s08248_62.xml","0",2,"","YES")
 db[71] = new dbRecord(false, "Headlight System N/Tilt Steering Column and W/DRL, p. 4","s08248_63.xml","0",2,"","YES")
 db[72] = new dbRecord(false, "Headlight System N/Tilt Steering Column and W/DRL (Cont.), p. 5","s08248_64.xml","0",2,"","YES")
 db[73] = new dbRecord(false, "Headlight System W/Tilt Steering Column and W/Special Wire for Headlights, Park, Tail and Panel Lights, p. 6","s08248_65.xml","0",2,"","YES")
 db[74] = new dbRecord(false, "Headlight System N/Tilt Steering Column and W/Special Wire for Headlights, Park, Tail and Panel Lights, p. 7","s08248_66.xml","0",2,"","YES")
 db[75] = new dbRecord(false, "Headlight System N/Tilt Steering Column and W/Special Wire for Headlights, Park, Tail and Panel Lights (Cont.), p. 8","s08248_67.xml","0",2,"","YES")
 db[76] = new dbRecord(false, "Panel Lights, p. 9","s08248_68.xml","0",2,"","YES")
 db[77] = new dbRecord(false, "Stop Light Switch W/Air Brakes, p. 10","s08248_69.xml","0",2,"","YES")
 db[78] = new dbRecord(true, "CONNECTOR COMPOSITES (Chapter 9)","s08248_70.xml","0",1,"","")
 db[79] = new dbRecord(false, "Procedure","s08248_70.xml","0",2,"","YES")
 db[80] = new dbRecord(false, "Fuse Block Chart - Air Brake","s08248_71.xml","0",2,"","YES")
 db[81] = new dbRecord(false, "Fuse Block Chart - Hydraulic Brake","s08248_72.xml","0",2,"","YES")
 db[82] = new dbRecord(false, "Lamp Bulb Chart and Body Builder Electrical Connection Data","s08248_73.xml","0",2,"","YES")
 db[83] = new dbRecord(false, "Connector Composite (2)","s08248_74.xml","0",2,"","YES")
 db[84] = new dbRecord(false, "Connector Composites (3), (5)","s08248_75.xml","0",2,"","YES")
 db[85] = new dbRecord(false, "Connector Composites (20), (22), (23)","s08248_76.xml","0",2,"","YES")
 db[86] = new dbRecord(false, "Connector Composites (26), (27), (28)","s08248_77.xml","0",2,"","YES")
 db[87] = new dbRecord(false, "Connector Composites (42), (47), (49), (50)","s08248_78.xml","0",2,"","YES")
 db[88] = new dbRecord(false, "Connector Composites (63), (78), (79), (80), (98)","s08248_79.xml","0",2,"","YES")
 db[89] = new dbRecord(false, "Connector Composites (99), (100), (101), (115), (165)","s08248_80.xml","0",2,"","YES")
 db[90] = new dbRecord(false, "Connector Composites (191), (192), (193), (194), (195), (196M)","s08248_81.xml","0",2,"","YES")
 db[91] = new dbRecord(false, "Connector Composites (218), (258), (261), (279)","s08248_82.xml","0",2,"","YES")
 db[92] = new dbRecord(false, "Connector Composite (288)","s08248_83.xml","0",2,"","YES")
 db[93] = new dbRecord(false, "Connector Composites (300), (301), (301A), (303), (304)","s08248_84.xml","0",2,"","YES")
 db[94] = new dbRecord(false, "Connector Composites (315), (315A), (323), (329)","s08248_85.xml","0",2,"","YES")
 db[95] = new dbRecord(false, "Connector Composites (335), (336), (337), (339), (340)","s08248_86.xml","0",2,"","YES")
 db[96] = new dbRecord(false, "Connector Composites (345), (350), (373), (374)","s08248_87.xml","0",2,"","YES")
 db[97] = new dbRecord(false, "Connector Composites (377), (379)","s08248_88.xml","0",2,"","YES")
 db[98] = new dbRecord(false, "Connector Composites (382), (383), (386), (387), (389)","s08248_89.xml","0",2,"","YES")
 db[99] = new dbRecord(false, "Connector Composites (391), (392)","s08248_90.xml","0",2,"","YES")
 db[100] = new dbRecord(false, "Connector Composites (400), (401), (402), (403), (406)","s08248_91.xml","0",2,"","YES")
 db[101] = new dbRecord(false, "Connector Composites (419), (420), (422)","s08248_92.xml","0",2,"","YES")
 db[102] = new dbRecord(false, "Connector Composites (424), (425A), (426A)","s08248_93.xml","0",2,"","YES")
 db[103] = new dbRecord(false, "Connector Composites (426B), (426M), (426AF)","s08248_94.xml","0",2,"","YES")
 db[104] = new dbRecord(false, "Connector Composites (427), (428), (429), (430), (431A), (432), (433)","s08248_95.xml","0",2,"","YES")
 db[105] = new dbRecord(false, "Connector Composites (434), (436), (450), (451)","s08248_96.xml","0",2,"","YES")
 db[106] = new dbRecord(false, "Connector Composites (463), (466)","s08248_97.xml","0",2,"","YES")
 db[107] = new dbRecord(false, "Connector Composites (470), (499), (500), (501), (502), (503)","s08248_98.xml","0",2,"","YES")
 db[108] = new dbRecord(false, "Connector Composites (504), (505), (506), (507), (508), (509)","s08248_99.xml","0",2,"","YES")
 db[109] = new dbRecord(false, "Connector Composites (523), (526), (569), (571A)","s08248_100.xml","0",2,"","YES")
 db[110] = new dbRecord(false, "Connector Composites (571), (574), (575), (605), (615)","s08248_101.xml","0",2,"","YES")
 db[111] = new dbRecord(false, "Connector Composites (632), (633)","s08248_102.xml","0",2,"","YES")
 db[112] = new dbRecord(false, "Connector Composites (634), (637), (639)","s08248_103.xml","0",2,"","YES")
 db[113] = new dbRecord(false, "Connector Composites (646), (662), (663), (709), (760A), (760B)","s08248_104.xml","0",2,"","YES")
 db[114] = new dbRecord(false, "Connector Composites (832), (836), (837), (898), (899), (997)","s08248_105.xml","0",2,"","YES")
 db[115] = new dbRecord(false, "Connector Composites (1002), (1004)","s08248_106.xml","0",2,"","YES")
 db[116] = new dbRecord(false, "Connector Composites (1136), (1137), (1138), (1139), (1140)","s08248_107.xml","0",2,"","YES")
 db[117] = new dbRecord(false, "Connector Composites (1142), (1143), (1144), (1145), (1146)","s08248_108.xml","0",2,"","YES")
 db[118] = new dbRecord(false, "Connector Composites (1147), (1149), (1150), (1151), (1155)","s08248_109.xml","0",2,"","YES")
 db[119] = new dbRecord(false, "Connector Composites (3024), (3025), (3026), (3027), (3028), (3029), (3030)","s08248_110.xml","0",2,"","YES")
 db[120] = new dbRecord(false, "Connector Composites (3031), (3032), (3043), (3044)","s08248_111.xml","0",2,"","YES")
 db[121] = new dbRecord(false, "Connector Composites (3047), (3055)","s08248_112.xml","0",2,"","YES")
 db[122] = new dbRecord(false, "Connector Composites (3084), (3098), (3099)","s08248_113.xml","0",2,"","YES")
// AHJO - In the following function the parameter 'occurs' was added Oct/Nov 2001
function dbRecord(mother,display,URL,occurs,indent,statusMsg,link){
	this.mother = mother   // is this item a parent?
	this.display = display // text to display
	this.URL = URL         // used to link to TOC
	this.occurances =  occurs  // how many times does search occur - THIS LINE WAS ADDED by AHJO
	this.indent = indent   // how many levels nested?
	this.statusMsg = statusMsg  // descriptive text for status bar 
	this.link = link  //  link tied to text; if empty string, item appears as straight text
	return this
}
// pre-load all images into cache
var collapsedImg = new Image(widgetWidth,widgetHeight)
collapsedImg.src = collapsedWidget
var expandedImg = new Image(widgetWidth,widgetHeight)
expandedImg.src = expandedWidget
var endpointImg = new Image(widgetWidth,widgetHeight)
endpointImg.src = endpointWidget
// mainframeURL = parent.mainframe.document.URL // get URL of mainframe 
// ** functions that get and set persistent cookie data **
// set cookie data
var mycookie = document.cookie
function setCurrState(setting) {
        mycookie = document.cookie = "currState=" + escape(setting)
}
// retrieve cookie data
function getCurrState() {
        var label = "currState="
        var labelLen = label.length
        var cLen = mycookie.length
        var i = 0
        while (i < cLen) {
                var j = i + labelLen
                if (mycookie.substring(i,j) == label) {
                        var cEnd = mycookie.indexOf(";",j)
                        if (cEnd ==     -1) {
                                cEnd = mycookie.length
                       }
                        return unescape(mycookie.substring(j,cEnd))
                }
               i++
       }
        return ""
}
// **function that updates persistent storage of state**
// toggles an outline mother entry, storing new value in the cookie
function toggle(n) {
	if (n != 0) {
		var newString = ""
		var currState = getCurrState() // of whole outline
		var expanded = currState.charAt(n-1) // of clicked item
		newString += currState.substring(0,n-1)
		newString += expanded ^ 1 // Bitwise XOR clicked item
		newString += currState.substring(n,currState.length)
		setCurrState(newString) // write new state back to cookie
	}
}
// **functions used in assembling updated outline**
// returns the proper GIF file name for each entry's control
function getGIF(n) {
	var mom = db[n].mother  // is entry a parent?
	var expanded = getCurrState().charAt(n-1) // of clicked item
	if (!mom) {
		return endpointWidget
	} else {
		if (expanded == 1) {
			return expandedWidget
		}
	}
	return collapsedWidget
}
// returns the proper status line text based on the icon style
function getGIFStatus(n) {
	var mom = db[n].mother  // is entry a parent
	var expanded = getCurrState().charAt(n-1) // of rolled item
	if (!mom) {
		return "No further items"
	} else {
		if (expanded == 1) {
			return "Click to collapse nested items"
		}
	}
	return "Click to expand nested items"
}
// initialize 'current state' storage field
if (getCurrState() == "" || getCurrState().length != (db.length-1)) {
	initState = ""
	for (i = 1; i < db.length; i++) {
		initState += "0"
	}
	setCurrState(initState)
}
// end -->


    </SCRIPT>
</HEAD>
<BODY>
<SCRIPT LANGUAGE="JavaScript1.1">
<!-- start
// build new outline based on the values of the cookie
// and data points in the outline data array.
// This fires each time the user clicks on a control,
// because the HREF for each one reloads the current document.
var newOutline = ""
var prevIndentDisplayed = 0
var showMyDaughter = 0
// cycle through each entry in the outline array
for (var i = 1; i < db.length; i++) {
	var theGIF = getGIF(i)				// get the image
	var theGIFStatus = getGIFStatus(i)  // get the status message
	var currIndent = db[i].indent		// get the indent level
	var expanded = getCurrState().charAt(i-1) // current state
        db[i].currentrow = ""

	if (currIndent == 0 || currIndent == 1 || db[i].currentrow == "currentrow" || currIndent <= prevIndentDisplayed || (showMyDaughter == 1 && (currIndent - prevIndentDisplayed == 1))) {
 // Phil added the if to remove the image from before the root element 
         if (currIndent != 0) {
			newOutline += "<SPAN class=\"" + db[i].currentrow + "\" style=\" position:relative;left:" + (indentPixels * currIndent) + "px;width:200px\"><A HREF=\"javascript:history.go(0)\" onMouseOver=\"window.status=\'" + theGIFStatus + "\';return true;\" onClick=\"toggle(" + i + ");return " + "\">"
			newOutline += "<IMG ALIGN=TOP SRC=\"" + theGIF + "\" HEIGHT=" + widgetHeight + " WIDTH=" + widgetWidth + " BORDER=0></A>"
			newOutline += "<SPAN title=\"" + db[i].display + "\" style=\"width:" + (200-widgetWidth) + "px\">"
			}
			if (db[i].link == "" || db[i].link == null) {
				newOutline += " <font size='1'>" +  db[i].display + "</font></SPAN></SPAN>" + "<BR>"	// no link, just a listed item
			} else {
                 if (db[i].occurances > 0)	{ 
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><font size='1'>" + db[i].display + "&nbsp;&nbsp;(" + db[i].occurances + ")</font></A></SPAN></SPAN><BR>"
			} else {
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><font size='1'>" + db[i].display + "</font></A></SPAN></SPAN><BR>"
			}
			}
		prevIndentDisplayed = currIndent
		showMyDaughter = expanded
		if (db.length > 25) {
			document.write(newOutline)
			newOutline = ""
		}
	}
}
document.write(newOutline)
// end -->


</SCRIPT>
</BODY>
</html>
