<HTML>
<HEAD>
    <TITLE>Service Section TOC</TITLE>
    <LINK href="../style.css" rel="STYLESHEET" type="text/css">
    <SCRIPT LANGUAGE="JavaScript1.1">
<!-- begin hiding
var indentPixels = 15
var collapsedWidget = "../images/plus.gif"
var expandedWidget = "../images/minus.gif"
var endpointWidget = "../images/end.gif"
var widgetWidth = 17
var widgetHeight = 18
var displayTarget = "mainframe"
// AHJO - In the folowing db the fourth field (after the xml file name) is new and set to "0" 
var db = new Array()
 db[1] = new dbRecord(true, "3300 Model From March, 2004 to December, 2006 - ELECTRICAL CIRCUIT DIAGRAMS","s08299_1.xml","0",0,"","YES")
 db[2] = new dbRecord(true, "INSTRUCTIONS AND CHARTS (Chapter 1)","s08299_2.xml","0",1,"","")
 db[3] = new dbRecord(false, "Circuit Number Identification Chart, p. 1","s08299_2.xml","0",2,"","YES")
 db[4] = new dbRecord(false, "Circuit Number Identification Chart, p. 2","s08299_3.xml","0",2,"","YES")
 db[5] = new dbRecord(false, "Circuit Number Identification Chart, p. 3","s08299_4.xml","0",2,"","YES")
 db[6] = new dbRecord(false, "Circuit Number Identification Chart, p. 4","s08299_5.xml","0",2,"","YES")
 db[7] = new dbRecord(false, "Circuit Number Identification Chart, p. 5","s08299_6.xml","0",2,"","YES")
 db[8] = new dbRecord(false, "Circuit Diagram Instructions, p. 6","s08299_7.xml","0",2,"","YES")
 db[9] = new dbRecord(false, "Circuit Number Identification and Location, p. 7","s08299_8.xml","0",2,"","YES")
 db[10] = new dbRecord(false, "Schematic Symbol Chart, p. 8","s08299_9.xml","0",2,"","YES")
 db[11] = new dbRecord(false, "Circuit Number Identification and Location, p. 9","s08299_10.xml","0",2,"","YES")
 db[12] = new dbRecord(false, "Lamp Bulb Chart, p. 10","s08299_11.xml","0",2,"","YES")
 db[13] = new dbRecord(true, "12 VOLT POWER DISTRIBUTION and Data Link (Chapter 2)","s08299_12.xml","0",1,"","")
 db[14] = new dbRecord(false, "Accessory, p. 1","s08299_12.xml","0",2,"","YES")
 db[15] = new dbRecord(false, "Battery, p. 2","s08299_13.xml","0",2,"","YES")
 db[16] = new dbRecord(false, "Ignition, p. 3","s08299_14.xml","0",2,"","YES")
 db[17] = new dbRecord(false, "Ignition, p. 4","s08299_15.xml","0",2,"","YES")
 db[18] = new dbRecord(false, "Ground, p. 5","s08299_16.xml","0",2,"","YES")
 db[19] = new dbRecord(false, "Drivetrain J1939 Data Link (Cab), p. 6","s08299_17.xml","0",2,"","YES")
 db[20] = new dbRecord(false, "Drivetrain J1939 Data Link (Chassis), p. 7","s08299_18.xml","0",2,"","YES")
 db[21] = new dbRecord(false, "J1708 Data Link Diagnostic, p. 8","s08299_19.xml","0",2,"","YES")
 db[22] = new dbRecord(false, "Diagnostics and Programmable Connector, p. 9","s08299_20.xml","0",2,"","YES")
 db[23] = new dbRecord(false, "J1708 Datalink Diagnostic W/ABS6, p. 10","s08299_21.xml","0",2,"","YES")
 db[24] = new dbRecord(false, "Drivetrain J1939 Datalink W/ABS6, W/LCT, W/WTEC XMSN, p. 11","s08299_22.xml","0",2,"","YES")
 db[25] = new dbRecord(false, "Drivetrain J1939 Datalink W/ABS6, W/Ammeter, W/LCT, W/WTEC XMSN, p. 12","s08299_23.xml","0",2,"","YES")
 db[26] = new dbRecord(false, "Drivetrain J1939 Datalink W/ABS6, W/Allison Gen IV, W/Manual XMSN, p. 13","s08299_24.xml","0",2,"","YES")
 db[27] = new dbRecord(false, "Drivetrain J1939 Datalink W/ABS6, W/Ammeter, W/Allison Gen IV, p. 14","s08299_25.xml","0",2,"","YES")
 db[28] = new dbRecord(true, "12V Charging and Cranking System (Chapter 3)","s08299_26.xml","0",1,"","")
 db[29] = new dbRecord(false, "Key Switch Start Circuit, p. 1","s08299_26.xml","0",2,"","YES")
 db[30] = new dbRecord(false, "Charging and Cranking, p. 2","s08299_27.xml","0",2,"","YES")
 db[31] = new dbRecord(true, "Cab Accessories (Chapter 4)","s08299_28.xml","0",1,"","")
 db[32] = new dbRecord(false, "Horn, Dual Electric, p. 1","s08299_28.xml","0",2,"","YES")
 db[33] = new dbRecord(false, "Steering Wheel Switches, p. 2","s08299_29.xml","0",2,"","YES")
 db[34] = new dbRecord(false, "Switch Packs, p. 3","s08299_30.xml","0",2,"","YES")
 db[35] = new dbRecord(false, "Windshield Wiper and Washer Systems, p. 4","s08299_31.xml","0",2,"","YES")
 db[36] = new dbRecord(false, "Driver's Air Conditioning, p. 5","s08299_32.xml","0",2,"","YES")
 db[37] = new dbRecord(true, "Engine Electronics (Chapter 5)","s08299_33.xml","0",1,"","")
 db[38] = new dbRecord(false, "Electronic Engine Controls - V8 Engine, p. 1","s08299_33.xml","0",2,"","YES")
 db[39] = new dbRecord(false, "Electronic Engine Controls - I6 Engine, p. 2","s08299_34.xml","0",2,"","YES")
 db[40] = new dbRecord(false, "I6 Fan and Shutter Wiring, p. 3","s08299_35.xml","0",2,"","YES")
 db[41] = new dbRecord(false, "V8 Fan and Shutter Wiring, p. 4","s08299_36.xml","0",2,"","YES")
 db[42] = new dbRecord(false, "V8 Fan and Shutter Wiring, p. 5","s08299_37.xml","0",2,"","YES")
 db[43] = new dbRecord(true, "GAuges and Warning Lights (Chapter 6)","s08299_38.xml","0",1,"","")
 db[44] = new dbRecord(false, "IP Gauges, p. 1","s08299_38.xml","0",2,"","YES")
 db[45] = new dbRecord(false, "Warning Lights, p. 2","s08299_39.xml","0",2,"","YES")
 db[46] = new dbRecord(false, "Warning Lights Controlled by Engine, Transmission, ABS Controllers, p. 3","s08299_40.xml","0",2,"","YES")
 db[47] = new dbRecord(false, "Eng. Oil Press. and Temp., Speedometer, Tach., Voltmeter and Water Temp. Gauge Circuits, p. 4","s08299_41.xml","0",2,"","YES")
 db[48] = new dbRecord(false, "Gauges and Warning Lights - Instrument Cluster, p. 5","s08299_42.xml","0",2,"","YES")
 db[49] = new dbRecord(false, "Gauges and Warning Lights - Ammeter, p. 6","s08299_43.xml","0",2,"","YES")
 db[50] = new dbRecord(false, "Gauges and Warning Lights - Coolant Tank Level, p. 7","s08299_44.xml","0",2,"","YES")
 db[51] = new dbRecord(false, "Gauges and Warning Lights - Fuel Gauge with Air Brake Chassis, p. 8","s08299_45.xml","0",2,"","YES")
 db[52] = new dbRecord(false, "Gauges and Warning Lights - Fuel Gauge with Hydraulic Brake Chassis, p. 9","s08299_46.xml","0",2,"","YES")
 db[53] = new dbRecord(false, "Gauges and Warning Lights - Park Brake Light, p. 10","s08299_47.xml","0",2,"","YES")
 db[54] = new dbRecord(false, "Gauges and Warning Lights - Air Pressure Input Circuit and Zero Volt Reference Splice, p. 11","s08299_48.xml","0",2,"","YES")
 db[55] = new dbRecord(false, "Gauges and Warning Lights - Change Transmission Filter Light, p. 12","s08299_49.xml","0",2,"","YES")
 db[56] = new dbRecord(true, "Chassis Accessories (Chapter 7)","s08299_50.xml","0",1,"","")
 db[57] = new dbRecord(false, "Air Dryer and Drain Valve, p. 1","s08299_50.xml","0",2,"","YES")
 db[58] = new dbRecord(false, "Fuel Filter Wiring System, p. 2","s08299_51.xml","0",2,"","YES")
 db[59] = new dbRecord(false, "Air Park Brake Interlock, p. 3","s08299_52.xml","0",2,"","YES")
 db[60] = new dbRecord(false, "Park Brake / Shifter Interlock - with LCT Transmission only, p. 4","s08299_53.xml","0",2,"","YES")
 db[61] = new dbRecord(false, "Antilock Brake System (ABS), Air, p. 5","s08299_54.xml","0",2,"","YES")
 db[62] = new dbRecord(false, "Antilock Brake System (ABS), Air, p. 6","s08299_55.xml","0",2,"","YES")
 db[63] = new dbRecord(false, "Air Solenoid Module, p. 7","s08299_56.xml","0",2,"","YES")
 db[64] = new dbRecord(false, "Hydraulic Antilock Brakes, p. 8","s08299_57.xml","0",2,"","YES")
 db[65] = new dbRecord(false, "Hydraulic Antilock Brakes, p. 9","s08299_58.xml","0",2,"","YES")
 db[66] = new dbRecord(false, "Hydraulic Antilock Brakes, p. 10","s08299_59.xml","0",2,"","YES")
 db[67] = new dbRecord(false, "Allison WTEC MD Transmission, p. 11","s08299_60.xml","0",2,"","YES")
 db[68] = new dbRecord(false, "Allison WTEC MD Transmission, p. 12","s08299_61.xml","0",2,"","YES")
 db[69] = new dbRecord(false, "Allison WTEC MD Transmission, p. 13","s08299_62.xml","0",2,"","YES")
 db[70] = new dbRecord(false, "Allison LCT Transmission, p. 14","s08299_63.xml","0",2,"","YES")
 db[71] = new dbRecord(false, "Crossing Gate, p. 15","s08299_64.xml","0",2,"","YES")
 db[72] = new dbRecord(false, "Brake Monitor, p. 16","s08299_65.xml","0",2,"","YES")
 db[73] = new dbRecord(false, "Manual Transmission, p. 17","s08299_66.xml","0",2,"","YES")
 db[74] = new dbRecord(false, "Two Speed Axle, p. 18","s08299_67.xml","0",2,"","YES")
 db[75] = new dbRecord(false, "Chassis Accessories W/ABS6 - Bendix Air - ECU Pin Out, p. 19","s08299_68.xml","0",2,"","YES")
 db[76] = new dbRecord(false, "Chassis Accessories W/ABS6 - Bendix Air - ECU Pin Out, p. 20","s08299_69.xml","0",2,"","YES")
 db[77] = new dbRecord(false, "Chassis Accessories W/ABS6 - Bendix Air ECM Power, p. 21","s08299_70.xml","0",2,"","YES")
 db[78] = new dbRecord(true, "Light Systems (Chapter 8)","s08299_71.xml","0",1,"","")
 db[79] = new dbRecord(false, "Back-Up Lights / Exterior Light Check, p. 1","s08299_71.xml","0",2,"","YES")
 db[80] = new dbRecord(false, "Fog Lights, p. 2","s08299_72.xml","0",2,"","YES")
 db[81] = new dbRecord(false, "High Beam, Flash to Pass, Turn Signal, and Air Brake Stop Switches, p. 3","s08299_73.xml","0",2,"","YES")
 db[82] = new dbRecord(false, "Headlights, Marker, Park, Turn, and Stop Relay - Without Fender Mount Lights, p. 4","s08299_74.xml","0",2,"","YES")
 db[83] = new dbRecord(false, "Headlights, Marker, Park, Turn, and Stop Relay - With Fender Mount Lights, p. 5","s08299_75.xml","0",2,"","YES")
 db[84] = new dbRecord(false, "Export Stop, Turn, Tail and Back-Up Lights, p. 6","s08299_76.xml","0",2,"","YES")
 db[85] = new dbRecord(true, "Body Builder Connection Data (Chapter 9)","s08299_77.xml","0",1,"","")
 db[86] = new dbRecord(false, "Body Builder Electrical Connection Data for All Models, p. 1","s08299_77.xml","0",2,"","YES")
 db[87] = new dbRecord(false, "Body Builder Electrical Connection Data for CE Model, p. 2","s08299_78.xml","0",2,"","YES")
 db[88] = new dbRecord(false, "Stop Arm and Red / Amber Lights, p. 3","s08299_79.xml","0",2,"","YES")
 db[89] = new dbRecord(false, "Emergency Exit Buzzer and Post Trip Inspection, p. 4","s08299_80.xml","0",2,"","YES")
 db[90] = new dbRecord(false, "Door Open / Close with Elec. Control, p. 5","s08299_81.xml","0",2,"","YES")
 db[91] = new dbRecord(false, "Door Open / Close with Air Control for CE Model, p. 6","s08299_82.xml","0",2,"","YES")
 db[92] = new dbRecord(false, "WheelChair Lift Interlock, p. 7","s08299_83.xml","0",2,"","YES")
 db[93] = new dbRecord(false, "Flasher Switches for CE Model, p. 8","s08299_84.xml","0",2,"","YES")
 db[94] = new dbRecord(false, "Park Brake Status, p. 9","s08299_85.xml","0",2,"","YES")
 db[95] = new dbRecord(false, "Dual Wiper Motors for PT / Mexico and Export Models, p. 10","s08299_86.xml","0",2,"","YES")
 db[96] = new dbRecord(false, "Mexico and Export Bus Windshield Washer Pump, p. 11","s08299_87.xml","0",2,"","YES")
 db[97] = new dbRecord(false, "CE Bus Redundant Door Controls, p. 12","s08299_88.xml","0",2,"","YES")
 db[98] = new dbRecord(false, "Manual Door for CE Bus, p. 13","s08299_89.xml","0",2,"","YES")
 db[99] = new dbRecord(true, "CONNECTOR COMPOSITES (Chapter 10)","s08299_90.xml","0",1,"","")
 db[100] = new dbRecord(false, "Connector Composites (701), (702), (1002), (1003), (1004), (1005), p. 1","s08299_90.xml","0",2,"","YES")
 db[101] = new dbRecord(false, "Connector Composites (1006), (1007), (1008F), (1008M), (1009), (1010), (1012), p. 2","s08299_91.xml","0",2,"","YES")
 db[102] = new dbRecord(false, "Connector Composite (1011), p. 3","s08299_92.xml","0",2,"","YES")
 db[103] = new dbRecord(false, "Connector Composite (1011) Fuse / Circuit Breaker Chart, p. 4","s08299_93.xml","0",2,"","YES")
 db[104] = new dbRecord(false, "Connector Composites (1011), (1013), (1014) Fuse Block Connections, p. 5","s08299_94.xml","0",2,"","YES")
 db[105] = new dbRecord(false, "Connector Composites (1015), (1016), (1017), (1018), (1019), (1020), (1021), (1023), p. 6","s08299_95.xml","0",2,"","YES")
 db[106] = new dbRecord(false, "Connector Composites (1100), (1101), (1104), (1105), (1106), (1107), (1107F), (1108), p. 7","s08299_96.xml","0",2,"","YES")
 db[107] = new dbRecord(false, "Connector Composites (1400), (1401), (1402), (1403), (1404), (1500), (1501), (1555), p. 8","s08299_97.xml","0",2,"","YES")
 db[108] = new dbRecord(false, "Connector Composites (1600), (1601), (1602), (1603), p. 9","s08299_98.xml","0",2,"","YES")
 db[109] = new dbRecord(false, "Connector Composites (1604), (1650), (1657), (1804), (1807), (1808), (1809), p. 10","s08299_99.xml","0",2,"","YES")
 db[110] = new dbRecord(false, "Connector Composites (1810), (1811), (1812), (1823), (1824), (1828), (1829), (1830), p. 11","s08299_100.xml","0",2,"","YES")
 db[111] = new dbRecord(false, "Connector Composites (4003), (4005), (4006), (4009), (4010), (4011), p. 12","s08299_101.xml","0",2,"","YES")
 db[112] = new dbRecord(false, "Connector Composite (4013M), p. 13","s08299_102.xml","0",2,"","YES")
 db[113] = new dbRecord(false, "Connector Composite (4013), p. 14","s08299_103.xml","0",2,"","YES")
 db[114] = new dbRecord(false, "Connector Composite (4014), p. 15","s08299_104.xml","0",2,"","YES")
 db[115] = new dbRecord(false, "Connector Composite (4014M), p. 16","s08299_105.xml","0",2,"","YES")
 db[116] = new dbRecord(false, "Connector Composites (4016), (4017), (4018), (4019), (4020), (4034), (4036), p. 17","s08299_106.xml","0",2,"","YES")
 db[117] = new dbRecord(false, "Connector Composites (4039), (4040), (4041), (4046), (4087), p. 18","s08299_107.xml","0",2,"","YES")
 db[118] = new dbRecord(false, "Connector Composites (4301), (4302), (4303), (4500), p. 19","s08299_108.xml","0",2,"","YES")
 db[119] = new dbRecord(false, "Connector Composite (4705), p. 20","s08299_109.xml","0",2,"","YES")
 db[120] = new dbRecord(false, "Connector Composites (4705M), (4905), (6011), p. 21","s08299_110.xml","0",2,"","YES")
 db[121] = new dbRecord(false, "Connector Composites (6020), (6021), p. 22","s08299_111.xml","0",2,"","YES")
 db[122] = new dbRecord(false, "Connector Composites (6316), (6323F), (6323M), (6332F), (6332M), (6333M), (6350), p. 23","s08299_112.xml","0",2,"","YES")
 db[123] = new dbRecord(false, "Connector Composites (6400), (6407), (6703), (6708), p. 24","s08299_113.xml","0",2,"","YES")
 db[124] = new dbRecord(false, "Connector Composites (6709), (6715), (7104M), (7104F), (7104FA), p. 25","s08299_114.xml","0",2,"","YES")
 db[125] = new dbRecord(false, "Connector Composite (7150), p. 25A","s08299_115.xml","0",2,"","YES")
 db[126] = new dbRecord(false, "Connector Composites (7200), (7202), p. 26","s08299_116.xml","0",2,"","YES")
 db[127] = new dbRecord(false, "Connector Composites (7203), (7204), p. 27","s08299_117.xml","0",2,"","YES")
 db[128] = new dbRecord(false, "Connector Composites (7250), (7300), (7303), p. 28","s08299_118.xml","0",2,"","YES")
 db[129] = new dbRecord(false, "Connector Composites (7304), (7305), (7500), p. 29","s08299_119.xml","0",2,"","YES")
 db[130] = new dbRecord(false, "Connector Composites (7350), (7500), p. 29A","s08299_120.xml","0",2,"","YES")
 db[131] = new dbRecord(false, "Connector Composites (7600), (7601), (7603), (7604), (7605), (7607), (7701), (8000), p. 30","s08299_121.xml","0",2,"","YES")
 db[132] = new dbRecord(false, "Connector Composites (8000F), (8001), (8001F), (8002R), (8002L), (8003), p. 31","s08299_122.xml","0",2,"","YES")
 db[133] = new dbRecord(false, "Connector Composites (8003), (8100R), (8100L), (8152R), (8152L), (8155R), (8155L), p. 32","s08299_123.xml","0",2,"","YES")
 db[134] = new dbRecord(false, "Connector Composites (8310), (8311), (8450), (9100), p. 33","s08299_124.xml","0",2,"","YES")
 db[135] = new dbRecord(false, "Connector Composites (9101), (9254), (9255), (9257), (9258), (9260), (9261), p. 34","s08299_125.xml","0",2,"","YES")
 db[136] = new dbRecord(false, "Connector Composites (9261), (9262F), (9262M), (9301), (9500M), p. 35","s08299_126.xml","0",2,"","YES")
 db[137] = new dbRecord(false, "Connector Composites (9500F), (9500M), (9501), p. 36","s08299_127.xml","0",2,"","YES")
 db[138] = new dbRecord(false, "Connector Composites (9503), (9506), (9507), (9508), (9510), (9511), p. 37","s08299_128.xml","0",2,"","YES")
 db[139] = new dbRecord(false, "Connector Composites (9512), (9513F), (9513M), (9514), p. 38","s08299_129.xml","0",2,"","YES")
 db[140] = new dbRecord(false, "Connector Composites  (9515), (9516), (9517), (9518), (9519), (9520), (9521), (9522), p. 39","s08299_130.xml","0",2,"","YES")
 db[141] = new dbRecord(false, "Connector Composites (9523F), (9523M), (9524), (9526), p. 40","s08299_131.xml","0",2,"","YES")
 db[142] = new dbRecord(false, "Connector Composites (9527), (9530), (9532F), (9532M), (9533), (9534), (9535), (9536), p. 41","s08299_132.xml","0",2,"","YES")
 db[143] = new dbRecord(false, "Connector Composites (9537M), (9537F), (9538), (9539), (9540), (9541M), p. 42","s08299_133.xml","0",2,"","YES")
 db[144] = new dbRecord(false, "Connector Composites (9541M), (9541F), (9736), (9737), (9777), (9778), (9801), p. 43","s08299_134.xml","0",2,"","YES")
// AHJO - In the following function the parameter 'occurs' was added Oct/Nov 2001
function dbRecord(mother,display,URL,occurs,indent,statusMsg,link){
	this.mother = mother   // is this item a parent?
	this.display = display // text to display
	this.URL = URL         // used to link to TOC
	this.occurances =  occurs  // how many times does search occur - THIS LINE WAS ADDED by AHJO
	this.indent = indent   // how many levels nested?
	this.statusMsg = statusMsg  // descriptive text for status bar 
	this.link = link  //  link tied to text; if empty string, item appears as straight text
	return this
}
// pre-load all images into cache
var collapsedImg = new Image(widgetWidth,widgetHeight)
collapsedImg.src = collapsedWidget
var expandedImg = new Image(widgetWidth,widgetHeight)
expandedImg.src = expandedWidget
var endpointImg = new Image(widgetWidth,widgetHeight)
endpointImg.src = endpointWidget
// mainframeURL = parent.mainframe.document.URL // get URL of mainframe 
// ** functions that get and set persistent cookie data **
// set cookie data
var mycookie = document.cookie
function setCurrState(setting) {
        mycookie = document.cookie = "currState=" + escape(setting)
}
// retrieve cookie data
function getCurrState() {
        var label = "currState="
        var labelLen = label.length
        var cLen = mycookie.length
        var i = 0
        while (i < cLen) {
                var j = i + labelLen
                if (mycookie.substring(i,j) == label) {
                        var cEnd = mycookie.indexOf(";",j)
                        if (cEnd ==     -1) {
                                cEnd = mycookie.length
                       }
                        return unescape(mycookie.substring(j,cEnd))
                }
               i++
       }
        return ""
}
// **function that updates persistent storage of state**
// toggles an outline mother entry, storing new value in the cookie
function toggle(n) {
	if (n != 0) {
		var newString = ""
		var currState = getCurrState() // of whole outline
		var expanded = currState.charAt(n-1) // of clicked item
		newString += currState.substring(0,n-1)
		newString += expanded ^ 1 // Bitwise XOR clicked item
		newString += currState.substring(n,currState.length)
		setCurrState(newString) // write new state back to cookie
	}
}
// **functions used in assembling updated outline**
// returns the proper GIF file name for each entry's control
function getGIF(n) {
	var mom = db[n].mother  // is entry a parent?
	var expanded = getCurrState().charAt(n-1) // of clicked item
	if (!mom) {
		return endpointWidget
	} else {
		if (expanded == 1) {
			return expandedWidget
		}
	}
	return collapsedWidget
}
// returns the proper status line text based on the icon style
function getGIFStatus(n) {
	var mom = db[n].mother  // is entry a parent
	var expanded = getCurrState().charAt(n-1) // of rolled item
	if (!mom) {
		return "No further items"
	} else {
		if (expanded == 1) {
			return "Click to collapse nested items"
		}
	}
	return "Click to expand nested items"
}
// initialize 'current state' storage field
if (getCurrState() == "" || getCurrState().length != (db.length-1)) {
	initState = ""
	for (i = 1; i < db.length; i++) {
		initState += "0"
	}
	setCurrState(initState)
}
// end -->


    </SCRIPT>
</HEAD>
<BODY>
<SCRIPT LANGUAGE="JavaScript1.1">
<!-- start
// build new outline based on the values of the cookie
// and data points in the outline data array.
// This fires each time the user clicks on a control,
// because the HREF for each one reloads the current document.
var newOutline = ""
var prevIndentDisplayed = 0
var showMyDaughter = 0
// cycle through each entry in the outline array
for (var i = 1; i < db.length; i++) {
	var theGIF = getGIF(i)				// get the image
	var theGIFStatus = getGIFStatus(i)  // get the status message
	var currIndent = db[i].indent		// get the indent level
	var expanded = getCurrState().charAt(i-1) // current state
        db[i].currentrow = ""

	if (currIndent == 0 || currIndent == 1 || db[i].currentrow == "currentrow" || currIndent <= prevIndentDisplayed || (showMyDaughter == 1 && (currIndent - prevIndentDisplayed == 1))) {
 // Phil added the if to remove the image from before the root element 
         if (currIndent != 0) {
			newOutline += "<SPAN class=\"" + db[i].currentrow + "\" style=\" position:relative;left:" + (indentPixels * currIndent) + "px;width:200px\"><A HREF=\"javascript:history.go(0)\" onMouseOver=\"window.status=\'" + theGIFStatus + "\';return true;\" onClick=\"toggle(" + i + ");return " + "\">"
			newOutline += "<IMG ALIGN=TOP SRC=\"" + theGIF + "\" HEIGHT=" + widgetHeight + " WIDTH=" + widgetWidth + " BORDER=0></A>"
			newOutline += "<SPAN title=\"" + db[i].display + "\" style=\"width:" + (200-widgetWidth) + "px\">"
			}
			if (db[i].link == "" || db[i].link == null) {
				newOutline += " <font size='1'>" +  db[i].display + "</font></SPAN></SPAN>" + "<BR>"	// no link, just a listed item
			} else {
                 if (db[i].occurances > 0)	{ 
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><font size='1'>" + db[i].display + "&nbsp;&nbsp;(" + db[i].occurances + ")</font></A></SPAN></SPAN><BR>"
			} else {
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><font size='1'>" + db[i].display + "</font></A></SPAN></SPAN><BR>"
			}
			}
		prevIndentDisplayed = currIndent
		showMyDaughter = expanded
		if (db.length > 25) {
			document.write(newOutline)
			newOutline = ""
		}
	}
}
document.write(newOutline)
// end -->


</SCRIPT>
</BODY>
</html>
