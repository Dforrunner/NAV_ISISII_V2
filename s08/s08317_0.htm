<HTML>
<HEAD>
    <TITLE>Service Section TOC</TITLE>
    <LINK href="../style.css" rel="STYLESHEET" type="text/css">
    <SCRIPT LANGUAGE="JavaScript1.1">
<!-- begin hiding
var indentPixels = 15
var collapsedWidget = "../images/plus.gif"
var expandedWidget = "../images/minus.gif"
var endpointWidget = "../images/end.gif"
var widgetWidth = 17
var widgetHeight = 18
var displayTarget = "mainframe"
// AHJO - In the folowing db the fourth field (after the xml file name) is new and set to "0" 
var db = new Array()
 db[1] = new dbRecord(true, "CF 500, CF 600 Models Built February 1, 2006 to August 31, 2007 - ELECTRICAL CIRCUIT DIAGRAMS","s08317_1.xml","0",0,"","YES")
 db[2] = new dbRecord(false, "Description","s08317_1.xml","0",1,"","YES")
 db[3] = new dbRecord(true, "Instructions and Charts (Chapter 1)","s08317_2.xml","0",1,"","")
 db[4] = new dbRecord(false, "Circuit Diagram Instructions, p. 1","s08317_2.xml","0",2,"","YES")
 db[5] = new dbRecord(false, "Circuit Diagram Instructions, p. 2","s08317_3.xml","0",2,"","YES")
 db[6] = new dbRecord(false, "Circuit Diagram Instructions, p. 3","s08317_4.xml","0",2,"","YES")
 db[7] = new dbRecord(false, "Relay Functions and Wiring Guide, p. 4","s08317_5.xml","0",2,"","YES")
 db[8] = new dbRecord(false, "International V6 Engine Controller Pin Number Identification, p. 5","s08317_6.xml","0",2,"","YES")
 db[9] = new dbRecord(false, "Power Distribution Box, p. 6","s08317_7.xml","0",2,"","YES")
 db[10] = new dbRecord(false, "Power Distribution Box, p. 7","s08317_8.xml","0",2,"","YES")
 db[11] = new dbRecord(false, "In-Cab Relay Box, p. 8","s08317_9.xml","0",2,"","YES")
 db[12] = new dbRecord(false, "Lamp Bulb Chart, p. 9","s08317_10.xml","0",2,"","YES")
 db[13] = new dbRecord(true, "12 Volt Power Distribution Circuit Diagrams (Chapter 2)","s08317_11.xml","0",1,"","")
 db[14] = new dbRecord(false, "Battery Feeds, p. 1","s08317_11.xml","0",2,"","YES")
 db[15] = new dbRecord(false, "Battery Feeds, p. 2","s08317_12.xml","0",2,"","YES")
 db[16] = new dbRecord(false, "Battery Feeds, p. 3","s08317_13.xml","0",2,"","YES")
 db[17] = new dbRecord(false, "Key Switch, p. 4","s08317_14.xml","0",2,"","YES")
 db[18] = new dbRecord(false, "Ignition Feeds (Run), p. 5","s08317_15.xml","0",2,"","YES")
 db[19] = new dbRecord(false, "Ignition Feeds (Start), p. 6","s08317_16.xml","0",2,"","YES")
 db[20] = new dbRecord(false, "Ignition Feeds (Run-Start), p. 7","s08317_17.xml","0",2,"","YES")
 db[21] = new dbRecord(false, "Ignition Feeds (Run-Accessory), p. 8","s08317_18.xml","0",2,"","YES")
 db[22] = new dbRecord(false, "Grounds (Main Chassis), p. 9","s08317_19.xml","0",2,"","YES")
 db[23] = new dbRecord(false, "Grounds (Main Chassis), p. 10","s08317_20.xml","0",2,"","YES")
 db[24] = new dbRecord(false, "Grounds (Rear Chassis), p. 11","s08317_21.xml","0",2,"","YES")
 db[25] = new dbRecord(false, "Grounds (IP), p. 12","s08317_22.xml","0",2,"","YES")
 db[26] = new dbRecord(false, "Grounds (IP), p. 13","s08317_23.xml","0",2,"","YES")
 db[27] = new dbRecord(false, "Cab Grounds (Roof, Floor), p. 14","s08317_24.xml","0",2,"","YES")
 db[28] = new dbRecord(false, "J1708 Data Link, p. 15","s08317_25.xml","0",2,"","YES")
 db[29] = new dbRecord(false, "J1939 Data Link, p. 16","s08317_26.xml","0",2,"","YES")
 db[30] = new dbRecord(false, "J2284 Data Link, p. 17","s08317_27.xml","0",2,"","YES")
 db[31] = new dbRecord(false, "Diagnostic Connectors, p. 18","s08317_28.xml","0",2,"","YES")
 db[32] = new dbRecord(true, "Cab Accessories (Chapter 3)","s08317_29.xml","0",1,"","")
 db[33] = new dbRecord(false, "Cigar Lighter, p. 1","s08317_29.xml","0",2,"","YES")
 db[34] = new dbRecord(false, "Power Windows, p. 2","s08317_30.xml","0",2,"","YES")
 db[35] = new dbRecord(false, "Power Doors, p. 3","s08317_31.xml","0",2,"","YES")
 db[36] = new dbRecord(false, "Horn, p. 4","s08317_32.xml","0",2,"","YES")
 db[37] = new dbRecord(false, "Radio, p. 5","s08317_33.xml","0",2,"","YES")
 db[38] = new dbRecord(false, "Windshield Wiper and Washer Pump, p. 6","s08317_34.xml","0",2,"","YES")
 db[39] = new dbRecord(false, "Door Ajar Switch and Dome Light, p. 7","s08317_35.xml","0",2,"","YES")
 db[40] = new dbRecord(true, "12V Charging and Cranking System (Chapter 4)","s08317_36.xml","0",1,"","")
 db[41] = new dbRecord(false, "Charging and Cranking - International V6 Engine, p. 1","s08317_36.xml","0",2,"","YES")
 db[42] = new dbRecord(true, "Fans and Engine Accessories (Chapter 5)","s08317_37.xml","0",1,"","")
 db[43] = new dbRecord(false, "HFCM Module - International V6 Engine, p. 1","s08317_37.xml","0",2,"","YES")
 db[44] = new dbRecord(false, "Fuel Tanks - Dual Tank, p. 2","s08317_38.xml","0",2,"","YES")
 db[45] = new dbRecord(false, "Fuel Tanks - Left and Aft Tank, p. 3","s08317_39.xml","0",2,"","YES")
 db[46] = new dbRecord(true, "Electronic Engines (Chapter 6)","s08317_40.xml","0",1,"","")
 db[47] = new dbRecord(false, "International V6 Power and Ground System, p. 1","s08317_40.xml","0",2,"","YES")
 db[48] = new dbRecord(false, "International V6 Cruise Control, p. 2","s08317_41.xml","0",2,"","YES")
 db[49] = new dbRecord(false, "International V6 Accelerator Pedal, p. 3","s08317_42.xml","0",2,"","YES")
 db[50] = new dbRecord(true, "Clusters and Warning Lights (Chapter 7)","s08317_43.xml","0",1,"","")
 db[51] = new dbRecord(false, "Cluster Connector A, p. 1","s08317_43.xml","0",2,"","YES")
 db[52] = new dbRecord(false, "Cluster Connector A, p. 2","s08317_44.xml","0",2,"","YES")
 db[53] = new dbRecord(false, "Cluster Connector B, p. 3","s08317_45.xml","0",2,"","YES")
 db[54] = new dbRecord(false, "Cluster Connector B, p. 4","s08317_46.xml","0",2,"","YES")
 db[55] = new dbRecord(true, "Lights (Chapter 8)","s08317_47.xml","0",1,"","")
 db[56] = new dbRecord(false, "Main Light Switch, Hazard Switch, p. 1","s08317_47.xml","0",2,"","YES")
 db[57] = new dbRecord(false, "Marker, Front Park and Turn Lights, p. 2","s08317_48.xml","0",2,"","YES")
 db[58] = new dbRecord(false, "Rear Tail, Turn, Stop and Backup Lights, p. 3","s08317_49.xml","0",2,"","YES")
 db[59] = new dbRecord(false, "Fog Lights, p. 4","s08317_50.xml","0",2,"","YES")
 db[60] = new dbRecord(false, "Headlights, p. 5","s08317_51.xml","0",2,"","YES")
 db[61] = new dbRecord(false, "Panel Lights, p. 6","s08317_52.xml","0",2,"","YES")
 db[62] = new dbRecord(true, "Chassis Accessories (Chapter 9)","s08317_53.xml","0",1,"","")
 db[63] = new dbRecord(false, "Antilock Brake System (ABS), p. 1","s08317_53.xml","0",2,"","YES")
 db[64] = new dbRecord(false, "Body Builder Customer Access Circuits (BOC), p. 2","s08317_54.xml","0",2,"","YES")
 db[65] = new dbRecord(false, "Body Builder Lighting Circuits (BOC), p. 3","s08317_55.xml","0",2,"","YES")
 db[66] = new dbRecord(false, "Body Builder (EOF), p. 4","s08317_56.xml","0",2,"","YES")
 db[67] = new dbRecord(false, "Brake Systems: Fluid, Pressure and Pedal Switch, p. 5","s08317_57.xml","0",2,"","YES")
 db[68] = new dbRecord(false, "Brake Systems: Electric Trailer Brakes, p. 6","s08317_58.xml","0",2,"","YES")
 db[69] = new dbRecord(true, "Transmission (Chapter 10)","s08317_59.xml","0",1,"","")
 db[70] = new dbRecord(false, "Transmission Control Module Connector, p. 1","s08317_59.xml","0",2,"","YES")
 db[71] = new dbRecord(false, "TCM to Transmission Bulkhead Connector, p. 2","s08317_60.xml","0",2,"","YES")
 db[72] = new dbRecord(true, "Climate Control (Chapter 11)","s08317_61.xml","0",1,"","")
 db[73] = new dbRecord(false, "HVAC System, p. 1","s08317_61.xml","0",2,"","YES")
 db[74] = new dbRecord(false, "A/C Clutch, p. 2","s08317_62.xml","0",2,"","YES")
 db[75] = new dbRecord(false, "Pusher Fan, p. 3","s08317_63.xml","0",2,"","YES")
 db[76] = new dbRecord(true, "Connector Composites (Chapter 12)","s08317_64.xml","0",1,"","")
 db[77] = new dbRecord(false, "Connector Composites (1), (2), (3), (4), (5), (101), (102), (103), (104), (105), (106), p. 1","s08317_64.xml","0",2,"","YES")
 db[78] = new dbRecord(false, "Connector Composites (1G), (201), (202A), (202C), (203), (204), p. 2","s08317_65.xml","0",2,"","YES")
 db[79] = new dbRecord(false, "Connector Composites (205A), (205B), (206), (207), (208), (209), p. 3","s08317_66.xml","0",2,"","YES")
 db[80] = new dbRecord(false, "Connector Composites (211), (212), (213), (214), (215), (217A), (217B), p. 4","s08317_67.xml","0",2,"","YES")
 db[81] = new dbRecord(false, "Connector Composites (220), (222), (223), (225), (226), (227), (228), (229), (233), (234), p. 5","s08317_68.xml","0",2,"","YES")
 db[82] = new dbRecord(false, "Connector Composites (235), (236B), p. 6","s08317_69.xml","0",2,"","YES")
 db[83] = new dbRecord(false, "Connector Composites (237), (238), (239), (240), (241), (242A), (242B), p. 7","s08317_70.xml","0",2,"","YES")
 db[84] = new dbRecord(false, "Connector Composites (2G), (3G), (243), (244), (245), (246), (247), (248),(249), (300G), (301G), (302G), p. 8","s08317_71.xml","0",2,"","YES")
 db[85] = new dbRecord(false, "Connector Composites (301), (301A), (301B), (301D), (304D), (304E), p. 9","s08317_72.xml","0",2,"","YES")
 db[86] = new dbRecord(false, "Connector Composite (306), p. 10","s08317_73.xml","0",2,"","YES")
 db[87] = new dbRecord(false, "Connector Composites (308), (309), (310), (313), p. 11","s08317_74.xml","0",2,"","YES")
 db[88] = new dbRecord(false, "Connector Composites (315), (316), (317), (318), (401), (402), p. 12","s08317_75.xml","0",2,"","YES")
 db[89] = new dbRecord(false, "Connector Composites (403), (404), (410), (411), (412), (413), (4G), (500), p. 13","s08317_76.xml","0",2,"","YES")
 db[90] = new dbRecord(false, "Connector Composites (502), (503), (504), (506), (507), (508), (509), (510), p. 14","s08317_77.xml","0",2,"","YES")
 db[91] = new dbRecord(false, "Geometry Removed, p. 15","s08317_78.xml","0",2,"","YES")
 db[92] = new dbRecord(false, "Connector Composites (700), (702A), p. 16","s08317_79.xml","0",2,"","YES")
 db[93] = new dbRecord(false, "Connector Composites (701), (702B), p. 17","s08317_80.xml","0",2,"","YES")
 db[94] = new dbRecord(false, "Connector Composites (702D), p. 18","s08317_81.xml","0",2,"","YES")
 db[95] = new dbRecord(false, "Connector Composites (703), (704), p. 19","s08317_82.xml","0",2,"","YES")
 db[96] = new dbRecord(false, "Connector Composites (705), p. 20","s08317_83.xml","0",2,"","YES")
 db[97] = new dbRecord(false, "Connector Composites (705), p. 21","s08317_84.xml","0",2,"","YES")
 db[98] = new dbRecord(false, "Connector Composites (705), (706), (707), p. 22","s08317_85.xml","0",2,"","YES")
// AHJO - In the following function the parameter 'occurs' was added Oct/Nov 2001
function dbRecord(mother,display,URL,occurs,indent,statusMsg,link){
	this.mother = mother   // is this item a parent?
	this.display = display // text to display
	this.URL = URL         // used to link to TOC
	this.occurances =  occurs  // how many times does search occur - THIS LINE WAS ADDED by AHJO
	this.indent = indent   // how many levels nested?
	this.statusMsg = statusMsg  // descriptive text for status bar 
	this.link = link  //  link tied to text; if empty string, item appears as straight text
	return this
}
// pre-load all images into cache
var collapsedImg = new Image(widgetWidth,widgetHeight)
collapsedImg.src = collapsedWidget
var expandedImg = new Image(widgetWidth,widgetHeight)
expandedImg.src = expandedWidget
var endpointImg = new Image(widgetWidth,widgetHeight)
endpointImg.src = endpointWidget
// mainframeURL = parent.mainframe.document.URL // get URL of mainframe 
// ** functions that get and set persistent cookie data **
// set cookie data
var mycookie = document.cookie
function setCurrState(setting) {
        mycookie = document.cookie = "currState=" + escape(setting)
}
// retrieve cookie data
function getCurrState() {
        var label = "currState="
        var labelLen = label.length
        var cLen = mycookie.length
        var i = 0
        while (i < cLen) {
                var j = i + labelLen
                if (mycookie.substring(i,j) == label) {
                        var cEnd = mycookie.indexOf(";",j)
                        if (cEnd ==     -1) {
                                cEnd = mycookie.length
                       }
                        return unescape(mycookie.substring(j,cEnd))
                }
               i++
       }
        return ""
}
// **function that updates persistent storage of state**
// toggles an outline mother entry, storing new value in the cookie
function toggle(n) {
	if (n != 0) {
		var newString = ""
		var currState = getCurrState() // of whole outline
		var expanded = currState.charAt(n-1) // of clicked item
		newString += currState.substring(0,n-1)
		newString += expanded ^ 1 // Bitwise XOR clicked item
		newString += currState.substring(n,currState.length)
		setCurrState(newString) // write new state back to cookie
	}
}
// **functions used in assembling updated outline**
// returns the proper GIF file name for each entry's control
function getGIF(n) {
	var mom = db[n].mother  // is entry a parent?
	var expanded = getCurrState().charAt(n-1) // of clicked item
	if (!mom) {
		return endpointWidget
	} else {
		if (expanded == 1) {
			return expandedWidget
		}
	}
	return collapsedWidget
}
// returns the proper status line text based on the icon style
function getGIFStatus(n) {
	var mom = db[n].mother  // is entry a parent
	var expanded = getCurrState().charAt(n-1) // of rolled item
	if (!mom) {
		return "No further items"
	} else {
		if (expanded == 1) {
			return "Click to collapse nested items"
		}
	}
	return "Click to expand nested items"
}
// initialize 'current state' storage field
if (getCurrState() == "" || getCurrState().length != (db.length-1)) {
	initState = ""
	for (i = 1; i < db.length; i++) {
		initState += "0"
	}
	setCurrState(initState)
}
// end -->


    </SCRIPT>
</HEAD>
<BODY>
<SCRIPT LANGUAGE="JavaScript1.1">
<!-- start
// build new outline based on the values of the cookie
// and data points in the outline data array.
// This fires each time the user clicks on a control,
// because the HREF for each one reloads the current document.
var newOutline = ""
var prevIndentDisplayed = 0
var showMyDaughter = 0
// cycle through each entry in the outline array
for (var i = 1; i < db.length; i++) {
	var theGIF = getGIF(i)				// get the image
	var theGIFStatus = getGIFStatus(i)  // get the status message
	var currIndent = db[i].indent		// get the indent level
	var expanded = getCurrState().charAt(i-1) // current state
        db[i].currentrow = ""

	if (currIndent == 0 || currIndent == 1 || db[i].currentrow == "currentrow" || currIndent <= prevIndentDisplayed || (showMyDaughter == 1 && (currIndent - prevIndentDisplayed == 1))) {
 // Phil added the if to remove the image from before the root element 
         if (currIndent != 0) {
			newOutline += "<SPAN class=\"" + db[i].currentrow + "\" style=\" position:relative;left:" + (indentPixels * currIndent) + "px;width:200px\"><A HREF=\"javascript:history.go(0)\" onMouseOver=\"window.status=\'" + theGIFStatus + "\';return true;\" onClick=\"toggle(" + i + ");return " + "\">"
			newOutline += "<IMG ALIGN=TOP SRC=\"" + theGIF + "\" HEIGHT=" + widgetHeight + " WIDTH=" + widgetWidth + " BORDER=0></A>"
			newOutline += "<SPAN title=\"" + db[i].display + "\" style=\"width:" + (200-widgetWidth) + "px\">"
			}
			if (db[i].link == "" || db[i].link == null) {
				newOutline += " <font size='1'>" +  db[i].display + "</font></SPAN></SPAN>" + "<BR>"	// no link, just a listed item
			} else {
                 if (db[i].occurances > 0)	{ 
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><font size='1'>" + db[i].display + "&nbsp;&nbsp;(" + db[i].occurances + ")</font></A></SPAN></SPAN><BR>"
			} else {
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><font size='1'>" + db[i].display + "</font></A></SPAN></SPAN><BR>"
			}
			}
		prevIndentDisplayed = currIndent
		showMyDaughter = expanded
		if (db.length > 25) {
			document.write(newOutline)
			newOutline = ""
		}
	}
}
document.write(newOutline)
// end -->


</SCRIPT>
</BODY>
</html>
