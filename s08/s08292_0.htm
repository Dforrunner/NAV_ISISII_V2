<HTML>
<HEAD>
    <TITLE>Service Section TOC</TITLE>
    <LINK href="../style.css" rel="STYLESHEET" type="text/css">
    <SCRIPT LANGUAGE="JavaScript1.1">
<!-- begin hiding
var indentPixels = 15
var collapsedWidget = "../images/plus.gif"
var expandedWidget = "../images/minus.gif"
var endpointWidget = "../images/end.gif"
var widgetWidth = 17
var widgetHeight = 18
var displayTarget = "mainframe"
// AHJO - In the folowing db the fourth field (after the xml file name) is new and set to "0" 
var db = new Array()
 db[1] = new dbRecord(true, "Iraqi Bus Starting September, 2004 - ELECTRICAL CIRCUIT DIAGRAMS","s08292_1.xml","0",0,"","YES")
 db[2] = new dbRecord(true, "INSTRUCTIONS AND CHARTS (Chapter 1)","s08292_2.xml","0",1,"","YES")
 db[3] = new dbRecord(false, "Circuit Number Identification Chart, p. 5","s08292_2.xml","0",2,"","YES")
 db[4] = new dbRecord(false, "Circuit Number Identification Chart, p. 6","s08292_3.xml","0",2,"","YES")
 db[5] = new dbRecord(false, "Circuit Number Identification Chart, p. 7","s08292_4.xml","0",2,"","YES")
 db[6] = new dbRecord(false, "Circuit Number Identification Chart, p. 8","s08292_5.xml","0",2,"","YES")
 db[7] = new dbRecord(false, "Circuit Number Identification Chart, p. 9","s08292_6.xml","0",2,"","YES")
 db[8] = new dbRecord(false, "Circuit Diagram Instructions, p. 10","s08292_7.xml","0",2,"","YES")
 db[9] = new dbRecord(false, "Circuit Number Identification and Location, p. 11","s08292_8.xml","0",2,"","YES")
 db[10] = new dbRecord(false, "Schematic Symbol Chart, p. 12","s08292_9.xml","0",2,"","YES")
 db[11] = new dbRecord(false, "Circuit Number Identification and Location, p. 13","s08292_10.xml","0",2,"","YES")
 db[12] = new dbRecord(false, "Lamp Bulb Chart, p. 14","s08292_11.xml","0",2,"","YES")
 db[13] = new dbRecord(true, "12 VOLT POWER DISTRIBUTION and Data Link (Chapter 2)","s08292_12.xml","0",1,"","")
 db[14] = new dbRecord(false, "Accessory, p. 20","s08292_12.xml","0",2,"","YES")
 db[15] = new dbRecord(false, "Battery, p. 21","s08292_13.xml","0",2,"","YES")
 db[16] = new dbRecord(false, "Ignition, p. 22","s08292_14.xml","0",2,"","YES")
 db[17] = new dbRecord(false, "Ignition, p. 23","s08292_15.xml","0",2,"","YES")
 db[18] = new dbRecord(false, "Ground, p. 24","s08292_16.xml","0",2,"","YES")
 db[19] = new dbRecord(false, "Drivetrain J1939 Data Link (Cab), p. 25","s08292_17.xml","0",2,"","YES")
 db[20] = new dbRecord(false, "Drivetrain J1939 Data Link (Chassis), p. 26","s08292_18.xml","0",2,"","YES")
 db[21] = new dbRecord(false, "J1708 Data Link Diagnostic, p. 27","s08292_19.xml","0",2,"","YES")
 db[22] = new dbRecord(false, "Diagnostics and Programmable Connector, p. 28","s08292_20.xml","0",2,"","YES")
 db[23] = new dbRecord(true, "12V Charging and Cranking System (Chapter 3)","s08292_21.xml","0",1,"","")
 db[24] = new dbRecord(false, "Key Switch Start Circuit, p. 30","s08292_21.xml","0",2,"","YES")
 db[25] = new dbRecord(false, "Charging and Cranking (V8 and I6 Engines), p. 31","s08292_22.xml","0",2,"","YES")
 db[26] = new dbRecord(true, "Cab Accessories (Chapter 4)","s08292_23.xml","0",1,"","")
 db[27] = new dbRecord(false, "Horn, Dual Electric, p. 35","s08292_23.xml","0",2,"","YES")
 db[28] = new dbRecord(false, "Steering Wheel Switches, p. 36","s08292_24.xml","0",2,"","YES")
 db[29] = new dbRecord(false, "Switch Packs, p. 37","s08292_25.xml","0",2,"","YES")
 db[30] = new dbRecord(false, "Windshield Wiper and Washer Systems, p. 38","s08292_26.xml","0",2,"","YES")
 db[31] = new dbRecord(true, "Engine Electronics (Chapter 5)","s08292_27.xml","0",1,"","")
 db[32] = new dbRecord(false, "Electronic Engine Controls - I6 Engine, p. 41","s08292_27.xml","0",2,"","YES")
 db[33] = new dbRecord(false, "Electronic Engine Controls - I6 HEUI Engines, Exhaust Brake, p. 42","s08292_28.xml","0",2,"","YES")
 db[34] = new dbRecord(true, "GAuges and Warning Lights (Chapter 6)","s08292_29.xml","0",1,"","")
 db[35] = new dbRecord(false, "IP Gauges, p. 45","s08292_29.xml","0",2,"","YES")
 db[36] = new dbRecord(false, "Warning Lights, p. 46","s08292_30.xml","0",2,"","YES")
 db[37] = new dbRecord(false, "Warning Lights Controlled by Engine, Transmission, ABS Controllers, p. 47","s08292_31.xml","0",2,"","YES")
 db[38] = new dbRecord(false, "Eng. Oil Press. and Temp., Speedometer, Tach., Voltmeter and Water Temp. Gauge Circuits, p. 48","s08292_32.xml","0",2,"","YES")
 db[39] = new dbRecord(false, "Gauges and Warning Lights - Gauge Cluster, p. 49","s08292_33.xml","0",2,"","YES")
 db[40] = new dbRecord(false, "Gauges and Warning Lights - Fuel Gauge with Air Brake Chassis, p. 50","s08292_34.xml","0",2,"","YES")
 db[41] = new dbRecord(false, "Gauges and Warning Lights - Park Brake Light, p. 51","s08292_35.xml","0",2,"","YES")
 db[42] = new dbRecord(false, "Gauges and Warning Lights - Air Pressure Input Circuit and Zero Volt Reference Splice, p. 11","s08292_36.xml","0",2,"","YES")
 db[43] = new dbRecord(true, "Chassis Accessories (Chapter 7)","s08292_37.xml","0",1,"","")
 db[44] = new dbRecord(false, "Antilock Brake System (ABS), Air, p. 56","s08292_37.xml","0",2,"","YES")
 db[45] = new dbRecord(false, "Antilock Brake System (ABS), Air (Cont.), Traction Control, p. 57","s08292_38.xml","0",2,"","YES")
 db[46] = new dbRecord(false, "Allison WTEC MD Transmission, p. 58","s08292_39.xml","0",2,"","YES")
 db[47] = new dbRecord(false, "Allison WTEC MD Transmission, p. 59","s08292_40.xml","0",2,"","YES")
 db[48] = new dbRecord(false, "Allison WTEC MD Transmission, p. 60","s08292_41.xml","0",2,"","YES")
 db[49] = new dbRecord(false, "Air Dryer Wiring, p. 61","s08292_42.xml","0",2,"","YES")
 db[50] = new dbRecord(true, "Light Systems (Chapter 8)","s08292_43.xml","0",1,"","")
 db[51] = new dbRecord(false, "Back-Up Lights / Exterior Light Check, p. 65","s08292_43.xml","0",2,"","YES")
 db[52] = new dbRecord(false, "High Beam, Flash to Pass, Turn Signal, and Air Brake Stop Switches, p. 66","s08292_44.xml","0",2,"","YES")
 db[53] = new dbRecord(false, "Headlights, Marker, Park, Turn, and Stop Relay - Without Fender Mount Lights, p. 67","s08292_45.xml","0",2,"","YES")
 db[54] = new dbRecord(false, "Headlights, Marker, Park, Turn, and Stop Relay - With Fender Mount Lights, p. 68","s08292_46.xml","0",2,"","YES")
 db[55] = new dbRecord(true, "Body Builder Connection Data (Chapter 9)","s08292_47.xml","0",1,"","")
 db[56] = new dbRecord(false, "Body Builder Electrical Connection Data for All Models, p. 71","s08292_47.xml","0",2,"","YES")
 db[57] = new dbRecord(false, "Body Builder Electrical Connection Data for CE Model, p. 72","s08292_48.xml","0",2,"","YES")
 db[58] = new dbRecord(false, "Emergency Exit Buzzer and Post Trip Inspection, p. 73","s08292_49.xml","0",2,"","YES")
 db[59] = new dbRecord(false, "Door Open / Close with Elec. Control, p. 74","s08292_50.xml","0",2,"","YES")
 db[60] = new dbRecord(false, "Door Open / Close with Air Control, p. 75","s08292_51.xml","0",2,"","YES")
 db[61] = new dbRecord(false, "Flasher Switches, p. 76","s08292_52.xml","0",2,"","YES")
 db[62] = new dbRecord(false, "Park Brake Status, p. 77","s08292_53.xml","0",2,"","YES")
 db[63] = new dbRecord(false, "Dual Wiper Motors for PT / Mexico and Export Models, p. 78","s08292_54.xml","0",2,"","YES")
 db[64] = new dbRecord(false, "CE Bus Redundant Door Controls, p. 79","s08292_55.xml","0",2,"","YES")
 db[65] = new dbRecord(false, "Manual Door for CE Bus, p. 80","s08292_56.xml","0",2,"","YES")
 db[66] = new dbRecord(true, "CONNECTOR COMPOSITES (Chapter 10)","s08292_57.xml","0",1,"","")
 db[67] = new dbRecord(false, "Connector Composites (701), (702), (1002), (1003), (1004), (1005), p. 85","s08292_57.xml","0",2,"","YES")
 db[68] = new dbRecord(false, "Connector Composites (1006), (1007), (1008F), (1008M), (1009), (1010), (1012), p. 86","s08292_58.xml","0",2,"","YES")
 db[69] = new dbRecord(false, "Connector Composite (1011), p. 87","s08292_59.xml","0",2,"","YES")
 db[70] = new dbRecord(false, "Connector Composite (1011) Fuse / Circuit Breaker Chart, p. 88","s08292_60.xml","0",2,"","YES")
 db[71] = new dbRecord(false, "Connector Composite (1011) Fuse Block Connections, p. 89","s08292_61.xml","0",2,"","YES")
 db[72] = new dbRecord(false, "Connector Composites (1015), (1016), (1017), (1018), (1019), (1020), (1021), p. 90","s08292_62.xml","0",2,"","YES")
 db[73] = new dbRecord(false, "Connector Composites (1100), (1101), (1104), (1105), (1106), (1107), (1107F), (1108), p. 91","s08292_63.xml","0",2,"","YES")
 db[74] = new dbRecord(false, "Connector Composites (1400), (1401), (1402), (1403), (1404), (1500), (1501), (1555), p. 92","s08292_64.xml","0",2,"","YES")
 db[75] = new dbRecord(false, "Connector Composites (1600), (1601), (1602), (1603), p. 93","s08292_65.xml","0",2,"","YES")
 db[76] = new dbRecord(false, "Connector Composites (1604), (1650), (1657), (1804), (1807), (1808), (1809), p. 94","s08292_66.xml","0",2,"","YES")
 db[77] = new dbRecord(false, "Connector Composites (1810), (1811), (1812), (1823), (1824), (1828), (1829), p. 95","s08292_67.xml","0",2,"","YES")
 db[78] = new dbRecord(false, "Connector Composites (4003), (4010), (4011), p. 96","s08292_68.xml","0",2,"","YES")
 db[79] = new dbRecord(false, "Connector Composite (4013M), p. 97","s08292_69.xml","0",2,"","YES")
 db[80] = new dbRecord(false, "Connector Composite (4013), p. 98","s08292_70.xml","0",2,"","YES")
 db[81] = new dbRecord(false, "Connector Composite (4014), p. 99","s08292_71.xml","0",2,"","YES")
 db[82] = new dbRecord(false, "Connector Composites (4014M), (4017), p. 100","s08292_72.xml","0",2,"","YES")
 db[83] = new dbRecord(false, "Connector Composites (4041), (4042), (4046), p. 101","s08292_73.xml","0",2,"","YES")
 db[84] = new dbRecord(false, "Connector Composite (4705), p. 102","s08292_74.xml","0",2,"","YES")
 db[85] = new dbRecord(false, "Connector Composites (4705M), p. 103","s08292_75.xml","0",2,"","YES")
 db[86] = new dbRecord(false, "Connector Composite (379), p. 104","s08292_76.xml","0",2,"","YES")
 db[87] = new dbRecord(false, "Connector Composites (6500), (6703), (7104F), p. 105","s08292_77.xml","0",2,"","YES")
 db[88] = new dbRecord(false, "Connector Composites (7200), (7202), p. 106","s08292_78.xml","0",2,"","YES")
 db[89] = new dbRecord(false, "Connector Composites (7203), (7204), p. 107","s08292_79.xml","0",2,"","YES")
 db[90] = new dbRecord(false, "Connector Composites (7603), (7605), (8000), p. 108","s08292_80.xml","0",2,"","YES")
 db[91] = new dbRecord(false, "Connector Composites (8000F), (8001), (8001F), (8002R), (8002L), (8003), p. 109","s08292_81.xml","0",2,"","YES")
 db[92] = new dbRecord(false, "Connector Composites (8003), (8100R), (8100L), (8152R), (8152L), (8155R), (8155L), p. 110","s08292_82.xml","0",2,"","YES")
 db[93] = new dbRecord(false, "Connector Composites (8310), (8311), (9100), p. 111","s08292_83.xml","0",2,"","YES")
 db[94] = new dbRecord(false, "Connector Composites (9101), (9254), (9255), (9260), (9258), (9260), (9261), p. 112","s08292_84.xml","0",2,"","YES")
 db[95] = new dbRecord(false, "Connector Composites (9261), (9301), (9500F), p. 113","s08292_85.xml","0",2,"","YES")
 db[96] = new dbRecord(false, "Connector Composites (9500M), (9501), (9503), (9507), p. 114","s08292_86.xml","0",2,"","YES")
 db[97] = new dbRecord(false, "Connector Composites (9508), (9512), p. 115","s08292_87.xml","0",2,"","YES")
 db[98] = new dbRecord(false, "Connector Composites (9513M), (9513F), p. 116","s08292_88.xml","0",2,"","YES")
 db[99] = new dbRecord(false, "Connector Composites (9518), (9519), (9520), (9521), (9522), p. 117","s08292_89.xml","0",2,"","YES")
 db[100] = new dbRecord(false, "Connector Composites (9524), (9530), p. 118","s08292_90.xml","0",2,"","YES")
 db[101] = new dbRecord(false, "Connector Composites (9531F), (9531M), (9737), p. 119","s08292_91.xml","0",2,"","YES")
// AHJO - In the following function the parameter 'occurs' was added Oct/Nov 2001
function dbRecord(mother,display,URL,occurs,indent,statusMsg,link){
	this.mother = mother   // is this item a parent?
	this.display = display // text to display
	this.URL = URL         // used to link to TOC
	this.occurances =  occurs  // how many times does search occur - THIS LINE WAS ADDED by AHJO
	this.indent = indent   // how many levels nested?
	this.statusMsg = statusMsg  // descriptive text for status bar 
	this.link = link  //  link tied to text; if empty string, item appears as straight text
	return this
}
// pre-load all images into cache
var collapsedImg = new Image(widgetWidth,widgetHeight)
collapsedImg.src = collapsedWidget
var expandedImg = new Image(widgetWidth,widgetHeight)
expandedImg.src = expandedWidget
var endpointImg = new Image(widgetWidth,widgetHeight)
endpointImg.src = endpointWidget
// mainframeURL = parent.mainframe.document.URL // get URL of mainframe 
// ** functions that get and set persistent cookie data **
// set cookie data
var mycookie = document.cookie
function setCurrState(setting) {
        mycookie = document.cookie = "currState=" + escape(setting)
}
// retrieve cookie data
function getCurrState() {
        var label = "currState="
        var labelLen = label.length
        var cLen = mycookie.length
        var i = 0
        while (i < cLen) {
                var j = i + labelLen
                if (mycookie.substring(i,j) == label) {
                        var cEnd = mycookie.indexOf(";",j)
                        if (cEnd ==     -1) {
                                cEnd = mycookie.length
                       }
                        return unescape(mycookie.substring(j,cEnd))
                }
               i++
       }
        return ""
}
// **function that updates persistent storage of state**
// toggles an outline mother entry, storing new value in the cookie
function toggle(n) {
	if (n != 0) {
		var newString = ""
		var currState = getCurrState() // of whole outline
		var expanded = currState.charAt(n-1) // of clicked item
		newString += currState.substring(0,n-1)
		newString += expanded ^ 1 // Bitwise XOR clicked item
		newString += currState.substring(n,currState.length)
		setCurrState(newString) // write new state back to cookie
	}
}
// **functions used in assembling updated outline**
// returns the proper GIF file name for each entry's control
function getGIF(n) {
	var mom = db[n].mother  // is entry a parent?
	var expanded = getCurrState().charAt(n-1) // of clicked item
	if (!mom) {
		return endpointWidget
	} else {
		if (expanded == 1) {
			return expandedWidget
		}
	}
	return collapsedWidget
}
// returns the proper status line text based on the icon style
function getGIFStatus(n) {
	var mom = db[n].mother  // is entry a parent
	var expanded = getCurrState().charAt(n-1) // of rolled item
	if (!mom) {
		return "No further items"
	} else {
		if (expanded == 1) {
			return "Click to collapse nested items"
		}
	}
	return "Click to expand nested items"
}
// initialize 'current state' storage field
if (getCurrState() == "" || getCurrState().length != (db.length-1)) {
	initState = ""
	for (i = 1; i < db.length; i++) {
		initState += "0"
	}
	setCurrState(initState)
}
// end -->


    </SCRIPT>
</HEAD>
<BODY>
<SCRIPT LANGUAGE="JavaScript1.1">
<!-- start
// build new outline based on the values of the cookie
// and data points in the outline data array.
// This fires each time the user clicks on a control,
// because the HREF for each one reloads the current document.
var newOutline = ""
var prevIndentDisplayed = 0
var showMyDaughter = 0
// cycle through each entry in the outline array
for (var i = 1; i < db.length; i++) {
	var theGIF = getGIF(i)				// get the image
	var theGIFStatus = getGIFStatus(i)  // get the status message
	var currIndent = db[i].indent		// get the indent level
	var expanded = getCurrState().charAt(i-1) // current state
        db[i].currentrow = ""

	if (currIndent == 0 || currIndent == 1 || db[i].currentrow == "currentrow" || currIndent <= prevIndentDisplayed || (showMyDaughter == 1 && (currIndent - prevIndentDisplayed == 1))) {
 // Phil added the if to remove the image from before the root element 
         if (currIndent != 0) {
			newOutline += "<SPAN class=\"" + db[i].currentrow + "\" style=\" position:relative;left:" + (indentPixels * currIndent) + "px;width:200px\"><A HREF=\"javascript:history.go(0)\" onMouseOver=\"window.status=\'" + theGIFStatus + "\';return true;\" onClick=\"toggle(" + i + ");return " + "\">"
			newOutline += "<IMG ALIGN=TOP SRC=\"" + theGIF + "\" HEIGHT=" + widgetHeight + " WIDTH=" + widgetWidth + " BORDER=0></A>"
			newOutline += "<SPAN title=\"" + db[i].display + "\" style=\"width:" + (200-widgetWidth) + "px\">"
			}
			if (db[i].link == "" || db[i].link == null) {
				newOutline += " <font size='1'>" +  db[i].display + "</font></SPAN></SPAN>" + "<BR>"	// no link, just a listed item
			} else {
                 if (db[i].occurances > 0)	{ 
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><font size='1'>" + db[i].display + "&nbsp;&nbsp;(" + db[i].occurances + ")</font></A></SPAN></SPAN><BR>"
			} else {
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><font size='1'>" + db[i].display + "</font></A></SPAN></SPAN><BR>"
			}
			}
		prevIndentDisplayed = currIndent
		showMyDaughter = expanded
		if (db.length > 25) {
			document.write(newOutline)
			newOutline = ""
		}
	}
}
document.write(newOutline)
// end -->


</SCRIPT>
</BODY>
</html>
