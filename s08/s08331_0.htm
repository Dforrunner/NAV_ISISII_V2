<HTML>
<HEAD>
    <TITLE>Service Section TOC</TITLE>
    <LINK href="../style.css" rel="STYLESHEET" type="text/css">
    <SCRIPT LANGUAGE="JavaScript1.1">
<!-- begin hiding
var indentPixels = 15
var collapsedWidget = "../images/plus.gif"
var expandedWidget = "../images/minus.gif"
var endpointWidget = "../images/end.gif"
var widgetWidth = 17
var widgetHeight = 18
var displayTarget = "mainframe"
// AHJO - In the folowing db the fourth field (after the xml file name) is new and set to "0" 
var db = new Array()
 db[1] = new dbRecord(true, "FE 300 Models Built June 11, 2007 and After - ELECTRICAL CIRCUIT DIAGRAMS","s08331_1.xml","0",0,"","YES")
 db[2] = new dbRecord(true, "Instructions and Charts (Chapter 2)","s08331_2.xml","0",1,"","")
 db[3] = new dbRecord(false, "Abbreviations, p. 1","s08331_2.xml","0",2,"","YES")
 db[4] = new dbRecord(false, "Acronyms, p. 2","s08331_3.xml","0",2,"","YES")
 db[5] = new dbRecord(false, "Circuit Diagram Instructions, p. 3","s08331_4.xml","0",2,"","YES")
 db[6] = new dbRecord(false, "Circuit Diagram Instructions, p. 4","s08331_5.xml","0",2,"","YES")
 db[7] = new dbRecord(false, "Circuit Number Identification and Color, p. 5","s08331_6.xml","0",2,"","YES")
 db[8] = new dbRecord(false, "Circuit Number Identification and Color, p. 6","s08331_7.xml","0",2,"","YES")
 db[9] = new dbRecord(false, "Lamp Bulb Chart, p. 7","s08331_8.xml","0",2,"","YES")
 db[10] = new dbRecord(false, "Relay Function and Wiring Guide, p. 8","s08331_9.xml","0",2,"","YES")
 db[11] = new dbRecord(false, "Schematic Symbol Chart, p. 9","s08331_10.xml","0",2,"","YES")
 db[12] = new dbRecord(false, "Schematic Symbol Chart, p. 10","s08331_11.xml","0",2,"","YES")
 db[13] = new dbRecord(false, "Schematic Symbol Chart, p. 11","s08331_12.xml","0",2,"","YES")
 db[14] = new dbRecord(false, "Schematic Symbol Chart, p. 12","s08331_13.xml","0",2,"","YES")
 db[15] = new dbRecord(true, "Power Distribution (Chapter 3)","s08331_14.xml","0",1,"","")
 db[16] = new dbRecord(false, "Battery, p. 1","s08331_14.xml","0",2,"","YES")
 db[17] = new dbRecord(false, "Ignition Key Switch, p. 2","s08331_15.xml","0",2,"","YES")
 db[18] = new dbRecord(false, "Ground, p. 3","s08331_16.xml","0",2,"","YES")
 db[19] = new dbRecord(false, "Ground, p. 4","s08331_17.xml","0",2,"","YES")
 db[20] = new dbRecord(true, "Cab Accessories (Chapter 4)","s08331_18.xml","0",1,"","")
 db[21] = new dbRecord(false, "Horn, p. 1","s08331_18.xml","0",2,"","YES")
 db[22] = new dbRecord(true, "Engine Systems (Chapter 5)","s08331_19.xml","0",1,"","")
 db[23] = new dbRecord(false, "Charging System / Ammeter, p. 1","s08331_19.xml","0",2,"","YES")
 db[24] = new dbRecord(false, "Cranking System, p. 2","s08331_20.xml","0",2,"","YES")
 db[25] = new dbRecord(false, "Horton Fan With electric Solenoid Control, p. 3","s08331_21.xml","0",2,"","YES")
 db[26] = new dbRecord(true, "Gauges (Chapter 6)","s08331_22.xml","0",1,"","")
 db[27] = new dbRecord(false, "Fuel Level Gauge, p. 1","s08331_22.xml","0",2,"","YES")
 db[28] = new dbRecord(false, "Speedometer, Tachometer, Voltmeter, p. 2","s08331_23.xml","0",2,"","YES")
 db[29] = new dbRecord(false, "Transmission Oil Temperature Gauge, p. 3","s08331_24.xml","0",2,"","YES")
 db[30] = new dbRecord(true, "Warning Lights (Chapter 7)","s08331_25.xml","0",1,"","")
 db[31] = new dbRecord(false, "Stop Engine and Low Air Pressure with Air Brakes, p. 1","s08331_25.xml","0",2,"","YES")
 db[32] = new dbRecord(false, "Stop Engine and Park Brake Warning Light with Hydraulic Brakes, p. 2","s08331_26.xml","0",2,"","YES")
 db[33] = new dbRecord(false, "Diagnostic / Programmable Connector, p. 3","s08331_27.xml","0",2,"","YES")
 db[34] = new dbRecord(false, "Parking Brake and Warning Lights with Air Brakes, p. 4","s08331_28.xml","0",2,"","YES")
 db[35] = new dbRecord(false, "Electronic Control / MSM Module Control System, p. 5","s08331_29.xml","0",2,"","YES")
 db[36] = new dbRecord(false, "Aftertreatment / MSM Module Control System, p. 6","s08331_30.xml","0",2,"","YES")
 db[37] = new dbRecord(false, "Aftertreatment / MSM Module Control System, p. 7","s08331_31.xml","0",2,"","YES")
 db[38] = new dbRecord(true, "Chassis Accessories (Chapter 8)","s08331_32.xml","0",1,"","")
 db[39] = new dbRecord(false, "Heated Fuel Filter, p. 1","s08331_32.xml","0",2,"","YES")
 db[40] = new dbRecord(false, "Air Dryer / Drain Valve, p. 2","s08331_33.xml","0",2,"","YES")
 db[41] = new dbRecord(false, "Body Builder Connections, p. 3","s08331_34.xml","0",2,"","YES")
 db[42] = new dbRecord(false, "Brake System Hydraulic, p. 4","s08331_35.xml","0",2,"","YES")
 db[43] = new dbRecord(false, "Stop Light Switch with Air Brakes, p. 5","s08331_36.xml","0",2,"","YES")
 db[44] = new dbRecord(false, "Antilock Brake System with Hydraulic Brakes, p. 6","s08331_37.xml","0",2,"","YES")
 db[45] = new dbRecord(false, "Antilock Brake System with Hydraulic Brakes, p. 7","s08331_38.xml","0",2,"","YES")
 db[46] = new dbRecord(false, "Wheel Chair with Park Brake and Lift Door Interlock, p. 8","s08331_39.xml","0",2,"","YES")
 db[47] = new dbRecord(false, "ABS6 - Bendix with Air Brakes, p. 9","s08331_40.xml","0",2,"","YES")
 db[48] = new dbRecord(false, "ABS6 - Bendix with Air Brakes, p. 10","s08331_41.xml","0",2,"","YES")
 db[49] = new dbRecord(false, "ABS6 - Bendix with Air Brakes, p. 11","s08331_42.xml","0",2,"","YES")
 db[50] = new dbRecord(false, "Allison 1000/2000 with LCT Gen IV with I6 Engine, p. 12","s08331_43.xml","0",2,"","YES")
 db[51] = new dbRecord(false, "Allison 1000/2000 with LCT Gen IV with I6 Engine, p. 12A","s08331_44.xml","0",2,"","YES")
 db[52] = new dbRecord(false, "Allison 1000/2000 with LCT Gen IV with I6 Engine, p. 13","s08331_45.xml","0",2,"","YES")
 db[53] = new dbRecord(false, "Allison 1000/2000 with LCT Gen IV with I6 Engine, p. 14","s08331_46.xml","0",2,"","YES")
 db[54] = new dbRecord(false, "Allison 1000/2000 with LCT Gen IV with I6 Engine, p. 15","s08331_47.xml","0",2,"","YES")
 db[55] = new dbRecord(false, "Allison 3000/4000 with WTEC Gen IV, p. 16","s08331_48.xml","0",2,"","YES")
 db[56] = new dbRecord(false, "Allison 3000/4000 with WTEC Gen IV with I6 Engine, p. 17","s08331_49.xml","0",2,"","YES")
 db[57] = new dbRecord(false, "Allison 3000/4000 with WTEC Gen IV Spare Input/Output, p. 18","s08331_50.xml","0",2,"","YES")
 db[58] = new dbRecord(false, "Allison 3000/4000 with WTEC Gen IV With I6 Engine, p. 19","s08331_51.xml","0",2,"","YES")
 db[59] = new dbRecord(false, "J1939 Datalink with WTEC Gen IV, p. 20","s08331_52.xml","0",2,"","YES")
 db[60] = new dbRecord(false, "J1939 Datalink with LCT Gen IV, p. 21","s08331_53.xml","0",2,"","YES")
 db[61] = new dbRecord(false, "J1708 Datalink, p. 22","s08331_54.xml","0",2,"","YES")
 db[62] = new dbRecord(false, "Air Powered Park Brake with Hydraulic Brake, p. 23","s08331_55.xml","0",2,"","YES")
 db[63] = new dbRecord(true, "Light Systems (Chapter 9)","s08331_56.xml","0",1,"","")
 db[64] = new dbRecord(false, "Backup Light System, p. 1","s08331_56.xml","0",2,"","YES")
 db[65] = new dbRecord(false, "Daytime Running Lights (USA), p. 2","s08331_57.xml","0",2,"","YES")
 db[66] = new dbRecord(false, "Headlight System, p. 3","s08331_58.xml","0",2,"","YES")
 db[67] = new dbRecord(false, "Panel Lights, p. 4","s08331_59.xml","0",2,"","YES")
 db[68] = new dbRecord(false, "Turn Signal System, p. 5","s08331_60.xml","0",2,"","YES")
 db[69] = new dbRecord(false, "Daytime Running Lights with Engine Running Only, p. 6","s08331_61.xml","0",2,"","YES")
 db[70] = new dbRecord(false, "Special Lighting, p. 7","s08331_62.xml","0",2,"","YES")
 db[71] = new dbRecord(true, "Electronic Control (Chapter 10)","s08331_63.xml","0",1,"","")
 db[72] = new dbRecord(false, "ECM Power / Ground Systems with I6 Engine, p. 1","s08331_63.xml","0",2,"","YES")
 db[73] = new dbRecord(false, "Ambient Air Temp, APS and Aftertreatment System, p. 2","s08331_64.xml","0",2,"","YES")
 db[74] = new dbRecord(false, "Cruise Control / Hand Throttle System, p. 3","s08331_65.xml","0",2,"","YES")
 db[75] = new dbRecord(false, "Coolant Sensor Module, p. 4","s08331_66.xml","0",2,"","YES")
 db[76] = new dbRecord(false, "Exhaust / Compression Brake and Exhaust Brake Only, p. 5","s08331_67.xml","0",2,"","YES")
 db[77] = new dbRecord(true, "Connector Body Composites (Chapter 11)","s08331_68.xml","0",1,"","")
 db[78] = new dbRecord(false, "Connector Composites (1), p. 1","s08331_68.xml","0",2,"","YES")
 db[79] = new dbRecord(false, "Connector Composite (1), p. 2","s08331_69.xml","0",2,"","YES")
 db[80] = new dbRecord(false, "Connector Composite (1), p. 3","s08331_70.xml","0",2,"","YES")
 db[81] = new dbRecord(false, "Connector Composite (2), p. 4","s08331_71.xml","0",2,"","YES")
 db[82] = new dbRecord(false, "Connector Composite (2), p. 5","s08331_72.xml","0",2,"","YES")
 db[83] = new dbRecord(false, "Connector Composites (2), (2A), (3), (4), p. 6","s08331_73.xml","0",2,"","YES")
 db[84] = new dbRecord(false, "Connector Composites (5), (7), (8), p. 7","s08331_74.xml","0",2,"","YES")
 db[85] = new dbRecord(false, "Connector Composites (9), (10), (11), p. 8","s08331_75.xml","0",2,"","YES")
 db[86] = new dbRecord(false, "Connector Composites (12), (13), p. 9","s08331_76.xml","0",2,"","YES")
 db[87] = new dbRecord(false, "Connector Composites (15), p. 10","s08331_77.xml","0",2,"","YES")
 db[88] = new dbRecord(false, "Connector Composites (20), (22), (23), p. 11","s08331_78.xml","0",2,"","YES")
 db[89] = new dbRecord(false, "Connector Composites (27), (35x3), (37), (38M), p. 12","s08331_79.xml","0",2,"","YES")
 db[90] = new dbRecord(false, "Connector Composites (40), (41), p. 13","s08331_80.xml","0",2,"","YES")
 db[91] = new dbRecord(false, "Connector Composites (44M), (49), (50), (53), p. 14","s08331_81.xml","0",2,"","YES")
 db[92] = new dbRecord(false, "Connector Composites (54), (57), (69) (80), (81), p. 15","s08331_82.xml","0",2,"","YES")
 db[93] = new dbRecord(false, "Connector Composites (82), (83), (83A), (84), p. 16","s08331_83.xml","0",2,"","YES")
 db[94] = new dbRecord(false, "Connector Composites (85), (88A), (88B), p. 17","s08331_84.xml","0",2,"","YES")
 db[95] = new dbRecord(false, "Connector Composites (89), (90), (91), (162), (165), p. 18","s08331_85.xml","0",2,"","YES")
 db[96] = new dbRecord(false, "Connector Composites (168), (168F), p. 19","s08331_86.xml","0",2,"","YES")
 db[97] = new dbRecord(false, "Connector Composites (169), (170), (200), p. 20","s08331_87.xml","0",2,"","YES")
 db[98] = new dbRecord(false, "Connector Composites (209), (211), (258), p. 21","s08331_88.xml","0",2,"","YES")
 db[99] = new dbRecord(false, "Connector Composite (261), p. 22","s08331_89.xml","0",2,"","YES")
 db[100] = new dbRecord(false, "Connector Composites (279), (288x1), p. 23","s08331_90.xml","0",2,"","YES")
 db[101] = new dbRecord(false, "Connector Composites (289), (290), (291), (292), (297), p. 24","s08331_91.xml","0",2,"","YES")
 db[102] = new dbRecord(false, "Connector Composites (303), (323), (329), p. 25","s08331_92.xml","0",2,"","YES")
 db[103] = new dbRecord(false, "Connector Composites (330), (350x2), (351), (352), p. 26","s08331_93.xml","0",2,"","YES")
 db[104] = new dbRecord(false, "Connector Composites (353), (354), (373M), (374M), p. 27","s08331_94.xml","0",2,"","YES")
 db[105] = new dbRecord(false, "Connector Composites (382M), (384M), (384N), p. 28","s08331_95.xml","0",2,"","YES")
 db[106] = new dbRecord(false, "Connector Composites (391), (392), p. 29","s08331_96.xml","0",2,"","YES")
 db[107] = new dbRecord(false, "Connector Composites (396), (397M), (420A), (422), p. 30","s08331_97.xml","0",2,"","YES")
 db[108] = new dbRecord(false, "Connector Composites (433), (434), p. 31","s08331_98.xml","0",2,"","YES")
 db[109] = new dbRecord(false, "Connector Composites (466), p. 32","s08331_99.xml","0",2,"","YES")
 db[110] = new dbRecord(false, "Connector Composites (499), (523), p. 33","s08331_100.xml","0",2,"","YES")
 db[111] = new dbRecord(false, "Connector Composites (569), (574), p. 34","s08331_101.xml","0",2,"","YES")
 db[112] = new dbRecord(false, "Connector Composites (574), (639), (644F), p. 35","s08331_102.xml","0",2,"","YES")
 db[113] = new dbRecord(false, "Connector Composites (646), (748), (749), p. 36","s08331_103.xml","0",2,"","YES")
 db[114] = new dbRecord(false, "Connector Composites (832), (836), (898), p. 37","s08331_104.xml","0",2,"","YES")
 db[115] = new dbRecord(false, "Connector Composites (899), (996M), (1002), p. 38","s08331_105.xml","0",2,"","YES")
 db[116] = new dbRecord(false, "Connector Composites (1004), (1050), (1133), (1152), p. 39","s08331_106.xml","0",2,"","YES")
 db[117] = new dbRecord(false, "Connector Composites (1272), (3027), (3028), (3029), (3032), p. 40","s08331_107.xml","0",2,"","YES")
 db[118] = new dbRecord(false, "Connector Composites (3036), p. 41","s08331_108.xml","0",2,"","YES")
 db[119] = new dbRecord(false, "Connector Composites (3043), (3084), p. 42","s08331_109.xml","0",2,"","YES")
 db[120] = new dbRecord(false, "Connector Composites (3084), (3084B), (3084R), p. 43","s08331_110.xml","0",2,"","YES")
 db[121] = new dbRecord(false, "Connector Composites (3111), (3111M), (3112), p. 44","s08331_111.xml","0",2,"","YES")
 db[122] = new dbRecord(false, "Connector Composites (3126), p. 45","s08331_112.xml","0",2,"","YES")
 db[123] = new dbRecord(false, "Connector Composites (6011), (6012), (6013), p. 46","s08331_113.xml","0",2,"","YES")
 db[124] = new dbRecord(false, "Connector Composites (6020), p. 47","s08331_114.xml","0",2,"","YES")
 db[125] = new dbRecord(false, "Connector Composites (6260), (6261), (6262), (6263), p. 48","s08331_115.xml","0",2,"","YES")
 db[126] = new dbRecord(false, "Connector Composites (6323), (6334), (6400), (6406), (6703), p. 49","s08331_116.xml","0",2,"","YES")
 db[127] = new dbRecord(false, "Connector Composites (6710), (6741), (7104), p. 50","s08331_117.xml","0",2,"","YES")
 db[128] = new dbRecord(false, "Connector Composites (7150), p. 51","s08331_118.xml","0",2,"","YES")
 db[129] = new dbRecord(false, "Connector Composites (7203A), p. 52","s08331_119.xml","0",2,"","YES")
 db[130] = new dbRecord(false, "Connector Composites (7250), (7350), p. 53","s08331_120.xml","0",2,"","YES")
 db[131] = new dbRecord(false, "Connector Composites (9254), (9255), (9258), p. 54","s08331_121.xml","0",2,"","YES")
 db[132] = new dbRecord(false, "Connector Composites (9261), (9500), p. 55","s08331_122.xml","0",2,"","YES")
 db[133] = new dbRecord(false, "Connector Composites (9550), (9551), (9553), (9777), p. 56","s08331_123.xml","0",2,"","YES")
 db[134] = new dbRecord(false, "Blank Page, p. 57","s08331_124.xml","0",2,"","YES")
// AHJO - In the following function the parameter 'occurs' was added Oct/Nov 2001
function dbRecord(mother,display,URL,occurs,indent,statusMsg,link){
	this.mother = mother   // is this item a parent?
	this.display = display // text to display
	this.URL = URL         // used to link to TOC
	this.occurances =  occurs  // how many times does search occur - THIS LINE WAS ADDED by AHJO
	this.indent = indent   // how many levels nested?
	this.statusMsg = statusMsg  // descriptive text for status bar 
	this.link = link  //  link tied to text; if empty string, item appears as straight text
	return this
}
// pre-load all images into cache
var collapsedImg = new Image(widgetWidth,widgetHeight)
collapsedImg.src = collapsedWidget
var expandedImg = new Image(widgetWidth,widgetHeight)
expandedImg.src = expandedWidget
var endpointImg = new Image(widgetWidth,widgetHeight)
endpointImg.src = endpointWidget
// mainframeURL = parent.mainframe.document.URL // get URL of mainframe 
// ** functions that get and set persistent cookie data **
// set cookie data
var mycookie = document.cookie
function setCurrState(setting) {
        mycookie = document.cookie = "currState=" + escape(setting)
}
// retrieve cookie data
function getCurrState() {
        var label = "currState="
        var labelLen = label.length
        var cLen = mycookie.length
        var i = 0
        while (i < cLen) {
                var j = i + labelLen
                if (mycookie.substring(i,j) == label) {
                        var cEnd = mycookie.indexOf(";",j)
                        if (cEnd ==     -1) {
                                cEnd = mycookie.length
                       }
                        return unescape(mycookie.substring(j,cEnd))
                }
               i++
       }
        return ""
}
// **function that updates persistent storage of state**
// toggles an outline mother entry, storing new value in the cookie
function toggle(n) {
	if (n != 0) {
		var newString = ""
		var currState = getCurrState() // of whole outline
		var expanded = currState.charAt(n-1) // of clicked item
		newString += currState.substring(0,n-1)
		newString += expanded ^ 1 // Bitwise XOR clicked item
		newString += currState.substring(n,currState.length)
		setCurrState(newString) // write new state back to cookie
	}
}
// **functions used in assembling updated outline**
// returns the proper GIF file name for each entry's control
function getGIF(n) {
	var mom = db[n].mother  // is entry a parent?
	var expanded = getCurrState().charAt(n-1) // of clicked item
	if (!mom) {
		return endpointWidget
	} else {
		if (expanded == 1) {
			return expandedWidget
		}
	}
	return collapsedWidget
}
// returns the proper status line text based on the icon style
function getGIFStatus(n) {
	var mom = db[n].mother  // is entry a parent
	var expanded = getCurrState().charAt(n-1) // of rolled item
	if (!mom) {
		return "No further items"
	} else {
		if (expanded == 1) {
			return "Click to collapse nested items"
		}
	}
	return "Click to expand nested items"
}
// initialize 'current state' storage field
if (getCurrState() == "" || getCurrState().length != (db.length-1)) {
	initState = ""
	for (i = 1; i < db.length; i++) {
		initState += "0"
	}
	setCurrState(initState)
}
// end -->


    </SCRIPT>
</HEAD>
<BODY>
<SCRIPT LANGUAGE="JavaScript1.1">
<!-- start
// build new outline based on the values of the cookie
// and data points in the outline data array.
// This fires each time the user clicks on a control,
// because the HREF for each one reloads the current document.
var newOutline = ""
var prevIndentDisplayed = 0
var showMyDaughter = 0
// cycle through each entry in the outline array
for (var i = 1; i < db.length; i++) {
	var theGIF = getGIF(i)				// get the image
	var theGIFStatus = getGIFStatus(i)  // get the status message
	var currIndent = db[i].indent		// get the indent level
	var expanded = getCurrState().charAt(i-1) // current state
        db[i].currentrow = ""

	if (currIndent == 0 || currIndent == 1 || db[i].currentrow == "currentrow" || currIndent <= prevIndentDisplayed || (showMyDaughter == 1 && (currIndent - prevIndentDisplayed == 1))) {
 // Phil added the if to remove the image from before the root element 
         if (currIndent != 0) {
			newOutline += "<SPAN class=\"" + db[i].currentrow + "\" style=\" position:relative;left:" + (indentPixels * currIndent) + "px;width:200px\"><A HREF=\"javascript:history.go(0)\" onMouseOver=\"window.status=\'" + theGIFStatus + "\';return true;\" onClick=\"toggle(" + i + ");return " + "\">"
			newOutline += "<IMG ALIGN=TOP SRC=\"" + theGIF + "\" HEIGHT=" + widgetHeight + " WIDTH=" + widgetWidth + " BORDER=0></A>"
			newOutline += "<SPAN title=\"" + db[i].display + "\" style=\"width:" + (200-widgetWidth) + "px\">"
			}
			if (db[i].link == "" || db[i].link == null) {
				newOutline += " <font size='1'>" +  db[i].display + "</font></SPAN></SPAN>" + "<BR>"	// no link, just a listed item
			} else {
                 if (db[i].occurances > 0)	{ 
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><font size='1'>" + db[i].display + "&nbsp;&nbsp;(" + db[i].occurances + ")</font></A></SPAN></SPAN><BR>"
			} else {
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><font size='1'>" + db[i].display + "</font></A></SPAN></SPAN><BR>"
			}
			}
		prevIndentDisplayed = currIndent
		showMyDaughter = expanded
		if (db.length > 25) {
			document.write(newOutline)
			newOutline = ""
		}
	}
}
document.write(newOutline)
// end -->


</SCRIPT>
</BODY>
</html>
