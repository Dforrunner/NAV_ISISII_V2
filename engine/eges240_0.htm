<HTML>
<HEAD>
    <TITLE>Service Section TOC</TITLE>
    <LINK href="../style.css" rel="STYLESHEET" type="text/css">
    <SCRIPT LANGUAGE="JavaScript1.1">
<!-- begin hiding
var indentPixels = 15
var collapsedWidget = "../images/plus.gif"
var expandedWidget = "../images/minus.gif"
var endpointWidget = "../images/end.gif"
var widgetWidth = 17
var widgetHeight = 18
var displayTarget = "mainframe"
// AHJO - In the folowing db the fourth field (after the xml file name) is new and set to "0" 
var db = new Array()
 db[1] = new dbRecord(true, "VT-365 Diesel Engine Diagnostics (2002)","eges240_1.xml","0",0,"","YES")
 db[2] = new dbRecord(true, "Engine Systems","eges240_EGES240-SEC1-DRAFT.xml","0",0,"","YES")
 db[3] = new dbRecord(true, "Engine Identification","eges240_3.xml","0",1,"","")
 db[4] = new dbRecord(false, "Engine Serial Number","eges240_3.xml","0",2,"","YES")
 db[5] = new dbRecord(false, "Emission Labels","eges240_4.xml","0",2,"","YES")
 db[6] = new dbRecord(false, "Engine Description","eges240_5.xml","0",2,"","YES")
 db[7] = new dbRecord(false, "Engine Component Location","eges240_6.xml","0",2,"","YES")
 db[8] = new dbRecord(true, "Engine Systems","eges240_7.xml","0",1,"","")
 db[9] = new dbRecord(false, "Service Procedure","eges240_7.xml","0",2,"","YES")
 db[10] = new dbRecord(true, "Air Management System","eges240_8.xml","0",1,"","")
 db[11] = new dbRecord(false, "Service Procedure","eges240_8.xml","0",2,"","YES")
 db[12] = new dbRecord(false, "Charge Air cooler (CAC)","eges240_9.xml","0",2,"","YES")
 db[13] = new dbRecord(false, "Electronic Variable Response Turbocharger  (EVRT&#8482;)","eges240_10.xml","0",2,"","YES")
 db[14] = new dbRecord(false, "Exhaust Gas Recirculation (EGR) System","eges240_11.xml","0",2,"","YES")
 db[15] = new dbRecord(false, "Exhaust System","eges240_12.xml","0",2,"","YES")
 db[16] = new dbRecord(true, "Fuel Management System","eges240_13.xml","0",1,"","")
 db[17] = new dbRecord(false, "Service Procedure","eges240_13.xml","0",2,"","YES")
 db[18] = new dbRecord(false, "Injection Control Pressure (ICP) System","eges240_14.xml","0",2,"","YES")
 db[19] = new dbRecord(false, "Fuel Injectors","eges240_15.xml","0",2,"","YES")
 db[20] = new dbRecord(true, "Fuel Supply System","eges240_16.xml","0",1,"","")
 db[21] = new dbRecord(false, "Service Procedure","eges240_16.xml","0",2,"","YES")
 db[22] = new dbRecord(false, "Fuel Flow","eges240_17.xml","0",2,"","YES")
 db[23] = new dbRecord(true, "Engine Lubrication System ","eges240_18.xml","0",1,"","")
 db[24] = new dbRecord(false, "Service Procedure","eges240_18.xml","0",2,"","YES")
 db[25] = new dbRecord(true, "Cooling System","eges240_19.xml","0",1,"","")
 db[26] = new dbRecord(false, "Service Procedure","eges240_19.xml","0",2,"","YES")
 db[27] = new dbRecord(true, "Electronic Control System","eges240_20.xml","0",1,"","")
 db[28] = new dbRecord(false, "Electronic Control Module (ECM)","eges240_20.xml","0",2,"","YES")
 db[29] = new dbRecord(false, "Injection Drive Module (IDM)","eges240_21.xml","0",2,"","YES")
 db[30] = new dbRecord(false, "Engine and vehicle sensors","eges240_22.xml","0",2,"","YES")
 db[31] = new dbRecord(true, "Glow Plug Control System","eges240_23.xml","0",1,"","")
 db[32] = new dbRecord(false, "Service Procedure","eges240_23.xml","0",2,"","YES")
 db[33] = new dbRecord(true, "Engine And Vehicle Features","eges240_EGES240-SEC2-DRAFT.xml","0",0,"","YES")
 db[34] = new dbRecord(true, "Standard Features","eges240_25.xml","0",1,"","")
 db[35] = new dbRecord(false, "Electronic Governor Control","eges240_25.xml","0",2,"","YES")
 db[36] = new dbRecord(false, "American Trucking Association (ATA) Datalink ","eges240_26.xml","0",2,"","YES")
 db[37] = new dbRecord(false, "Service Diagnostics","eges240_27.xml","0",2,"","YES")
 db[38] = new dbRecord(false, "Event Logging System","eges240_28.xml","0",2,"","YES")
 db[39] = new dbRecord(false, "Electronic Speedometer and Tachometer","eges240_29.xml","0",2,"","YES")
 db[40] = new dbRecord(false, "Cold Idle Advance","eges240_30.xml","0",2,"","YES")
 db[41] = new dbRecord(false, "Cold Ambient Protection (CAP)","eges240_31.xml","0",2,"","YES")
 db[42] = new dbRecord(false, "Coolant Temperature Compensation (Engine Over Temperature Protection System)","eges240_32.xml","0",2,"","YES")
 db[43] = new dbRecord(false, "Glow Plug Assisted Start","eges240_33.xml","0",2,"","YES")
 db[44] = new dbRecord(false, "Exhaust Back Pressure Engine Warm-Up System","eges240_34.xml","0",2,"","YES")
 db[45] = new dbRecord(false, "Engine Crank Inhibit (ECI)","eges240_35.xml","0",2,"","YES")
 db[46] = new dbRecord(false, "Change Oil Interval Message","eges240_36.xml","0",2,"","YES")
 db[47] = new dbRecord(true, "Optional Features","eges240_37.xml","0",1,"","")
 db[48] = new dbRecord(false, "Cruise Control","eges240_37.xml","0",2,"","YES")
 db[49] = new dbRecord(false, "Road Speed Limiting","eges240_38.xml","0",2,"","YES")
 db[50] = new dbRecord(false, "Body Equipment Manufacturer","eges240_39.xml","0",2,"","YES")
 db[51] = new dbRecord(false, "Engine Warning Protection System (EWPS)","eges240_40.xml","0",2,"","YES")
 db[52] = new dbRecord(false, "Service Procedure","eges240_41.xml","0",2,"","YES")
 db[53] = new dbRecord(false, "Idle Shutdown Timer (IST)","eges240_42.xml","0",2,"","YES")
 db[54] = new dbRecord(true, "Diagnostic Software Operation","eges240_EGES240-SEC3-DRAFT.xml","0",0,"","YES")
 db[55] = new dbRecord(true, "Continuous Monitor","eges240_44.xml","0",1,"","")
 db[56] = new dbRecord(false, "Service Procedure","eges240_44.xml","0",2,"","YES")
 db[57] = new dbRecord(false, "Engine Events","eges240_45.xml","0",2,"","YES")
 db[58] = new dbRecord(false, "Engine Event Hours/Odometer","eges240_46.xml","0",2,"","YES")
 db[59] = new dbRecord(true, "Diagnostic Trouble Codes ","eges240_47.xml","0",1,"","YES")
 db[60] = new dbRecord(false, "Procedure using EST","eges240_48.xml","0",2,"","YES")
 db[61] = new dbRecord(false, "Procedure using Switches for CRUISE ON and RESUME/ACCEL","eges240_49.xml","0",2,"","YES")
 db[62] = new dbRecord(true, "Diagnostic Tests","eges240_50.xml","0",1,"","YES")
 db[63] = new dbRecord(false, "Key On Engine Off Tests","eges240_51.xml","0",2,"","YES")
 db[64] = new dbRecord(false, "Key On Engine Running Tests","eges240_52.xml","0",2,"","YES")
 db[65] = new dbRecord(false, "Injector Disable Tests","eges240_53.xml","0",2,"","YES")
 db[66] = new dbRecord(false, "Relative Compression Test","eges240_54.xml","0",2,"","YES")
 db[67] = new dbRecord(true, "Engine Symptoms Diagnostics","eges240_EGES240-SEC4-DRAFT.xml","0",0,"","YES")
 db[68] = new dbRecord(true, "Description","eges240_56.xml","0",1,"","")
 db[69] = new dbRecord(false, "Service Procedure","eges240_56.xml","0",2,"","YES")
 db[70] = new dbRecord(true, "Test Procedures","eges240_57.xml","0",1,"","YES")
 db[71] = new dbRecord(false, "Combustion Leaks to Coolant","eges240_58.xml","0",2,"","YES")
 db[72] = new dbRecord(false, "Combustion Leaks to Fuel","eges240_59.xml","0",2,"","YES")
 db[73] = new dbRecord(false, "Coolant in Lube Oil","eges240_60.xml","0",2,"","YES")
 db[74] = new dbRecord(false, "Coolant Leak to Exhaust","eges240_61.xml","0",2,"","YES")
 db[75] = new dbRecord(false, "Coolant Over-Temperature","eges240_62.xml","0",2,"","YES")
 db[76] = new dbRecord(false, "ECM Reset/ IDM Reset (Intermittent Engine Stumble)","eges240_63.xml","0",2,"","YES")
 db[77] = new dbRecord(false, "Excessive Fuel Consumption","eges240_64.xml","0",2,"","YES")
 db[78] = new dbRecord(false, "Fuel in Coolant","eges240_65.xml","0",2,"","YES")
 db[79] = new dbRecord(false, "Fuel In Lube Oil","eges240_66.xml","0",2,"","YES")
 db[80] = new dbRecord(false, "Low Oil Pressure","eges240_67.xml","0",2,"","YES")
 db[81] = new dbRecord(false, "Priming the Fuel System","eges240_68.xml","0",2,"","YES")
 db[82] = new dbRecord(false, "Rough Idle","eges240_69.xml","0",2,"","YES")
 db[83] = new dbRecord(false, "Smoke","eges240_70.xml","0",2,"","YES")
 db[84] = new dbRecord(true, "Hard Start And No Start Diagnostics","eges240_EGES240-SEC5.xml","0",0,"","YES")
 db[85] = new dbRecord(false, "Description","eges240_EGES240-SEC5.xml","0",1,"","YES")
 db[86] = new dbRecord(false, "Hard Start and No Start Diagnostic Form","eges240_72.xml","0",1,"","YES")
 db[87] = new dbRecord(false, "Vehicle Information","eges240_73.xml","0",1,"","YES")
 db[88] = new dbRecord(false, "Obtaining Vehicle Information","eges240_74.xml","0",1,"","YES")
 db[89] = new dbRecord(true, "Test Procedures","eges240_75.xml","0",1,"","")
 db[90] = new dbRecord(false, "Fuel","eges240_75.xml","0",2,"","YES")
 db[91] = new dbRecord(false, "Engine Systems","eges240_76.xml","0",2,"","YES")
 db[92] = new dbRecord(false, "Engine Oil","eges240_77.xml","0",2,"","YES")
 db[93] = new dbRecord(false, "Intake and Exhaust Restriction","eges240_78.xml","0",2,"","YES")
 db[94] = new dbRecord(false, "Initial Key On (Do not start)","eges240_79.xml","0",2,"","YES")
 db[95] = new dbRecord(false, "Engine Cranking","eges240_80.xml","0",2,"","YES")
 db[96] = new dbRecord(false, "Diagnostic Troubles Codes","eges240_81.xml","0",2,"","YES")
 db[97] = new dbRecord(false, "Key On Engine Off Standard Test","eges240_82.xml","0",2,"","YES")
 db[98] = new dbRecord(false, "Key On Engine Off Injector Test","eges240_83.xml","0",2,"","YES")
 db[99] = new dbRecord(false, "Diagnostic Trouble Code Access","eges240_84.xml","0",2,"","YES")
 db[100] = new dbRecord(false, "EST Data List","eges240_85.xml","0",2,"","YES")
 db[101] = new dbRecord(false, "Main Power Relay Voltage to ECM","eges240_86.xml","0",2,"","YES")
 db[102] = new dbRecord(false, "Main Power Relay Voltage to IDM","eges240_87.xml","0",2,"","YES")
 db[103] = new dbRecord(false, "Fuel Pressure","eges240_88.xml","0",2,"","YES")
 db[104] = new dbRecord(false, "Glow Plug System","eges240_89.xml","0",2,"","YES")
 db[105] = new dbRecord(false, "Glow Plug System (Components)","eges240_90.xml","0",2,"","YES")
 db[106] = new dbRecord(false, "Low ICP System Pressure","eges240_91.xml","0",2,"","YES")
 db[107] = new dbRecord(true, "Performance Diagnostics","eges240_EGES240-SEC6.xml","0",0,"","YES")
 db[108] = new dbRecord(false, "Description","eges240_EGES240-SEC6.xml","0",1,"","YES")
 db[109] = new dbRecord(false, "Performance Diagnostics Form","eges240_93.xml","0",1,"","YES")
 db[110] = new dbRecord(false, "Vehicle Information","eges240_94.xml","0",1,"","YES")
 db[111] = new dbRecord(false, "Obtaining Vehicle Information","eges240_95.xml","0",1,"","YES")
 db[112] = new dbRecord(true, "Test Procedures","eges240_96.xml","0",1,"","")
 db[113] = new dbRecord(false, "Engine Oil ","eges240_96.xml","0",2,"","YES")
 db[114] = new dbRecord(false, "Fuel","eges240_97.xml","0",2,"","YES")
 db[115] = new dbRecord(false, "Fuel Pressure","eges240_98.xml","0",2,"","YES")
 db[116] = new dbRecord(false, "Fuel Inlet Restriction","eges240_99.xml","0",2,"","YES")
 db[117] = new dbRecord(false, "Diagnostic Troubles Codes","eges240_100.xml","0",2,"","YES")
 db[118] = new dbRecord(false, "Key On Engine Off Standard Test","eges240_101.xml","0",2,"","YES")
 db[119] = new dbRecord(false, "Key On Engine Off Injector Test","eges240_102.xml","0",2,"","YES")
 db[120] = new dbRecord(false, "Diagnostic Trouble Code Access","eges240_103.xml","0",2,"","YES")
 db[121] = new dbRecord(false, "Intake Restriction ","eges240_104.xml","0",2,"","YES")
 db[122] = new dbRecord(false, "EGR position","eges240_105.xml","0",2,"","YES")
 db[123] = new dbRecord(false, "Exhaust restriction","eges240_106.xml","0",2,"","YES")
 db[124] = new dbRecord(false, "Key On Engine Running Standard Test","eges240_107.xml","0",2,"","YES")
 db[125] = new dbRecord(false, "Torque Converter Stall","eges240_108.xml","0",2,"","YES")
 db[126] = new dbRecord(false, "Boost Pressure","eges240_109.xml","0",2,"","YES")
 db[127] = new dbRecord(false, "Fuel Pressure (Full load)","eges240_110.xml","0",2,"","YES")
 db[128] = new dbRecord(false, "Injection control pressure","eges240_111.xml","0",2,"","YES")
 db[129] = new dbRecord(false, "Crankcase Pressure","eges240_112.xml","0",2,"","YES")
 db[130] = new dbRecord(false, "Injector Disable","eges240_113.xml","0",2,"","YES")
 db[131] = new dbRecord(false, "Relative Compression","eges240_114.xml","0",2,"","YES")
 db[132] = new dbRecord(false, "Air Management","eges240_115.xml","0",2,"","YES")
 db[133] = new dbRecord(true, "Electronic Control Systems Diagnostics","eges240_EGES240-SEC7-DRAFT.xml","0",0,"","YES")
 db[134] = new dbRecord(true, "Description","eges240_117.xml","0",1,"","")
 db[135] = new dbRecord(false, "Service Procedure","eges240_117.xml","0",2,"","YES")
 db[136] = new dbRecord(true, "Diagnostic Form","eges240_118.xml","0",1,"","")
 db[137] = new dbRecord(false, "Electronic Control System Diagnostics - EGED 255","eges240_118.xml","0",2,"","YES")
 db[138] = new dbRecord(true, "Sensor and Actuator Locations","eges240_119.xml","0",1,"","")
 db[139] = new dbRecord(false, "Engine Mounted Components","eges240_119.xml","0",2,"","YES")
 db[140] = new dbRecord(false, "Vehicle Mounted Components","eges240_120.xml","0",2,"","YES")
 db[141] = new dbRecord(true, "Diagnostic Procedures for Sensors and Actuators","eges240_121.xml","0",1,"","")
 db[142] = new dbRecord(false, "Pin Grip Inspection","eges240_121.xml","0",2,"","YES")
 db[143] = new dbRecord(false, "V<subscript>REF</subscript> Tests using Master Diagnostics","eges240_122.xml","0",2,"","YES")
 db[144] = new dbRecord(false, "Temperature Sensor Tests using Master Diagnostics","eges240_123.xml","0",2,"","YES")
 db[145] = new dbRecord(true, "Pin Point Diagnostics","eges240_124.xml","0",1,"","")
 db[146] = new dbRecord(false, "Connector Voltage Checks","eges240_124.xml","0",2,"","YES")
 db[147] = new dbRecord(false, "Connector Checks to Ground","eges240_125.xml","0",2,"","YES")
 db[148] = new dbRecord(false, "Harness Resistance Tests","eges240_126.xml","0",2,"","YES")
 db[149] = new dbRecord(false, "Operational Voltage Checks","eges240_127.xml","0",2,"","YES")
 db[150] = new dbRecord(true, "Circuit Diagnostics","eges240_128.xml","0",1,"","")
 db[151] = new dbRecord(false, "Accelerator Pedal Position Sensor and Idle Validation Switch (APS/IVS)","eges240_129.xml","0",2,"","YES")
 db[152] = new dbRecord(false, "Air Management System (AMS)","eges240_130.xml","0",2,"","YES")
 db[153] = new dbRecord(false, "American Trucking Association (ATA) Data Link","eges240_131.xml","0",2,"","YES")
 db[154] = new dbRecord(false, "Barometric Absolute Pressure (BAP) Sensor","eges240_132.xml","0",2,"","YES")
 db[155] = new dbRecord(false, "Brake Switch Circuit","eges240_133.xml","0",2,"","YES")
 db[156] = new dbRecord(false, "Camshaft Position (CMP) Sensor","eges240_134.xml","0",2,"","YES")
 db[157] = new dbRecord(false, "Controller Area Network (CAN) Communications","eges240_135.xml","0",2,"","YES")
 db[158] = new dbRecord(false, "Crankshaft Position (CKP) Sensor","eges240_136.xml","0",2,"","YES")
 db[159] = new dbRecord(false, "Cylinder Balance","eges240_137.xml","0",2,"","YES")
 db[160] = new dbRecord(false, "Electronic Control Module Power (ECM PWR)","eges240_138.xml","0",2,"","YES")
 db[161] = new dbRecord(false, "Electronic Control Module (ECM) Self Diagnostics","eges240_139.xml","0",2,"","YES")
 db[162] = new dbRecord(false, "Electronic Control Module (ECM) / Injector Driver Module (IDM) Communications","eges240_140.xml","0",2,"","YES")
 db[163] = new dbRecord(false, "Engine Coolant Level (ECL) Sensor","eges240_141.xml","0",2,"","YES")
 db[164] = new dbRecord(false, "Engine Coolant Temperature (ECT) Sensor","eges240_142.xml","0",2,"","YES")
 db[165] = new dbRecord(false, "Engine Crank Inhibit (ECI) System","eges240_143.xml","0",2,"","YES")
 db[166] = new dbRecord(false, "Engine Fan Control (EFAN)","eges240_144.xml","0",2,"","YES")
 db[167] = new dbRecord(false, "Engine Oil Pressure (EOP) Sensor","eges240_145.xml","0",2,"","YES")
 db[168] = new dbRecord(false, "Engine Oil Temperature (EOT) Sensor","eges240_146.xml","0",2,"","YES")
 db[169] = new dbRecord(false, "Engine Warning and Protection System (EWPS)","eges240_147.xml","0",2,"","YES")
 db[170] = new dbRecord(false, "Exhaust Back Pressure (EBP) Sensor","eges240_148.xml","0",2,"","YES")
 db[171] = new dbRecord(false, "Exhaust Gas Recirculation (EGR) Actuator","eges240_149.xml","0",2,"","YES")
 db[172] = new dbRecord(false, "Glow Plug Control (GPC) Circuit","eges240_150.xml","0",2,"","YES")
 db[173] = new dbRecord(false, "Idle Shutdown Timer (IST) System","eges240_151.xml","0",2,"","YES")
 db[174] = new dbRecord(false, "Injection Control Pressure (ICP) Sensor","eges240_152.xml","0",2,"","YES")
 db[175] = new dbRecord(false, "Injection Control Pressure (ICP) System","eges240_153.xml","0",2,"","YES")
 db[176] = new dbRecord(false, "Injector Drive Circuits (INJ)","eges240_154.xml","0",2,"","YES")
 db[177] = new dbRecord(false, "Injection Driver Module Power (IDM PWR)","eges240_155.xml","0",2,"","YES")
 db[178] = new dbRecord(false, "Injection Pressure Regulator (IPR)","eges240_156.xml","0",2,"","YES")
 db[179] = new dbRecord(false, "Intake Air Temperature (IAT) Sensor","eges240_157.xml","0",2,"","YES")
 db[180] = new dbRecord(false, "Manifold Absolute Pressure (MAP) Sensor","eges240_158.xml","0",2,"","YES")
 db[181] = new dbRecord(false, "Manifold Air Temperature (MAT) Sensor","eges240_159.xml","0",2,"","YES")
 db[182] = new dbRecord(false, "Reference Voltage (V<subscript>REF</subscript>)","eges240_160.xml","0",2,"","YES")
 db[183] = new dbRecord(false, "Speed Control Command Switches (SCCS)","eges240_161.xml","0",2,"","YES")
 db[184] = new dbRecord(false, "Tachometer Output Circuit","eges240_162.xml","0",2,"","YES")
 db[185] = new dbRecord(false, "Variable Geometry Turbocharger (VGT) Actuator","eges240_163.xml","0",2,"","YES")
 db[186] = new dbRecord(false, "Vehicle Speed Sensor (VSS)","eges240_164.xml","0",2,"","YES")
 db[187] = new dbRecord(true, "Diagnostic Tools And Accessories","eges240_EGES240-SEC8-DRAFT.xml","0",0,"","YES")
 db[188] = new dbRecord(true, "Tools and Accessories","eges240_166.xml","0",1,"","")
 db[189] = new dbRecord(false, "EZ-Tech&#8482; Electronic Service Tool (EST)","eges240_166.xml","0",2,"","YES")
 db[190] = new dbRecord(false, "EZ-Tech&#8482; Interface Kit","eges240_167.xml","0",2,"","YES")
 db[191] = new dbRecord(false, "Master Diagnostics Software (MD32)","eges240_168.xml","0",2,"","YES")
 db[192] = new dbRecord(false, "Digital Multimeter (Fluke 88&#8482;)","eges240_169.xml","0",2,"","YES")
 db[193] = new dbRecord(false, "96-Pin Breakout Box - DLC II","eges240_170.xml","0",2,"","YES")
 db[194] = new dbRecord(false, "Breakout Harness Kit","eges240_171.xml","0",2,"","YES")
 db[195] = new dbRecord(false, "3-Banana Plug Harness","eges240_172.xml","0",2,"","YES")
 db[196] = new dbRecord(false, "12-Pin Breakout Harness","eges240_173.xml","0",2,"","YES")
 db[197] = new dbRecord(false, "500 Ohm Resistor Harness","eges240_174.xml","0",2,"","YES")
 db[198] = new dbRecord(false, "Actuator Breakout Harness (IPR/VGT)","eges240_175.xml","0",2,"","YES")
 db[199] = new dbRecord(false, "APS/IVS Sensor Breakout Harness","eges240_176.xml","0",2,"","YES")
 db[200] = new dbRecord(false, "EGR Breakout Harness","eges240_177.xml","0",2,"","YES")
 db[201] = new dbRecord(false, "Pressure Sensor Breakout Harness ","eges240_178.xml","0",2,"","YES")
 db[202] = new dbRecord(false, "Relay Breakout Harness","eges240_179.xml","0",2,"","YES")
 db[203] = new dbRecord(false, "Temperature Sensor Breakout Harness","eges240_180.xml","0",2,"","YES")
 db[204] = new dbRecord(false, "Temperature Sensor Breakout Harness","eges240_181.xml","0",2,"","YES")
 db[205] = new dbRecord(false, "Glow Plug Test Lead","eges240_182.xml","0",2,"","YES")
 db[206] = new dbRecord(false, "Terminal Test Adapter Kit","eges240_183.xml","0",2,"","YES")
 db[207] = new dbRecord(false, "Gauge Bar Tool","eges240_184.xml","0",2,"","YES")
 db[208] = new dbRecord(false, "Slack Tube Manometer","eges240_185.xml","0",2,"","YES")
 db[209] = new dbRecord(false, "Fuel/Oil Pressure Test Coupler","eges240_186.xml","0",2,"","YES")
 db[210] = new dbRecord(false, "Fuel Pressure Test Fitting","eges240_187.xml","0",2,"","YES")
 db[211] = new dbRecord(false, "Fuel Line Test Adapter","eges240_188.xml","0",2,"","YES")
 db[212] = new dbRecord(false, "Fuel Inlet Restriction Adapter","eges240_189.xml","0",2,"","YES")
 db[213] = new dbRecord(false, "ICP Pressure Test Tool ","eges240_190.xml","0",2,"","YES")
 db[214] = new dbRecord(false, "Quick Release Tool","eges240_191.xml","0",2,"","YES")
 db[215] = new dbRecord(false, "IPR Isolation Adapter","eges240_192.xml","0",2,"","YES")
 db[216] = new dbRecord(false, "ICP System Test Adapter","eges240_193.xml","0",2,"","YES")
 db[217] = new dbRecord(false, "High Pressure Rail Test Adapter","eges240_194.xml","0",2,"","YES")
 db[218] = new dbRecord(false, "ICP Leak Test Plugs (No. 10)","eges240_195.xml","0",2,"","YES")
 db[219] = new dbRecord(false, "Crankcase Pressure Test Adapter","eges240_196.xml","0",2,"","YES")
 db[220] = new dbRecord(false, "Cylinder Compression Gauge","eges240_197.xml","0",2,"","YES")
 db[221] = new dbRecord(false, "Compression Test Adapter","eges240_198.xml","0",2,"","YES")
 db[222] = new dbRecord(false, "Charge Air Cooler Test Kit","eges240_199.xml","0",2,"","YES")
 db[223] = new dbRecord(true, "Electronic Circuit Testing","eges240_200.xml","0",1,"","")
 db[224] = new dbRecord(false, "Electrical Theory","eges240_201.xml","0",2,"","YES")
 db[225] = new dbRecord(false, "Using the Digital MultiMeter","eges240_202.xml","0",2,"","YES")
 db[226] = new dbRecord(false, "Troubleshooting","eges240_203.xml","0",2,"","YES")
 db[227] = new dbRecord(true, "Using Master Diagnostics (MD 32)","eges240_204.xml","0",1,"","YES")
 db[228] = new dbRecord(false, "Starting Master Diagnostics From The Windows Desktop","eges240_204.xml","0",2,"","YES")
 db[229] = new dbRecord(false, "Opening A Com Port","eges240_205.xml","0",2,"","YES")
 db[230] = new dbRecord(false, "Text Window and Adding Parameter Identifiers (PID)","eges240_206.xml","0",2,"","YES")
 db[231] = new dbRecord(false, "Graphic Window and Adding Parameter Identifiers (PID)","eges240_207.xml","0",2,"","YES")
 db[232] = new dbRecord(false, "Opening A Session File","eges240_208.xml","0",2,"","YES")
 db[233] = new dbRecord(false, "Displaying Sensor Voltages","eges240_209.xml","0",2,"","YES")
 db[234] = new dbRecord(false, "Diagnostic Testing","eges240_210.xml","0",2,"","YES")
 db[235] = new dbRecord(false, "Check And Clear Diagnostic Trouble Codes (DTCs)","eges240_S17505001.xml","0",2,"","YES")
 db[236] = new dbRecord(false, "View Accumulators (Vehicle Information)","eges240_212.xml","0",2,"","YES")
 db[237] = new dbRecord(false, "Programmable Parameters, Change/View","eges240_213.xml","0",2,"","YES")
 db[238] = new dbRecord(false, "Snapshot- Record And Replay","eges240_214.xml","0",2,"","YES")
 db[239] = new dbRecord(false, "EST Help","eges240_215.xml","0",2,"","YES")
 db[240] = new dbRecord(true, "Abbreviations And Acronyms","eges240_EGES240-SEC9-DRAFT.xml","0",0,"","YES")
 db[241] = new dbRecord(true, "Abbreviations and Acronyms","eges240_217.xml","0",1,"","")
 db[242] = new dbRecord(false, "Service Procedure","eges240_217.xml","0",2,"","YES")
 db[243] = new dbRecord(true, "Terminology","eges240_EGES240-SEC10-DRAFT.xml","0",0,"","YES")
 db[244] = new dbRecord(true, "Terminology","eges240_219.xml","0",1,"","")
 db[245] = new dbRecord(false, "Service Procedure","eges240_219.xml","0",2,"","YES")
 db[246] = new dbRecord(true, "Appendix A - Performance Specifications","eges240_EGES240-APPENDIXA-DRAFT.xml","0",0,"","YES")
 db[247] = new dbRecord(true, "175 hp @ 2600 rpm ","eges240_221.xml","0",1,"","")
 db[248] = new dbRecord(false, "Service Procedure","eges240_221.xml","0",2,"","YES")
 db[249] = new dbRecord(true, "195 hp @ 2600 rpm","eges240_222.xml","0",1,"","")
 db[250] = new dbRecord(false, "Service Procedure","eges240_222.xml","0",2,"","YES")
 db[251] = new dbRecord(true, "215 hp @ 2600 rpm ","eges240_223.xml","0",1,"","")
 db[252] = new dbRecord(false, "Service Procedure","eges240_223.xml","0",2,"","YES")
 db[253] = new dbRecord(true, "Appendix B- Diagnostic Trouble Code Index","eges240_EGES240-APPENDIXB-DRAFT.xml","0",0,"","YES")
 db[254] = new dbRecord(false, "Diagnostic trouble code index","eges240_FC.xml","0",1,"","YES")
 db[255] = new dbRecord(true, "Appendix C- Technical Service Instructions","eges240_EGES240-APPENDIXC-DRAFT.xml","0",0,"","YES")
 db[256] = new dbRecord(false, "Description","eges240_227.xml","0",1,"","YES")
// AHJO - In the following function the parameter 'occurs' was added Oct/Nov 2001
function dbRecord(mother,display,URL,occurs,indent,statusMsg,link){
	this.mother = mother   // is this item a parent?
	this.display = display // text to display
	this.URL = URL         // used to link to TOC
	this.occurances =  occurs  // how many times does search occur - THIS LINE WAS ADDED by AHJO
	this.indent = indent   // how many levels nested?
	this.statusMsg = statusMsg  // descriptive text for status bar 
	this.link = link  //  link tied to text; if empty string, item appears as straight text
	return this
}
// pre-load all images into cache
var collapsedImg = new Image(widgetWidth,widgetHeight)
collapsedImg.src = collapsedWidget
var expandedImg = new Image(widgetWidth,widgetHeight)
expandedImg.src = expandedWidget
var endpointImg = new Image(widgetWidth,widgetHeight)
endpointImg.src = endpointWidget
// mainframeURL = parent.mainframe.document.URL // get URL of mainframe 
// ** functions that get and set persistent cookie data **
// set cookie data
var mycookie = document.cookie
function setCurrState(setting) {
        mycookie = document.cookie = "currState=" + escape(setting)
}
// retrieve cookie data
function getCurrState() {
        var label = "currState="
        var labelLen = label.length
        var cLen = mycookie.length
        var i = 0
        while (i < cLen) {
                var j = i + labelLen
                if (mycookie.substring(i,j) == label) {
                        var cEnd = mycookie.indexOf(";",j)
                        if (cEnd ==     -1) {
                                cEnd = mycookie.length
                       }
                        return unescape(mycookie.substring(j,cEnd))
                }
               i++
       }
        return ""
}
// **function that updates persistent storage of state**
// toggles an outline mother entry, storing new value in the cookie
function toggle(n) {
	if (n != 0) {
		var newString = ""
		var currState = getCurrState() // of whole outline
		var expanded = currState.charAt(n-1) // of clicked item
		newString += currState.substring(0,n-1)
		newString += expanded ^ 1 // Bitwise XOR clicked item
		newString += currState.substring(n,currState.length)
		setCurrState(newString) // write new state back to cookie
	}
}
// **functions used in assembling updated outline**
// returns the proper GIF file name for each entry's control
function getGIF(n) {
	var mom = db[n].mother  // is entry a parent?
	var expanded = getCurrState().charAt(n-1) // of clicked item
	if (!mom) {
		return endpointWidget
	} else {
		if (expanded == 1) {
			return expandedWidget
		}
	}
	return collapsedWidget
}
// returns the proper status line text based on the icon style
function getGIFStatus(n) {
	var mom = db[n].mother  // is entry a parent
	var expanded = getCurrState().charAt(n-1) // of rolled item
	if (!mom) {
		return "No further items"
	} else {
		if (expanded == 1) {
			return "Click to collapse nested items"
		}
	}
	return "Click to expand nested items"
}
// initialize 'current state' storage field
if (getCurrState() == "" || getCurrState().length != (db.length-1)) {
	initState = ""
	for (i = 1; i < db.length; i++) {
		initState += "0"
	}
	setCurrState(initState)
}
// end -->

    </SCRIPT>
</HEAD>
<BODY>
<h3>VT-365 Diesel Engine Diagnostics (2002)</h3>
<SCRIPT LANGUAGE="JavaScript1.1">
<!-- start
// build new outline based on the values of the cookie
// and data points in the outline data array.
// This fires each time the user clicks on a control,
// because the HREF for each one reloads the current document.
var newOutline = ""
var prevIndentDisplayed = 0
var showMyDaughter = 0
// cycle through each entry in the outline array
for (var i = 1; i < db.length; i++) {
	var theGIF = getGIF(i)				// get the image
	var theGIFStatus = getGIFStatus(i)  // get the status message
	var currIndent = db[i].indent		// get the indent level
	var expanded = getCurrState().charAt(i-1) // current state
        db[i].currentrow = ""

	if (currIndent == 0 || currIndent == 1 || db[i].currentrow == "currentrow" || currIndent <= prevIndentDisplayed || (showMyDaughter == 1 && (currIndent - prevIndentDisplayed == 1))) {
 // Phil added the if to remove the image from before the root element
         if (currIndent != 0) {
			newOutline += "<SPAN class=\"" + db[i].currentrow + "\" style=\" position:relative;left:" + (indentPixels * currIndent) + "px;width:200px\"><A HREF=\"javascript:history.go(0)\" onMouseOver=\"window.status=\'" + theGIFStatus + "\';return true;\" onClick=\"toggle(" + i + ");return " + "\">"
			newOutline += "<IMG ALIGN=TOP SRC=\"" + theGIF + "\" HEIGHT=" + widgetHeight + " WIDTH=" + widgetWidth + " BORDER=0></A>"
			newOutline += "<SPAN title=\"" + db[i].display + "\" style=\"width:" + (200-widgetWidth) + "px\">"
			}
			if (db[i].link == "" || db[i].link == null) {
				newOutline += " <small'>" +  db[i].display + "</small></SPAN></SPAN>" + "<BR>"	// no link, just a listed item
			} else {
                 if (db[i].occurances > 0)	{
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><small>" + db[i].display + "&nbsp;&nbsp;("
 + db[i].occurances + ")</small></A></SPAN></SPAN><BR>"
			} else {
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><small'>" + db[i].display + "</small></A></SPAN></SPAN><BR>"
			}
			}
		prevIndentDisplayed = currIndent
		showMyDaughter = expanded
		if (db.length > 25) {
			document.write(newOutline)
			newOutline = ""
		}
	}
}
document.write(newOutline)
// end -->

</SCRIPT>
</BODY>
</html>
