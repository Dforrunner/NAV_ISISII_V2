<HTML>
<HEAD>
    <TITLE>Service Section TOC</TITLE>
    <LINK href="../style.css" rel="STYLESHEET" type="text/css">
    <SCRIPT LANGUAGE="JavaScript1.1">
<!-- begin hiding
var indentPixels = 15
var collapsedWidget = "../images/plus.gif"
var expandedWidget = "../images/minus.gif"
var endpointWidget = "../images/end.gif"
var widgetWidth = 17
var widgetHeight = 18
var displayTarget = "mainframe"
// AHJO - In the folowing db the fourth field (after the xml file name) is new and set to "0" 
var db = new Array()
 db[1] = new dbRecord(true, "530 and DT-466/408 Diesel Engine Service (1994)","e105_1.xml","0",0,"","YES")
 db[2] = new dbRecord(true, "Introduction","e105_E105IN.xml","0",0,"","YES")
 db[3] = new dbRecord(false, "ENGINE IDENTIFICATION","e105_E105IN.xml","0",1,"","YES")
 db[4] = new dbRecord(true, "Injection Pump Identification","e105_3.xml","0",1,"","")
 db[5] = new dbRecord(false, "MODEL PES6P (7100) FUEL INJECTION PUMP (Used on the International&#174; 530 Engines)","e105_3.xml","0",2,"","YES")
 db[6] = new dbRecord(false, "MODEL PES6P (3000) FUEL INJECTION PUMP (Used on DT-408 and DT-466 Engines)","e105_4.xml","0",2,"","YES")
 db[7] = new dbRecord(true, "Turbocharger Identification","e105_5.xml","0",1,"","")
 db[8] = new dbRecord(false, "Non Wastegated Turbocharger, Used On All DT 408 Series Diesel Engines and DT 466; 195 HP DT 466; 210 HP and DT 466; 230 HP Diesel Engines.","e105_5.xml","0",2,"","YES")
 db[9] = new dbRecord(false, "Wastegated Turbocharger, Used On DT 466; 250 HP and DT 466; 275 HP Diesel Engines and All International&#174; 530 Series Diesel Engines.","e105_6.xml","0",2,"","YES")
 db[10] = new dbRecord(false, "General Features","e105_7.xml","0",1,"","YES")
 db[11] = new dbRecord(false, "Chassis Mounted Air-to-air Intercooler","e105_8.xml","0",1,"","YES")
 db[12] = new dbRecord(false, "Cooling System","e105_9.xml","0",1,"","YES")
 db[13] = new dbRecord(true, "Coolant Flow System","e105_10.xml","0",1,"","YES")
 db[14] = new dbRecord(false, "THERMOSTAT OPERATION","e105_10.xml","0",2,"","YES")
 db[15] = new dbRecord(true, "Lubrication System","e105_11.xml","0",1,"","")
 db[16] = new dbRecord(false, "DESCRIPTION","e105_11.xml","0",2,"","YES")
 db[17] = new dbRecord(false, "Location","e105_12.xml","0",2,"","YES")
 db[18] = new dbRecord(false, "Oil Flow","e105_13.xml","0",2,"","YES")
 db[19] = new dbRecord(false, "Oil Pressure Regulator Valve And Oil Pressure Relief Valve.","e105_14.xml","0",2,"","YES")
 db[20] = new dbRecord(true, "Fuel System","e105_15.xml","0",1,"","")
 db[21] = new dbRecord(false, "Location","e105_15.xml","0",2,"","YES")
 db[22] = new dbRecord(false, "Negative Pressure","e105_16.xml","0",2,"","YES")
 db[23] = new dbRecord(false, "Intermediate Pressure","e105_17.xml","0",2,"","YES")
 db[24] = new dbRecord(false, "High Pressure","e105_18.xml","0",2,"","YES")
 db[25] = new dbRecord(false, "Low Pressure","e105_19.xml","0",2,"","YES")
 db[26] = new dbRecord(true, "Air Induction And Exhaust Systems","e105_20.xml","0",1,"","")
 db[27] = new dbRecord(false, "DESCRIPTION","e105_20.xml","0",2,"","YES")
 db[28] = new dbRecord(false, "Air Flow","e105_21.xml","0",2,"","YES")
 db[29] = new dbRecord(false, "Component Location","e105_22.xml","0",1,"","YES")
 db[30] = new dbRecord(true, "Mounting Engine On Stand","e105_E10501.xml","0",0,"","YES")
 db[31] = new dbRecord(false, "SPECIAL TORQUE VALUES","e105_E10501.xml","0",1,"","YES")
 db[32] = new dbRecord(true, "Special Service Tools","e105_24.xml","0",1,"","YES")
 db[33] = new dbRecord(false, "Mounting Engine On Stand","e105_25.xml","0",1,"","YES")
 db[34] = new dbRecord(true, "Turbochargers","e105_E10502.xml","0",0,"","YES")
 db[35] = new dbRecord(false, "Specifications","e105_HL1050201.xml","0",1,"","YES")
 db[36] = new dbRecord(false, "Special Torque Values","e105_28.xml","0",1,"","YES")
 db[37] = new dbRecord(false, "Special Service Tools","e105_29.xml","0",1,"","YES")
 db[38] = new dbRecord(true, "General Operation","e105_30.xml","0",1,"","")
 db[39] = new dbRecord(false, "TURBOCHARGER","e105_30.xml","0",2,"","YES")
 db[40] = new dbRecord(false, "Component Identification","e105_31.xml","0",2,"","YES")
 db[41] = new dbRecord(true, "Removal And Inspection","e105_32.xml","0",1,"","")
 db[42] = new dbRecord(false, "Turbocharger Removal","e105_32.xml","0",2,"","YES")
 db[43] = new dbRecord(false, "Cleaning","e105_33.xml","0",2,"","YES")
 db[44] = new dbRecord(false, "Inspection","e105_34.xml","0",2,"","YES")
 db[45] = new dbRecord(false, "Visual Inspection","e105_35.xml","0",2,"","YES")
 db[46] = new dbRecord(false, "Check For Free Rotation","e105_36.xml","0",2,"","YES")
 db[47] = new dbRecord(false, "Check For Turbine/Compressor Housing Hub","e105_37.xml","0",2,"","YES")
 db[48] = new dbRecord(false, "Check Axial End Play","e105_38.xml","0",2,"","YES")
 db[49] = new dbRecord(false, "Check Wastegate Actuator (If Equipped)","e105_39.xml","0",2,"","YES")
 db[50] = new dbRecord(false, "Disassembly","e105_40.xml","0",1,"","YES")
 db[51] = new dbRecord(false, "Reassembly","e105_HL1050202.xml","0",1,"","YES")
 db[52] = new dbRecord(false, "Installation","e105_42.xml","0",1,"","YES")
 db[53] = new dbRecord(true, "Manifolds","e105_E10503.xml","0",0,"","YES")
 db[54] = new dbRecord(false, "Valve Cover/intake Manifold Assembly","e105_44.xml","0",1,"","YES")
 db[55] = new dbRecord(false, "Intercooler Piping Layout","e105_45.xml","0",1,"","YES")
 db[56] = new dbRecord(false, "Specifications","e105_46.xml","0",1,"","YES")
 db[57] = new dbRecord(false, "Special Torque Values","e105_47.xml","0",1,"","YES")
 db[58] = new dbRecord(false, "Special Service Tools","e105_48.xml","0",1,"","YES")
 db[59] = new dbRecord(true, "Exhaust Manifold","e105_49.xml","0",1,"","")
 db[60] = new dbRecord(false, "REMOVAL","e105_49.xml","0",2,"","YES")
 db[61] = new dbRecord(false, "Cleaning","e105_50.xml","0",2,"","YES")
 db[62] = new dbRecord(false, "Inspection","e105_51.xml","0",2,"","YES")
 db[63] = new dbRecord(false, "Installation","e105_52.xml","0",2,"","YES")
 db[64] = new dbRecord(true, "Valve Cover/intake Manifold","e105_53.xml","0",1,"","")
 db[65] = new dbRecord(false, "REMOVAL","e105_53.xml","0",2,"","YES")
 db[66] = new dbRecord(false, "Cleaning","e105_54.xml","0",2,"","YES")
 db[67] = new dbRecord(false, "Installation","e105_55.xml","0",2,"","YES")
 db[68] = new dbRecord(true, "Cylinder Head And Valves","e105_E10504.xml","0",0,"","YES")
 db[69] = new dbRecord(false, "Procedure","e105_E10504.xml","0",1,"","YES")
 db[70] = new dbRecord(false, "Specifications","e105_57.xml","0",1,"","YES")
 db[71] = new dbRecord(false, "Special Torque Values","e105_58.xml","0",1,"","YES")
 db[72] = new dbRecord(false, "Special Service Tools","e105_59.xml","0",1,"","YES")
 db[73] = new dbRecord(true, "Cylinder Head Removal","e105_60.xml","0",1,"","")
 db[74] = new dbRecord(false, "VALVE COVER/INTAKE MANIFOLD REMOVAL","e105_60.xml","0",2,"","YES")
 db[75] = new dbRecord(false, "Valve Lever Removal","e105_61.xml","0",2,"","YES")
 db[76] = new dbRecord(false, "Cylinder Head Removal","e105_62.xml","0",2,"","YES")
 db[77] = new dbRecord(false, "Cleaning","e105_63.xml","0",2,"","YES")
 db[78] = new dbRecord(true, "Cylinder Head Inspection","e105_64.xml","0",1,"","YES")
 db[79] = new dbRecord(false, "INSPECT FOR WARPAGE","e105_64.xml","0",2,"","YES")
 db[80] = new dbRecord(false, "Check Thickness","e105_65.xml","0",2,"","YES")
 db[81] = new dbRecord(false, "CHECK FOR VALVE LEAKAGE (Using Mineral Spirits)","e105_66.xml","0",2,"","YES")
 db[82] = new dbRecord(false, "Pressure Check Cylinder Head","e105_67.xml","0",2,"","YES")
 db[83] = new dbRecord(true, "Cylinder Head Reconditioning","e105_68.xml","0",1,"","")
 db[84] = new dbRecord(false, "NOZZLE SLEEVE REPLACEMENT","e105_68.xml","0",2,"","YES")
 db[85] = new dbRecord(false, "Valve And Valve Guide Reconditioning","e105_69.xml","0",2,"","YES")
 db[86] = new dbRecord(false, "Valve Springs","e105_70.xml","0",2,"","YES")
 db[87] = new dbRecord(false, "Valve Rotators","e105_71.xml","0",2,"","YES")
 db[88] = new dbRecord(false, "Valve Spring Locks","e105_72.xml","0",2,"","YES")
 db[89] = new dbRecord(false, "Cylinder Head Reassembly","e105_73.xml","0",1,"","YES")
 db[90] = new dbRecord(true, "Cylinder Head Installation","e105_74.xml","0",1,"","")
 db[91] = new dbRecord(false, "INSTALLATION","e105_74.xml","0",2,"","YES")
 db[92] = new dbRecord(false, "Valve Lever Installation","e105_75.xml","0",2,"","YES")
 db[93] = new dbRecord(false, "Valve Cover/intake Manifold Installation","e105_76.xml","0",2,"","YES")
 db[94] = new dbRecord(true, "Rocker Arm Assembly, Camshaft, Tappets And Push Rods","e105_E10505.xml","0",0,"","YES")
 db[95] = new dbRecord(false, "Specifications","e105_78.xml","0",1,"","YES")
 db[96] = new dbRecord(false, "Special Torque Values","e105_79.xml","0",1,"","YES")
 db[97] = new dbRecord(false, "Special Service Tools","e105_80.xml","0",1,"","YES")
 db[98] = new dbRecord(true, "Rocker Arm Assembly","e105_81.xml","0",1,"","")
 db[99] = new dbRecord(false, "REMOVAL","e105_81.xml","0",2,"","YES")
 db[100] = new dbRecord(false, "Measure Camshaft Lobe Lift","e105_82.xml","0",2,"","YES")
 db[101] = new dbRecord(false, "Disassembly","e105_83.xml","0",2,"","YES")
 db[102] = new dbRecord(false, "Cleaning","e105_84.xml","0",2,"","YES")
 db[103] = new dbRecord(false, "Inspection","e105_85.xml","0",2,"","YES")
 db[104] = new dbRecord(false, "Reassembly","e105_86.xml","0",2,"","YES")
 db[105] = new dbRecord(false, "Installation","e105_87.xml","0",2,"","YES")
 db[106] = new dbRecord(true, "Camshaft, Tappets &#38; Push Rods","e105_88.xml","0",1,"","")
 db[107] = new dbRecord(false, "REMOVAL","e105_88.xml","0",2,"","YES")
 db[108] = new dbRecord(false, "Camshaft Disassembly","e105_89.xml","0",2,"","YES")
 db[109] = new dbRecord(false, "Camshaft Cleaning And Inspection","e105_90.xml","0",2,"","YES")
 db[110] = new dbRecord(false, "Camshaft Reassembly","e105_91.xml","0",2,"","YES")
 db[111] = new dbRecord(false, "Camshaft Bushing Inspection","e105_92.xml","0",2,"","YES")
 db[112] = new dbRecord(false, "Camshaft Bushing Removal","e105_93.xml","0",2,"","YES")
 db[113] = new dbRecord(false, "Crankcase Bushing Bore Inspection","e105_94.xml","0",2,"","YES")
 db[114] = new dbRecord(false, "Camshaft Bushing Installation","e105_95.xml","0",2,"","YES")
 db[115] = new dbRecord(false, "Tappet Inspection","e105_96.xml","0",2,"","YES")
 db[116] = new dbRecord(false, "Push Rod Cleaning And Inspection","e105_97.xml","0",2,"","YES")
 db[117] = new dbRecord(true, "Installation","e105_98.xml","0",1,"","")
 db[118] = new dbRecord(false, "CAMSHAFT ASSEMBLY","e105_98.xml","0",2,"","YES")
 db[119] = new dbRecord(false, "Tappets","e105_99.xml","0",2,"","YES")
 db[120] = new dbRecord(false, "Push Rods","e105_100.xml","0",2,"","YES")
 db[121] = new dbRecord(true, "Connecting Rods, Pistons, Rings And Sleeves","e105_E10506.xml","0",0,"","YES")
 db[122] = new dbRecord(false, "Specifications","e105_102.xml","0",1,"","YES")
 db[123] = new dbRecord(false, "Special Torque Values","e105_103.xml","0",1,"","YES")
 db[124] = new dbRecord(false, "Special Service Tools","e105_104.xml","0",1,"","YES")
 db[125] = new dbRecord(true, "Piston And Rod Assembly","e105_105.xml","0",1,"","YES")
 db[126] = new dbRecord(false, "REMOVAL","e105_105.xml","0",2,"","YES")
 db[127] = new dbRecord(true, "Cylinder Sleeve","e105_106.xml","0",1,"","")
 db[128] = new dbRecord(false, "REMOVAL","e105_106.xml","0",2,"","YES")
 db[129] = new dbRecord(false, "Disassembly","e105_107.xml","0",2,"","YES")
 db[130] = new dbRecord(true, "Connecting Rod, Piston &#38; Ring","e105_108.xml","0",1,"","")
 db[131] = new dbRecord(false, "DISASSEMBLY","e105_108.xml","0",2,"","YES")
 db[132] = new dbRecord(false, "Cleaning","e105_109.xml","0",2,"","YES")
 db[133] = new dbRecord(true, "Cylinder Sleeves","e105_110.xml","0",1,"","")
 db[134] = new dbRecord(false, "Inspection","e105_110.xml","0",2,"","YES")
 db[135] = new dbRecord(true, "Pistons","e105_111.xml","0",1,"","")
 db[136] = new dbRecord(false, "Inspection","e105_111.xml","0",2,"","YES")
 db[137] = new dbRecord(true, "Piston Rings","e105_112.xml","0",1,"","")
 db[138] = new dbRecord(false, "Inspection","e105_112.xml","0",2,"","YES")
 db[139] = new dbRecord(true, "Connecting Rods","e105_113.xml","0",1,"","")
 db[140] = new dbRecord(false, "Inspection","e105_113.xml","0",2,"","YES")
 db[141] = new dbRecord(false, "Out-of-round Check","e105_114.xml","0",2,"","YES")
 db[142] = new dbRecord(true, "Piston Pins","e105_115.xml","0",1,"","")
 db[143] = new dbRecord(false, "Inspection","e105_115.xml","0",2,"","YES")
 db[144] = new dbRecord(true, "Cylinder Sleeves","e105_116.xml","0",1,"","")
 db[145] = new dbRecord(false, "Inspection","e105_117.xml","0",2,"","YES")
 db[146] = new dbRecord(false, "Bearing Fitting Procedure","e105_118.xml","0",1,"","YES")
 db[147] = new dbRecord(true, "Cylinder Sleeve Fitting Procedure","e105_119.xml","0",1,"","")
 db[148] = new dbRecord(false, "Reconditioning","e105_120.xml","0",2,"","YES")
 db[149] = new dbRecord(true, "Reassembly","e105_121.xml","0",1,"","")
 db[150] = new dbRecord(false, "Connecting Rods, Pistons &#38; Rings","e105_121.xml","0",2,"","YES")
 db[151] = new dbRecord(true, "Cylinder Sleeves","e105_122.xml","0",1,"","")
 db[152] = new dbRecord(false, "Installation","e105_122.xml","0",2,"","YES")
 db[153] = new dbRecord(true, "Piston &#38; Rod","e105_123.xml","0",1,"","")
 db[154] = new dbRecord(false, "Assembly","e105_123.xml","0",2,"","YES")
 db[155] = new dbRecord(true, "Connecting Rod Bearing Inserts &#38; Caps","e105_124.xml","0",1,"","")
 db[156] = new dbRecord(false, "Installation","e105_124.xml","0",2,"","YES")
 db[157] = new dbRecord(false, "Prime The Lubricating System (preferred Method)","e105_125.xml","0",1,"","YES")
 db[158] = new dbRecord(false, "Engine Run-in Procedure","e105_126.xml","0",1,"","YES")
 db[159] = new dbRecord(true, "Vibration Damper, Crankshaft, Main Bearings, Flywheel And Crankcase","e105_E10507.xml","0",0,"","YES")
 db[160] = new dbRecord(false, "Specifications","e105_128.xml","0",1,"","YES")
 db[161] = new dbRecord(false, "Special Torque Values","e105_129.xml","0",1,"","YES")
 db[162] = new dbRecord(false, "Special Service Tools","e105_130.xml","0",1,"","YES")
 db[163] = new dbRecord(true, "Rear Oil Seal And Wear Sleeve","e105_131.xml","0",1,"","")
 db[164] = new dbRecord(false, "Removal","e105_132.xml","0",2,"","YES")
 db[165] = new dbRecord(false, "Flywheel Housing Removal, Out-of-chassis","e105_133.xml","0",2,"","YES")
 db[166] = new dbRecord(false, "Removing Rear Oil Seal Carrier","e105_134.xml","0",2,"","YES")
 db[167] = new dbRecord(false, "Installing Rear Oil Seal Carrier","e105_135.xml","0",2,"","YES")
 db[168] = new dbRecord(false, "Rear Oil Seal Removal","e105_136.xml","0",2,"","YES")
 db[169] = new dbRecord(false, "WEAR SLEEVE REMOVAL, In-Chassis","e105_137.xml","0",2,"","YES")
 db[170] = new dbRecord(false, "WEAR SLEEVE REMOVAL, Out-of-Chassis","e105_138.xml","0",2,"","YES")
 db[171] = new dbRecord(false, "Rear Oil Seal And Wear Sleeve Installation","e105_139.xml","0",2,"","YES")
 db[172] = new dbRecord(true, "Flywheel","e105_140.xml","0",1,"","")
 db[173] = new dbRecord(false, "CLEANING","e105_140.xml","0",2,"","YES")
 db[174] = new dbRecord(false, "Inspection","e105_141.xml","0",2,"","YES")
 db[175] = new dbRecord(false, "Flywheel Resurfacing","e105_142.xml","0",2,"","YES")
 db[176] = new dbRecord(false, "Ring Gear Replacement","e105_143.xml","0",2,"","YES")
 db[177] = new dbRecord(false, "Flywheel Housing Installation","e105_144.xml","0",2,"","YES")
 db[178] = new dbRecord(false, "Flywheel Installation","e105_145.xml","0",2,"","YES")
 db[179] = new dbRecord(true, "Oil Level Gauge Tube Assembly","e105_146.xml","0",1,"","")
 db[180] = new dbRecord(false, "REMOVAL","e105_146.xml","0",2,"","YES")
 db[181] = new dbRecord(false, "Cleaning","e105_147.xml","0",2,"","YES")
 db[182] = new dbRecord(false, "Inspection","e105_148.xml","0",2,"","YES")
 db[183] = new dbRecord(false, "INSTALLATION (Refer to Figure 7.25)","e105_149.xml","0",2,"","YES")
 db[184] = new dbRecord(true, "Oil Pan","e105_150.xml","0",1,"","")
 db[185] = new dbRecord(false, "Removal","e105_151.xml","0",2,"","YES")
 db[186] = new dbRecord(true, "Vibration Damper Assembly","e105_152.xml","0",1,"","")
 db[187] = new dbRecord(false, "REMOVAL","e105_152.xml","0",2,"","YES")
 db[188] = new dbRecord(true, "Oil Pick-up Tube","e105_153.xml","0",1,"","")
 db[189] = new dbRecord(false, "REMOVAL","e105_153.xml","0",2,"","YES")
 db[190] = new dbRecord(false, "Removal Of Miscellaneous Components","e105_154.xml","0",1,"","YES")
 db[191] = new dbRecord(true, "Crankshaft And Main Bearings","e105_155.xml","0",1,"","")
 db[192] = new dbRecord(false, "REMOVAL","e105_155.xml","0",2,"","YES")
 db[193] = new dbRecord(true, "Vibration Damper","e105_156.xml","0",1,"","")
 db[194] = new dbRecord(false, "CLEAN","e105_156.xml","0",2,"","YES")
 db[195] = new dbRecord(true, "Inspection And Repair","e105_157.xml","0",1,"","")
 db[196] = new dbRecord(false, "VIBRATION DAMPER","e105_157.xml","0",2,"","YES")
 db[197] = new dbRecord(false, "Crankshaft And Main Bearings","e105_158.xml","0",2,"","YES")
 db[198] = new dbRecord(false, "Crankshaft Gear","e105_159.xml","0",2,"","YES")
 db[199] = new dbRecord(true, "CRANKCASE (Reconditioning)","e105_160.xml","0",1,"","")
 db[200] = new dbRecord(false, "CLEANING","e105_160.xml","0",2,"","YES")
 db[201] = new dbRecord(false, "Inspection And Repair","e105_161.xml","0",2,"","YES")
 db[202] = new dbRecord(false, "Crankshaft And Main Bearings","e105_162.xml","0",2,"","YES")
 db[203] = new dbRecord(true, "Installation","e105_163.xml","0",1,"","")
 db[204] = new dbRecord(false, "CRANKSHAFT","e105_163.xml","0",2,"","YES")
 db[205] = new dbRecord(false, "Bearing Fitting Procedure","e105_164.xml","0",2,"","YES")
 db[206] = new dbRecord(false, "Main Bearing And Cap","e105_165.xml","0",2,"","YES")
 db[207] = new dbRecord(false, "Oil Pickup Tube","e105_166.xml","0",2,"","YES")
 db[208] = new dbRecord(false, "Oil Pan","e105_167.xml","0",2,"","YES")
 db[209] = new dbRecord(false, "Vibration Damper","e105_168.xml","0",2,"","YES")
 db[210] = new dbRecord(false, "Miscellaneous Installation","e105_169.xml","0",2,"","YES")
 db[211] = new dbRecord(true, "Timing Gear Train And Front Cover","e105_E10508.xml","0",0,"","YES")
 db[212] = new dbRecord(false, "Timing Gear Identification","e105_171.xml","0",1,"","YES")
 db[213] = new dbRecord(false, "Specifications","e105_172.xml","0",1,"","YES")
 db[214] = new dbRecord(false, "Special Torque Values","e105_173.xml","0",1,"","YES")
 db[215] = new dbRecord(false, "Special Service Tools","e105_174.xml","0",1,"","YES")
 db[216] = new dbRecord(false, "Engine Gear Train Timing","e105_175.xml","0",1,"","YES")
 db[217] = new dbRecord(true, "Front Cover","e105_176.xml","0",1,"","")
 db[218] = new dbRecord(false, "REMOVAL","e105_176.xml","0",2,"","YES")
 db[219] = new dbRecord(false, "Cleaning","e105_177.xml","0",2,"","YES")
 db[220] = new dbRecord(false, "Inspection","e105_178.xml","0",2,"","YES")
 db[221] = new dbRecord(true, "Engine Gear Train Timing","e105_179.xml","0",1,"","")
 db[222] = new dbRecord(false, "INSPECTION","e105_179.xml","0",2,"","YES")
 db[223] = new dbRecord(false, "Removal","e105_180.xml","0",2,"","YES")
 db[224] = new dbRecord(true, "Front Cover (rear Half)","e105_181.xml","0",1,"","")
 db[225] = new dbRecord(false, "Service Procedure","e105_181.xml","0",2,"","YES")
 db[226] = new dbRecord(false, "Cleaning","e105_182.xml","0",2,"","YES")
 db[227] = new dbRecord(false, "Inspection","e105_183.xml","0",2,"","YES")
 db[228] = new dbRecord(false, "CLEANING Idler Gear Assemblies","e105_184.xml","0",2,"","YES")
 db[229] = new dbRecord(false, "INSPECTION Idler Gear Assemblies","e105_185.xml","0",2,"","YES")
 db[230] = new dbRecord(true, "Engine Gear Train Timing","e105_186.xml","0",1,"","")
 db[231] = new dbRecord(false, "INSTALLATION Idler Gear Assemblies","e105_186.xml","0",2,"","YES")
 db[232] = new dbRecord(false, "Installation","e105_187.xml","0",2,"","YES")
 db[233] = new dbRecord(true, "Injection Pump Drive Gear Access Cover","e105_188.xml","0",1,"","")
 db[234] = new dbRecord(false, "INSTALLATION","e105_188.xml","0",2,"","YES")
 db[235] = new dbRecord(true, "AIR COMPRESSOR/POWER STEERING PUMP (If Applicable)","e105_189.xml","0",1,"","")
 db[236] = new dbRecord(false, "INSTALLATION","e105_189.xml","0",2,"","YES")
 db[237] = new dbRecord(true, "Fan Hub And Pulley","e105_190.xml","0",1,"","")
 db[238] = new dbRecord(false, "INSTALLATION","e105_190.xml","0",2,"","YES")
 db[239] = new dbRecord(true, "Alternator And Alternator Bracket","e105_191.xml","0",1,"","")
 db[240] = new dbRecord(false, "INSTALLATION","e105_191.xml","0",2,"","YES")
 db[241] = new dbRecord(true, "Serpentine Belt","e105_192.xml","0",1,"","")
 db[242] = new dbRecord(false, "INSTALLATION","e105_192.xml","0",2,"","YES")
 db[243] = new dbRecord(true, "Lubricating Oil Pump, Oil Filter And Cooler","e105_E10509.xml","0",0,"","YES")
 db[244] = new dbRecord(false, "Specifications","e105_194.xml","0",1,"","YES")
 db[245] = new dbRecord(false, "Special Torque Values","e105_195.xml","0",1,"","YES")
 db[246] = new dbRecord(false, "Special Service Tools","e105_196.xml","0",1,"","YES")
 db[247] = new dbRecord(true, "Lubricating Oil Pump","e105_197.xml","0",1,"","")
 db[248] = new dbRecord(false, "REMOVAL","e105_197.xml","0",2,"","YES")
 db[249] = new dbRecord(false, "Cleaning","e105_198.xml","0",2,"","YES")
 db[250] = new dbRecord(false, "Inspection And Repair","e105_199.xml","0",2,"","YES")
 db[251] = new dbRecord(false, "Reassembly","e105_200.xml","0",2,"","YES")
 db[252] = new dbRecord(true, "Oil Filter And Header","e105_201.xml","0",1,"","")
 db[253] = new dbRecord(false, "Removal","e105_202.xml","0",2,"","YES")
 db[254] = new dbRecord(false, "Disassembly","e105_203.xml","0",2,"","YES")
 db[255] = new dbRecord(false, "Cleaning","e105_204.xml","0",2,"","YES")
 db[256] = new dbRecord(false, "Inspection And Repair","e105_205.xml","0",2,"","YES")
 db[257] = new dbRecord(false, "Reassembly","e105_206.xml","0",2,"","YES")
 db[258] = new dbRecord(false, "Installation","e105_207.xml","0",2,"","YES")
 db[259] = new dbRecord(true, "Water Pump And Thermostat","e105_E10510.xml","0",0,"","YES")
 db[260] = new dbRecord(false, "Specifications","e105_209.xml","0",1,"","YES")
 db[261] = new dbRecord(false, "Special Torque Values","e105_210.xml","0",1,"","YES")
 db[262] = new dbRecord(false, "Special Service Tools","e105_211.xml","0",1,"","YES")
 db[263] = new dbRecord(true, "Water Pump","e105_212.xml","0",1,"","")
 db[264] = new dbRecord(false, "REMOVAL","e105_212.xml","0",2,"","YES")
 db[265] = new dbRecord(false, "Inspection","e105_213.xml","0",2,"","YES")
 db[266] = new dbRecord(false, "Installation","e105_214.xml","0",2,"","YES")
 db[267] = new dbRecord(true, "Thermostat","e105_215.xml","0",1,"","")
 db[268] = new dbRecord(false, "REMOVAL","e105_215.xml","0",2,"","YES")
 db[269] = new dbRecord(false, "Inspection","e105_216.xml","0",2,"","YES")
 db[270] = new dbRecord(false, "Installation","e105_217.xml","0",2,"","YES")
 db[271] = new dbRecord(true, "Coolant Filter","e105_218.xml","0",1,"","")
 db[272] = new dbRecord(false, "REMOVAL","e105_218.xml","0",2,"","YES")
 db[273] = new dbRecord(false, "Installation","e105_219.xml","0",2,"","YES")
 db[274] = new dbRecord(true, "Water Inlet Elbow","e105_220.xml","0",1,"","")
 db[275] = new dbRecord(false, "REMOVAL","e105_220.xml","0",2,"","YES")
 db[276] = new dbRecord(false, "Installation","e105_221.xml","0",2,"","YES")
 db[277] = new dbRecord(true, "Fuel Injection Pump","e105_E10511.xml","0",0,"","YES")
 db[278] = new dbRecord(false, "FUEL INJECTION PUMP COMPONENTS","e105_E10511.xml","0",1,"","YES")
 db[279] = new dbRecord(false, "Fuel Injection Pump, Piping, Nozzles, Drive And Fuel Filter Header","e105_223.xml","0",1,"","YES")
 db[280] = new dbRecord(false, "Electric Shut-off (eso) Solenoid","e105_224.xml","0",1,"","YES")
 db[281] = new dbRecord(false, "Typical Fuel Injection Pump Linkage","e105_225.xml","0",1,"","YES")
 db[282] = new dbRecord(false, "Specifications","e105_226.xml","0",1,"","YES")
 db[283] = new dbRecord(false, "Special Torque Values","e105_227.xml","0",1,"","YES")
 db[284] = new dbRecord(false, "Special Service Tools","e105_228.xml","0",1,"","YES")
 db[285] = new dbRecord(true, "Fuel Injection Pump","e105_229.xml","0",1,"","")
 db[286] = new dbRecord(false, "GENERAL REMOVAL PROCEDURES","e105_229.xml","0",2,"","YES")
 db[287] = new dbRecord(false, "Verification Of Timing","e105_230.xml","0",2,"","YES")
 db[288] = new dbRecord(false, "Removal","e105_231.xml","0",2,"","YES")
 db[289] = new dbRecord(false, "Reassembly","e105_232.xml","0",1,"","YES")
 db[290] = new dbRecord(false, "Priming Fuel Injection System","e105_233.xml","0",1,"","YES")
 db[291] = new dbRecord(true, "Nozzles","e105_E10512.xml","0",0,"","YES")
 db[292] = new dbRecord(false, "Specifications","e105_235.xml","0",1,"","YES")
 db[293] = new dbRecord(false, "Special Torque Values","e105_236.xml","0",1,"","YES")
 db[294] = new dbRecord(false, "Special Service Tools","e105_237.xml","0",1,"","YES")
 db[295] = new dbRecord(true, "Nozzles","e105_238.xml","0",1,"","")
 db[296] = new dbRecord(false, "TROUBLESHOOTING","e105_238.xml","0",2,"","YES")
 db[297] = new dbRecord(false, "Identification","e105_239.xml","0",2,"","YES")
 db[298] = new dbRecord(false, "Removal","e105_240.xml","0",2,"","YES")
 db[299] = new dbRecord(false, "Pre-reconditioning Inspection","e105_241.xml","0",2,"","YES")
 db[300] = new dbRecord(false, "Disassembly","e105_242.xml","0",2,"","YES")
 db[301] = new dbRecord(false, "Cleaning, Component Inspection And Repair","e105_243.xml","0",2,"","YES")
 db[302] = new dbRecord(false, "Flat Lapping Procedures","e105_244.xml","0",2,"","YES")
 db[303] = new dbRecord(false, "Care And Reconditioning Lapping Blocks","e105_245.xml","0",2,"","YES")
 db[304] = new dbRecord(false, "Reassembly","e105_246.xml","0",2,"","YES")
 db[305] = new dbRecord(false, "Retesting And Adjusting Clean Nozzle Assemblies","e105_247.xml","0",2,"","YES")
 db[306] = new dbRecord(false, "INSTALLATION","e105_248.xml","0",2,"","YES")
// AHJO - In the following function the parameter 'occurs' was added Oct/Nov 2001
function dbRecord(mother,display,URL,occurs,indent,statusMsg,link){
	this.mother = mother   // is this item a parent?
	this.display = display // text to display
	this.URL = URL         // used to link to TOC
	this.occurances =  occurs  // how many times does search occur - THIS LINE WAS ADDED by AHJO
	this.indent = indent   // how many levels nested?
	this.statusMsg = statusMsg  // descriptive text for status bar 
	this.link = link  //  link tied to text; if empty string, item appears as straight text
	return this
}
// pre-load all images into cache
var collapsedImg = new Image(widgetWidth,widgetHeight)
collapsedImg.src = collapsedWidget
var expandedImg = new Image(widgetWidth,widgetHeight)
expandedImg.src = expandedWidget
var endpointImg = new Image(widgetWidth,widgetHeight)
endpointImg.src = endpointWidget
// mainframeURL = parent.mainframe.document.URL // get URL of mainframe 
// ** functions that get and set persistent cookie data **
// set cookie data
var mycookie = document.cookie
function setCurrState(setting) {
        mycookie = document.cookie = "currState=" + escape(setting)
}
// retrieve cookie data
function getCurrState() {
        var label = "currState="
        var labelLen = label.length
        var cLen = mycookie.length
        var i = 0
        while (i < cLen) {
                var j = i + labelLen
                if (mycookie.substring(i,j) == label) {
                        var cEnd = mycookie.indexOf(";",j)
                        if (cEnd ==     -1) {
                                cEnd = mycookie.length
                       }
                        return unescape(mycookie.substring(j,cEnd))
                }
               i++
       }
        return ""
}
// **function that updates persistent storage of state**
// toggles an outline mother entry, storing new value in the cookie
function toggle(n) {
	if (n != 0) {
		var newString = ""
		var currState = getCurrState() // of whole outline
		var expanded = currState.charAt(n-1) // of clicked item
		newString += currState.substring(0,n-1)
		newString += expanded ^ 1 // Bitwise XOR clicked item
		newString += currState.substring(n,currState.length)
		setCurrState(newString) // write new state back to cookie
	}
}
// **functions used in assembling updated outline**
// returns the proper GIF file name for each entry's control
function getGIF(n) {
	var mom = db[n].mother  // is entry a parent?
	var expanded = getCurrState().charAt(n-1) // of clicked item
	if (!mom) {
		return endpointWidget
	} else {
		if (expanded == 1) {
			return expandedWidget
		}
	}
	return collapsedWidget
}
// returns the proper status line text based on the icon style
function getGIFStatus(n) {
	var mom = db[n].mother  // is entry a parent
	var expanded = getCurrState().charAt(n-1) // of rolled item
	if (!mom) {
		return "No further items"
	} else {
		if (expanded == 1) {
			return "Click to collapse nested items"
		}
	}
	return "Click to expand nested items"
}
// initialize 'current state' storage field
if (getCurrState() == "" || getCurrState().length != (db.length-1)) {
	initState = ""
	for (i = 1; i < db.length; i++) {
		initState += "0"
	}
	setCurrState(initState)
}
// end -->

    </SCRIPT>
</HEAD>
<BODY>
<h3>530 and DT-466/408 Diesel Engine Service (1994)</h3>
<SCRIPT LANGUAGE="JavaScript1.1">
<!-- start
// build new outline based on the values of the cookie
// and data points in the outline data array.
// This fires each time the user clicks on a control,
// because the HREF for each one reloads the current document.
var newOutline = ""
var prevIndentDisplayed = 0
var showMyDaughter = 0
// cycle through each entry in the outline array
for (var i = 1; i < db.length; i++) {
	var theGIF = getGIF(i)				// get the image
	var theGIFStatus = getGIFStatus(i)  // get the status message
	var currIndent = db[i].indent		// get the indent level
	var expanded = getCurrState().charAt(i-1) // current state
        db[i].currentrow = ""

	if (currIndent == 0 || currIndent == 1 || db[i].currentrow == "currentrow" || currIndent <= prevIndentDisplayed || (showMyDaughter == 1 && (currIndent - prevIndentDisplayed == 1))) {
 // Phil added the if to remove the image from before the root element
         if (currIndent != 0) {
			newOutline += "<SPAN class=\"" + db[i].currentrow + "\" style=\" position:relative;left:" + (indentPixels * currIndent) + "px;width:200px\"><A HREF=\"javascript:history.go(0)\" onMouseOver=\"window.status=\'" + theGIFStatus + "\';return true;\" onClick=\"toggle(" + i + ");return " + "\">"
			newOutline += "<IMG ALIGN=TOP SRC=\"" + theGIF + "\" HEIGHT=" + widgetHeight + " WIDTH=" + widgetWidth + " BORDER=0></A>"
			newOutline += "<SPAN title=\"" + db[i].display + "\" style=\"width:" + (200-widgetWidth) + "px\">"
			}
			if (db[i].link == "" || db[i].link == null) {
				newOutline += " <small'>" +  db[i].display + "</small></SPAN></SPAN>" + "<BR>"	// no link, just a listed item
			} else {
                 if (db[i].occurances > 0)	{
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><small>" + db[i].display + "&nbsp;&nbsp;("
 + db[i].occurances + ")</small></A></SPAN></SPAN><BR>"
			} else {
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><small'>" + db[i].display + "</small></A></SPAN></SPAN><BR>"
			}
			}
		prevIndentDisplayed = currIndent
		showMyDaughter = expanded
		if (db.length > 25) {
			document.write(newOutline)
			newOutline = ""
		}
	}
}
document.write(newOutline)
// end -->

</SCRIPT>
</BODY>
</html>
