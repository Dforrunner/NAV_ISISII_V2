<HTML>
<HEAD>
    <TITLE>Service Section TOC</TITLE>
    <LINK href="../style.css" rel="STYLESHEET" type="text/css">
    <SCRIPT LANGUAGE="JavaScript1.1">
<!-- begin hiding
var indentPixels = 15
var collapsedWidget = "../images/plus.gif"
var expandedWidget = "../images/minus.gif"
var endpointWidget = "../images/end.gif"
var widgetWidth = 17
var widgetHeight = 18
var displayTarget = "mainframe"
// AHJO - In the folowing db the fourth field (after the xml file name) is new and set to "0" 
var db = new Array()
 db[1] = new dbRecord(true, "DT/DTI-466 A and B Series DT/DTI/DTA-466 C Diesel Engine Diagnostics (1993)","e450_1.xml","0",0,"","YES")
 db[2] = new dbRecord(true, "Diagnostic Analysis","e450_2.xml","0",0,"","YES")
 db[3] = new dbRecord(false, "-DEFINITION-","e450_2.xml","0",1,"","YES")
 db[4] = new dbRecord(true, "Diagnostic Analysis Procedures For..","e450_3.xml","0",1,"","")
 db[5] = new dbRecord(false, "...OIL CONSUMPTION","e450_3.xml","0",2,"","YES")
 db[6] = new dbRecord(false, "...fuel Consumption","e450_4.xml","0",2,"","YES")
 db[7] = new dbRecord(false, "...high Coolant Temperature Or Loss","e450_5.xml","0",2,"","YES")
 db[8] = new dbRecord(false, "...combustion Leakage Test","e450_6.xml","0",2,"","YES")
 db[9] = new dbRecord(false, "...excessive Exhaust Smoke","e450_7.xml","0",2,"","YES")
 db[10] = new dbRecord(false, "...low Power","e450_8.xml","0",2,"","YES")
 db[11] = new dbRecord(false, "...fuel Dilution","e450_9.xml","0",2,"","YES")
 db[12] = new dbRecord(false, "...COOLANT IN LUBRICATING OIL OR <b>LUBRICATING OIL IN COOLANT.</b>","e450_10.xml","0",2,"","YES")
 db[13] = new dbRecord(false, "...high Intake Manifold Pressure.","e450_11.xml","0",2,"","YES")
 db[14] = new dbRecord(false, "...excessive Crankcase Pressure","e450_12.xml","0",2,"","YES")
 db[15] = new dbRecord(false, "...low Fuel Supply Pressure","e450_13.xml","0",2,"","YES")
 db[16] = new dbRecord(false, "...excessive Engine Speed (rpm)","e450_14.xml","0",2,"","YES")
 db[17] = new dbRecord(false, "...excessive Air Inlet Restriction","e450_15.xml","0",2,"","YES")
 db[18] = new dbRecord(false, "...short Fuel Filter Life","e450_16.xml","0",2,"","YES")
 db[19] = new dbRecord(true, "Engine Performance Analysis Guides","e450_17.xml","0",0,"","YES")
 db[20] = new dbRecord(false, "INTRODUCTION","e450_17.xml","0",1,"","YES")
 db[21] = new dbRecord(false, "Instructions For Performance Analysis Guides","e450_18.xml","0",1,"","YES")
 db[22] = new dbRecord(true, "Engine Test Nomenclature","e450_19.xml","0",1,"","")
 db[23] = new dbRecord(false, "Injection Pump Timing","e450_20.xml","0",2,"","YES")
 db[24] = new dbRecord(false, "Engine Speed (rpm)","e450_21.xml","0",2,"","YES")
 db[25] = new dbRecord(false, "Intake Manifold Pressure (\"boost\")","e450_22.xml","0",2,"","YES")
 db[26] = new dbRecord(false, "Definition Of A/r Number","e450_23.xml","0",2,"","YES")
 db[27] = new dbRecord(false, "Exhaust Back Pressure","e450_24.xml","0",2,"","YES")
 db[28] = new dbRecord(false, "Smoke Level Test","e450_25.xml","0",2,"","YES")
 db[29] = new dbRecord(false, "Crankcase Pressure","e450_26.xml","0",2,"","YES")
 db[30] = new dbRecord(false, "Fuel Pressure","e450_27.xml","0",2,"","YES")
 db[31] = new dbRecord(false, "Air Cleaner Restriction","e450_28.xml","0",2,"","YES")
 db[32] = new dbRecord(true, "Engine Diagnostic Tools","e450_29.xml","0",0,"","YES")
 db[33] = new dbRecord(false, "Description","e450_29.xml","0",1,"","YES")
 db[34] = new dbRecord(true, "Creative Tool Model Ct-400 Diesel Timing And Tachometer Instrument [se-2783] Or [3005] Earlier Model","e450_30.xml","0",1,"","")
 db[35] = new dbRecord(false, "DESCRIPTION","e450_30.xml","0",2,"","YES")
 db[36] = new dbRecord(false, "Operation","e450_31.xml","0",2,"","YES")
 db[37] = new dbRecord(false, "Operating Instructions","e450_32.xml","0",2,"","YES")
 db[38] = new dbRecord(true, "Creative Tool Model Ct-4000 Diesel Timing And Tachometer Instrument [se-2783] Or [3005a] Current Model","e450_33.xml","0",1,"","")
 db[39] = new dbRecord(false, "Description","e450_34.xml","0",2,"","YES")
 db[40] = new dbRecord(false, "Operating Procedures","e450_35.xml","0",2,"","YES")
 db[41] = new dbRecord(true, "Kent-moore Tach-n-time Dynamic Timing Meter (ztse-4142)","e450_36.xml","0",1,"","")
 db[42] = new dbRecord(false, "DESCRIPTION","e450_36.xml","0",2,"","YES")
 db[43] = new dbRecord(false, "Operating Procedures","e450_37.xml","0",2,"","YES")
 db[44] = new dbRecord(false, "Timing Light Method -- Crankshaft Monitoring","e450_38.xml","0",2,"","YES")
 db[45] = new dbRecord(true, "DESIGN TECHNOLOGY \"TECH TIME\" Model 3354 Dynamic Timing Meter","e450_39.xml","0",1,"","")
 db[46] = new dbRecord(false, "DESCRIPTION OF FRONT PANEL AND ATTACHMENTS (All Reference Nos. refer to Figure ","e450_39.xml","0",2,"","YES")
 db[47] = new dbRecord(false, "Operating Procedures","e450_40.xml","0",2,"","YES")
 db[48] = new dbRecord(false, "Timing Light Method - Crankshaft Monitoring","e450_41.xml","0",2,"","YES")
 db[49] = new dbRecord(true, "Beyers Model 200 Pressure Test Kit (d-200)","e450_42.xml","0",1,"","")
 db[50] = new dbRecord(false, "DESCRIPTION","e450_42.xml","0",2,"","YES")
 db[51] = new dbRecord(false, "Maintenance And Gauge Accuracy Test","e450_43.xml","0",2,"","YES")
 db[52] = new dbRecord(false, "Operating Instructions","e450_44.xml","0",2,"","YES")
 db[53] = new dbRecord(true, "Dwyer Slack Tube Manometer","e450_45.xml","0",1,"","")
 db[54] = new dbRecord(false, "DESCRIPTION","e450_45.xml","0",2,"","YES")
 db[55] = new dbRecord(false, "Filling","e450_46.xml","0",2,"","YES")
 db[56] = new dbRecord(false, "Installing And Reading","e450_47.xml","0",2,"","YES")
 db[57] = new dbRecord(false, "Cleaning","e450_48.xml","0",2,"","YES")
 db[58] = new dbRecord(true, "Robert Bosch Smoke Sampling Kit (se-2580)","e450_49.xml","0",1,"","")
 db[59] = new dbRecord(false, "DESCRIPTION","e450_49.xml","0",2,"","YES")
 db[60] = new dbRecord(false, "Operation","e450_50.xml","0",2,"","YES")
 db[61] = new dbRecord(true, "CRANKCASE PRESSURE ORIFICED RESTRICTOR (ZTSE-4039) w/0.406 in. ORIFICE","e450_51.xml","0",1,"","")
 db[62] = new dbRecord(false, "DESCRIPTION","e450_51.xml","0",2,"","YES")
 db[63] = new dbRecord(true, "Engine Diagnostic Test Procedures - Dt/dti - 466 A And B Series Diesel Engines","e450_52.xml","0",0,"","YES")
 db[64] = new dbRecord(false, "CGED-390-2 DIAGNOSTIC ANALYSIS GUIDE FOR 400 SERIES WITH UTDS MODEL 100 FUEL","e450_52.xml","0",1,"","YES")
 db[65] = new dbRecord(true, "SUFFICIENT CLEAN FUEL DT/DTI-466 A and B Series  (With UTDS Model 100 Fuel Injection Pump)","e450_53.xml","0",1,"","YES")
 db[66] = new dbRecord(false, "Sufficient Clean Fuel","e450_54.xml","0",2,"","YES")
 db[67] = new dbRecord(false, "Fuel Quality","e450_55.xml","0",2,"","YES")
 db[68] = new dbRecord(true, "EXTERNAL LEAKAGE DT/DTI-466 A and B Series   (With UTDS Model 100 Fuel Injection Pump)","e450_56.xml","0",1,"","YES")
 db[69] = new dbRecord(false, "I. Engine Coolant Leakage Test","e450_57.xml","0",2,"","YES")
 db[70] = new dbRecord(false, "Ii. Air Induction System Pressure Test","e450_58.xml","0",2,"","YES")
 db[71] = new dbRecord(true, "ACCELERATOR LINKAGE DT/DTI-466 A and B Series  (With UTDS Model 100 Fuel Injection Pump)","e450_59.xml","0",1,"","YES")
 db[72] = new dbRecord(false, "Inspect Throttle Linkage","e450_60.xml","0",2,"","YES")
 db[73] = new dbRecord(true, "SHUT-OFF CABLE DT/DTI-466 A and B Series  (With UTDS Model 100 Fuel Injection Pump)","e450_61.xml","0",1,"","YES")
 db[74] = new dbRecord(false, "Removal and Disassembly","e450_62.xml","0",2,"","YES")
 db[75] = new dbRecord(false, "Inspection and Repair","e450_63.xml","0",2,"","YES")
 db[76] = new dbRecord(false, "Reassembly","e450_64.xml","0",2,"","YES")
 db[77] = new dbRecord(false, "Electric Shut-off (eso)","e450_65.xml","0",2,"","YES")
 db[78] = new dbRecord(false, "Removal and Disassembly","e450_66.xml","0",2,"","YES")
 db[79] = new dbRecord(false, "Inspection and Repair","e450_67.xml","0",2,"","YES")
 db[80] = new dbRecord(false, "Installation","e450_68.xml","0",2,"","YES")
 db[81] = new dbRecord(false, "LOW IDLE RPM DT/DTI-466 A and B Series  (With UTDS Model 100 Fuel Injection Pump)","e450_69.xml","0",1,"","YES")
 db[82] = new dbRecord(false, "HIGH IDLE RPM - (NO LOAD)  DT/DTI-466 A and B Series  (With UTDS Model 100 Fuel Injection Pump)","e450_70.xml","0",1,"","YES")
 db[83] = new dbRecord(true, "AIR CLEANER MAXIMUM RESTRICTION  DT/DTI-466 A and B Series  (With UTDS Model 100 Fuel Injection Pump)","e450_71.xml","0",1,"","YES")
 db[84] = new dbRecord(false, "Inspect Air Intake Restriction Indicator","e450_72.xml","0",2,"","YES")
 db[85] = new dbRecord(false, "Single Element Air Cleaner","e450_73.xml","0",2,"","YES")
 db[86] = new dbRecord(false, "Dual Element Cleaner","e450_74.xml","0",2,"","YES")
 db[87] = new dbRecord(true, "Transfer Pump Pressure And Inlet Restriction Check","e450_75.xml","0",1,"","")
 db[88] = new dbRecord(false, "DT/DTI-466 A and B Series   (With UTDS Model 100 Fuel Injection Pump)","e450_76.xml","0",2,"","YES")
 db[89] = new dbRecord(true, "Injection Pump Initial Timing","e450_77.xml","0",1,"","")
 db[90] = new dbRecord(false, "DT/DTI-466 A and B Series   (With UTDS Model 100 Fuel Injection Pump)","e450_78.xml","0",2,"","YES")
 db[91] = new dbRecord(true, "Injection Pump Automatic Advance","e450_79.xml","0",1,"","")
 db[92] = new dbRecord(false, "DT/DTI-466 A and B Series   (With UTDS Model 100 Fuel Injection Pump)","e450_79.xml","0",2,"","YES")
 db[93] = new dbRecord(true, "Intake Manifold Pressure","e450_80.xml","0",1,"","")
 db[94] = new dbRecord(false, "DT/DTI-466 A and B Series   (With UTDS Model 100 Fuel Injection Pump)","e450_81.xml","0",2,"","YES")
 db[95] = new dbRecord(false, "CRANKCASE PRESSURE DT/DTI-466 A and B Series  (With UTDS Model 100 Fuel Injection Pump)","e450_82.xml","0",1,"","YES")
 db[96] = new dbRecord(false, "ANEROID DIAPHRAGM DT/DTI-466 A and B Series (With UTDS Model 100 Fuel Injection Pump)","e450_83.xml","0",1,"","YES")
 db[97] = new dbRecord(true, "TEST INJECTION NOZZLES  DT/DTI-466 A and B Series (With UTDS Model 100 Fuel Injection Pump)","e450_84.xml","0",1,"","YES")
 db[98] = new dbRecord(false, "Injection Nozzle Removal:","e450_85.xml","0",2,"","YES")
 db[99] = new dbRecord(false, "Injection Nozzle Testing:","e450_86.xml","0",2,"","YES")
 db[100] = new dbRecord(false, "Injection Nozzle Installation:","e450_87.xml","0",2,"","YES")
 db[101] = new dbRecord(false, "EXHAUST BACK PRESSURE DT/DTI-466 A and B Series  (With UTDS Model 100 Fuel Injection Pump)","e450_88.xml","0",1,"","YES")
 db[102] = new dbRecord(true, "MEASURE SMOKE INTENSITY  DT/DTI-466 A and B Series  (With UTDS Model 100 Fuel Injection Pump)","e450_89.xml","0",1,"","YES")
 db[103] = new dbRecord(false, "General Description","e450_90.xml","0",2,"","YES")
 db[104] = new dbRecord(false, "International(r) Smokemeter Table For Service","e450_91.xml","0",2,"","YES")
 db[105] = new dbRecord(false, "INTAKE AND EXHAUST VALVE CLEARANCE DT/DTI-466 A and B Series  (With UTDS Model 100 Fuel Injection Pump)","e450_92.xml","0",1,"","YES")
 db[106] = new dbRecord(true, "Performance Data Guidelines","e450_93.xml","0",1,"","")
 db[107] = new dbRecord(false, "DT-466/210 HP @ 2600 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_93.xml","0",2,"","YES")
 db[108] = new dbRecord(false, "DT-466/210 HP @ 2600 RPM w/Electric Shut-off and Bowden Wire Shut-off","e450_94.xml","0",2,"","YES")
 db[109] = new dbRecord(false, "DT-466/180 HP @ 2600 RPM w/Bowden Wire Shut-off","e450_95.xml","0",2,"","YES")
 db[110] = new dbRecord(false, "DT-466/180 HP @ 2600 RPM w/Electric Shut-off","e450_96.xml","0",2,"","YES")
 db[111] = new dbRecord(false, "DTI-466B/210 HP @ 2600 RPM w/Bowden Wire Shut-off","e450_97.xml","0",2,"","YES")
 db[112] = new dbRecord(false, "DTI-466B/210 HP @ 2600 RPM w/Electric Shut-off","e450_98.xml","0",2,"","YES")
 db[113] = new dbRecord(false, "DT-466B/190 HP @ 2600 RPM w/Bowden Wire Shut-off","e450_99.xml","0",2,"","YES")
 db[114] = new dbRecord(false, "DT-466B/190 HP @ 2600 RPM w/Bowden Wire Shut-off","e450_100.xml","0",2,"","YES")
 db[115] = new dbRecord(false, "DT-466B/160 HP @ 2400 RPM w/Electric Shut-off and Bowden Wire Shut-off","e450_101.xml","0",2,"","YES")
 db[116] = new dbRecord(false, "DT-466B/180 HP @ 2600 RPM w/Electric Shut-off and Bowden Wire Shut-off","e450_102.xml","0",2,"","YES")
 db[117] = new dbRecord(false, "DT-466B/210 HP @ 2600 RPM w/Electric Shut-off and Bowden Wire Shut-off","e450_103.xml","0",2,"","YES")
 db[118] = new dbRecord(false, "DT-466B/180 HP @ 2600 RPM w/Bowden Wire Shut-off","e450_104.xml","0",2,"","YES")
 db[119] = new dbRecord(false, "DT-466B/180 HP @ 2600 RPM w/Bowden Wire Shut-off","e450_105.xml","0",2,"","YES")
 db[120] = new dbRecord(false, "DTI-466B/210 HP @ 2600 RPM w/Bowden Wire Shut-off","e450_106.xml","0",2,"","YES")
 db[121] = new dbRecord(false, "DTI-466B/210 HP @ 2600 RPM w/Electric Shut-off","e450_107.xml","0",2,"","YES")
 db[122] = new dbRecord(true, "Engine Diagnostic Test Procedures - Dt/dti/dta - 466 C Series Diesel Engines","e450_108.xml","0",0,"","YES")
 db[123] = new dbRecord(false, "CGED-365-4 DIAGNOSTIC ANALYSIS GUIDE FOR 400 C SERIES DIESEL ENGINES WITH ROBERT BOSCH \"MW\" OR \"A\" INJECTION PUMPS","e450_108.xml","0",1,"","YES")
 db[124] = new dbRecord(true, "SUFFICIENT CLEAN FUEL DT/DTI/DTA-466 C Engines  (With Robert Bosch \"MW\" or \"A\" Fuel Injection Pump)","e450_109.xml","0",1,"","YES")
 db[125] = new dbRecord(false, "Sufficient Clean Fuel","e450_110.xml","0",2,"","YES")
 db[126] = new dbRecord(false, "Fuel Quality","e450_111.xml","0",2,"","YES")
 db[127] = new dbRecord(true, "EXTERNAL LEAKAGE DT/DTI/DTA-466 C Engines  (With Robert Bosch \"MW\" or \"A\" Fuel Injection Pump)","e450_112.xml","0",1,"","YES")
 db[128] = new dbRecord(false, "I. Engine Coolant Leakage Test","e450_113.xml","0",2,"","YES")
 db[129] = new dbRecord(false, "Ii. Air Induction System Pressure Test","e450_114.xml","0",2,"","YES")
 db[130] = new dbRecord(true, "ACCELERATOR LINKAGE DT/DTI/DTA-466 C Engines (With Robert Bosch \"MW\" or \"A\" Fuel Injection Pump)","e450_115.xml","0",1,"","YES")
 db[131] = new dbRecord(false, "Inspect Throttle Linkage","e450_116.xml","0",2,"","YES")
 db[132] = new dbRecord(false, "Accelerator Linkage Identification","e450_117.xml","0",2,"","YES")
 db[133] = new dbRecord(false, "Standard Regulation Governor","e450_118.xml","0",2,"","YES")
 db[134] = new dbRecord(false, "Close Regulation Governor","e450_119.xml","0",2,"","YES")
 db[135] = new dbRecord(false, "Throttle Linkage Adjustment Procedure:","e450_120.xml","0",2,"","YES")
 db[136] = new dbRecord(false, "LINKAGE  ADJUSTMENT:  (With Bellcrank)","e450_121.xml","0",2,"","YES")
 db[137] = new dbRecord(true, "SHUTOFF CABLE/ELECTRIC SHUTOFF DT/DTI/DTA-466 C Engines (With Robert Bosch \"MW\" or \"A\" Fuel Injection Pump)","e450_122.xml","0",1,"","YES")
 db[138] = new dbRecord(false, "I. Shutoff Cable (manual Shutoff)","e450_123.xml","0",2,"","YES")
 db[139] = new dbRecord(false, "II. INTERNALLY SWITCHED ELECTRIC SHUTOFF (AUTOMATIC SHUTOFF) - <b>PRIOR TO 1989 M0DEL YEAR</b>","e450_124.xml","0",2,"","YES")
 db[140] = new dbRecord(false, "III. EXTERNALLY SWITCHED ELECTRIC SHUTOFF (AUTOMATIC SHUTOFF) - <b>1989 M0DEL YEAR AND BEYOND</b>","e450_125.xml","0",2,"","YES")
 db[141] = new dbRecord(false, "LOW IDLE (RPM) DT/DTI/DTA-466 C Engines (With Robert Bosch \"MW\" or \"A\" Fuel Injection Pump)","e450_126.xml","0",1,"","YES")
 db[142] = new dbRecord(false, "HIGH IDLE RPM [NO LOAD] DT/DTI/DTA-466 C Engines (With Robert Bosch \"MW\" or \"A\" Fuel Injection Pump)","e450_127.xml","0",1,"","YES")
 db[143] = new dbRecord(true, "AIR CLEANER MAXIMUM RESTRICTION DT/DTI/DTA-466 C Engines (With Robert Bosch \"MW\" or \"A\" Fuel Injection Pump)","e450_128.xml","0",1,"","YES")
 db[144] = new dbRecord(false, "Inspect Air Intake Restriction Indicator","e450_129.xml","0",2,"","YES")
 db[145] = new dbRecord(false, "Single Element Air Cleaner","e450_130.xml","0",2,"","YES")
 db[146] = new dbRecord(false, "Dual Element Cleaner","e450_131.xml","0",2,"","YES")
 db[147] = new dbRecord(true, "Transfer Pump Pressure And Inlet Restriction Check","e450_132.xml","0",1,"","")
 db[148] = new dbRecord(false, "DT/DTI/DTA-466 C Engines (With Robert Bosch \"MW\" or \"A\" Fuel Injection Pump)","e450_133.xml","0",2,"","YES")
 db[149] = new dbRecord(false, "INJECTION PUMP STATIC TIMING [ENGINE STOPPED]   DT/DTI/DTA-466 C Engines  (With Robert Bosch \"MW\" or \"A\" Fuel Injection Pump)","e450_134.xml","0",1,"","YES")
 db[150] = new dbRecord(true, "Crankcase Pressure","e450_135.xml","0",1,"","")
 db[151] = new dbRecord(false, "DT/DTI/DTA-466 C Engines (With Robert Bosch \"MW\" or \"A\" Fuel Injection Pump)","e450_135.xml","0",2,"","YES")
 db[152] = new dbRecord(true, "Intake Manifold Pressure","e450_136.xml","0",1,"","")
 db[153] = new dbRecord(false, "DT/DTI/DTA-466 C Engines (With Robert Bosch \"MW\" or \"A\" Fuel Injection Pump)","e450_136.xml","0",2,"","YES")
 db[154] = new dbRecord(true, "Aneroid Diaphragm","e450_137.xml","0",1,"","")
 db[155] = new dbRecord(false, "DT/DTI/DTA-466 C Engines (With Robert Bosch \"MW\" or \"A\" Fuel Injection Pump)","e450_137.xml","0",2,"","YES")
 db[156] = new dbRecord(true, "Test Injection Nozzles","e450_138.xml","0",1,"","")
 db[157] = new dbRecord(false, "DT/DTI/DTA-466 C Engines (With Robert Bosch \"MW\" or \"A\" Fuel Injection Pump)","e450_138.xml","0",2,"","YES")
 db[158] = new dbRecord(true, "Exhaust Back Pressure","e450_139.xml","0",1,"","")
 db[159] = new dbRecord(false, "DT/DTI/DTA-466 C Engines (With Robert Bosch \"MW\" or \"A\" Fuel Injection Pump)","e450_139.xml","0",2,"","YES")
 db[160] = new dbRecord(true, "MEASURE SMOKE INTENSITY  DT/DTI/DTA-466 C Engines  (With Robert Bosch \"MW\" or \"A\" Fuel Injection Pump)","e450_140.xml","0",1,"","YES")
 db[161] = new dbRecord(false, "Measure Smoke Intensity","e450_141.xml","0",2,"","YES")
 db[162] = new dbRecord(true, "Intake And Exhaust Valve Clearance","e450_142.xml","0",1,"","")
 db[163] = new dbRecord(false, "DT/DTI/DTA-466 C Engines (With Robert Bosch \"MW\" or \"A\" Fuel Injection Pump)","e450_142.xml","0",2,"","YES")
 db[164] = new dbRecord(true, "Performance Data Guidelines","e450_143.xml","0",1,"","")
 db[165] = new dbRecord(false, "DT-466C/195 HP @ 2600 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_143.xml","0",2,"","YES")
 db[166] = new dbRecord(false, "DTI-466C/195 HP @ 2600 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_144.xml","0",2,"","YES")
 db[167] = new dbRecord(false, "DT-466C/210 HP @ 2600 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_145.xml","0",2,"","YES")
 db[168] = new dbRecord(false, "DTI-466C/210 HP @ 2600 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_146.xml","0",2,"","YES")
 db[169] = new dbRecord(false, "DT-466C/180 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_147.xml","0",2,"","YES")
 db[170] = new dbRecord(false, "DT-466C/180 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_148.xml","0",2,"","YES")
 db[171] = new dbRecord(false, "DT-466C/165 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_149.xml","0",2,"","YES")
 db[172] = new dbRecord(false, "DT-466C/165 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_150.xml","0",2,"","YES")
 db[173] = new dbRecord(false, "DT-466C/165 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_151.xml","0",2,"","YES")
 db[174] = new dbRecord(false, "DT-466C/180 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_152.xml","0",2,"","YES")
 db[175] = new dbRecord(false, "DT-466C/180 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_153.xml","0",2,"","YES")
 db[176] = new dbRecord(false, "DT-466C/210 HP @ 2600 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_154.xml","0",2,"","YES")
 db[177] = new dbRecord(false, "DT-466C/165 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_155.xml","0",2,"","YES")
 db[178] = new dbRecord(false, "DT-466C/180 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_156.xml","0",2,"","YES")
 db[179] = new dbRecord(false, "DTI-466C/210 HP @ 2600 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_157.xml","0",2,"","YES")
 db[180] = new dbRecord(false, "DTA-466C/215 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_158.xml","0",2,"","YES")
 db[181] = new dbRecord(false, "DTA-466C/215 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_159.xml","0",2,"","YES")
 db[182] = new dbRecord(false, "DTA-466C/230 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_160.xml","0",2,"","YES")
 db[183] = new dbRecord(false, "DTA-466C/240 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_161.xml","0",2,"","YES")
 db[184] = new dbRecord(false, "DTA-466C/245 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_162.xml","0",2,"","YES")
 db[185] = new dbRecord(false, "DTA-466C/240 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_163.xml","0",2,"","YES")
 db[186] = new dbRecord(false, "DTA-466C/230 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_164.xml","0",2,"","YES")
 db[187] = new dbRecord(false, "DTA-466C/215 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_165.xml","0",2,"","YES")
 db[188] = new dbRecord(false, "DTA-466C/210 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_166.xml","0",2,"","YES")
 db[189] = new dbRecord(false, "DT-466C/210 HP @ 2600 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_167.xml","0",2,"","YES")
 db[190] = new dbRecord(false, "DT-466C/185 HP @ 2600 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_168.xml","0",2,"","YES")
 db[191] = new dbRecord(false, "DT-466C/185 HP @ 2600 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_169.xml","0",2,"","YES")
 db[192] = new dbRecord(false, "DT-466/185 HP @ 2600 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_170.xml","0",2,"","YES")
 db[193] = new dbRecord(false, "DT-466/210 HP @ 2600 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_171.xml","0",2,"","YES")
 db[194] = new dbRecord(false, "DT-466/185 HP @ 2600 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_172.xml","0",2,"","YES")
 db[195] = new dbRecord(false, "DT-466/210 HP @ 2600 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_173.xml","0",2,"","YES")
 db[196] = new dbRecord(false, "DTA-466/220 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_174.xml","0",2,"","YES")
 db[197] = new dbRecord(false, "DTA-466/245 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_175.xml","0",2,"","YES")
 db[198] = new dbRecord(false, "DTA-466/270 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_176.xml","0",2,"","YES")
 db[199] = new dbRecord(false, "DT-466/195 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_177.xml","0",2,"","YES")
 db[200] = new dbRecord(false, "DT-466/195 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_178.xml","0",2,"","YES")
 db[201] = new dbRecord(false, "DT-466/210 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_179.xml","0",2,"","YES")
 db[202] = new dbRecord(false, "DT-466/210 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_180.xml","0",2,"","YES")
 db[203] = new dbRecord(false, "DT-466/210 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_181.xml","0",2,"","YES")
 db[204] = new dbRecord(false, "DTA-466/220 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_182.xml","0",2,"","YES")
 db[205] = new dbRecord(false, "DTA-466/220 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_183.xml","0",2,"","YES")
 db[206] = new dbRecord(false, "DTA-466/230 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_184.xml","0",2,"","YES")
 db[207] = new dbRecord(false, "DTA-466/230 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_185.xml","0",2,"","YES")
 db[208] = new dbRecord(false, "DTA-466/250 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_186.xml","0",2,"","YES")
 db[209] = new dbRecord(false, "DTA-466/250 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_187.xml","0",2,"","YES")
 db[210] = new dbRecord(false, "DTA-466/250 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_188.xml","0",2,"","YES")
 db[211] = new dbRecord(false, "DTA-466/250 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_189.xml","0",2,"","YES")
 db[212] = new dbRecord(false, "DTA-466/270 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_190.xml","0",2,"","YES")
 db[213] = new dbRecord(false, "DTA-466/270 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_191.xml","0",2,"","YES")
 db[214] = new dbRecord(false, "DT-466/195 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_192.xml","0",2,"","YES")
 db[215] = new dbRecord(false, "DTA-466/195 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_193.xml","0",2,"","YES")
 db[216] = new dbRecord(false, "DT-466/210 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_194.xml","0",2,"","YES")
 db[217] = new dbRecord(false, "DTA-466/210 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_195.xml","0",2,"","YES")
 db[218] = new dbRecord(false, "DTA-466/230 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_196.xml","0",2,"","YES")
 db[219] = new dbRecord(false, "DTA-466/250 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_197.xml","0",2,"","YES")
 db[220] = new dbRecord(false, "DTA-466/270 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_198.xml","0",2,"","YES")
 db[221] = new dbRecord(false, "DTA-466/270 HP @ 2400 RPM w/Bowden Wire Shut-off or Electric Shut-off","e450_199.xml","0",2,"","YES")
 db[222] = new dbRecord(false, "CONVERSION TABLES","e450_200.xml","0",0,"","YES")
// AHJO - In the following function the parameter 'occurs' was added Oct/Nov 2001
function dbRecord(mother,display,URL,occurs,indent,statusMsg,link){
	this.mother = mother   // is this item a parent?
	this.display = display // text to display
	this.URL = URL         // used to link to TOC
	this.occurances =  occurs  // how many times does search occur - THIS LINE WAS ADDED by AHJO
	this.indent = indent   // how many levels nested?
	this.statusMsg = statusMsg  // descriptive text for status bar 
	this.link = link  //  link tied to text; if empty string, item appears as straight text
	return this
}
// pre-load all images into cache
var collapsedImg = new Image(widgetWidth,widgetHeight)
collapsedImg.src = collapsedWidget
var expandedImg = new Image(widgetWidth,widgetHeight)
expandedImg.src = expandedWidget
var endpointImg = new Image(widgetWidth,widgetHeight)
endpointImg.src = endpointWidget
// mainframeURL = parent.mainframe.document.URL // get URL of mainframe 
// ** functions that get and set persistent cookie data **
// set cookie data
var mycookie = document.cookie
function setCurrState(setting) {
        mycookie = document.cookie = "currState=" + escape(setting)
}
// retrieve cookie data
function getCurrState() {
        var label = "currState="
        var labelLen = label.length
        var cLen = mycookie.length
        var i = 0
        while (i < cLen) {
                var j = i + labelLen
                if (mycookie.substring(i,j) == label) {
                        var cEnd = mycookie.indexOf(";",j)
                        if (cEnd ==     -1) {
                                cEnd = mycookie.length
                       }
                        return unescape(mycookie.substring(j,cEnd))
                }
               i++
       }
        return ""
}
// **function that updates persistent storage of state**
// toggles an outline mother entry, storing new value in the cookie
function toggle(n) {
	if (n != 0) {
		var newString = ""
		var currState = getCurrState() // of whole outline
		var expanded = currState.charAt(n-1) // of clicked item
		newString += currState.substring(0,n-1)
		newString += expanded ^ 1 // Bitwise XOR clicked item
		newString += currState.substring(n,currState.length)
		setCurrState(newString) // write new state back to cookie
	}
}
// **functions used in assembling updated outline**
// returns the proper GIF file name for each entry's control
function getGIF(n) {
	var mom = db[n].mother  // is entry a parent?
	var expanded = getCurrState().charAt(n-1) // of clicked item
	if (!mom) {
		return endpointWidget
	} else {
		if (expanded == 1) {
			return expandedWidget
		}
	}
	return collapsedWidget
}
// returns the proper status line text based on the icon style
function getGIFStatus(n) {
	var mom = db[n].mother  // is entry a parent
	var expanded = getCurrState().charAt(n-1) // of rolled item
	if (!mom) {
		return "No further items"
	} else {
		if (expanded == 1) {
			return "Click to collapse nested items"
		}
	}
	return "Click to expand nested items"
}
// initialize 'current state' storage field
if (getCurrState() == "" || getCurrState().length != (db.length-1)) {
	initState = ""
	for (i = 1; i < db.length; i++) {
		initState += "0"
	}
	setCurrState(initState)
}
// end -->

    </SCRIPT>
</HEAD>
<BODY>
<h3>DT/DTI-466 A and B Series DT/DTI/DTA-466 C Diesel Engine Diagnostics (1993)</h3>
<SCRIPT LANGUAGE="JavaScript1.1">
<!-- start
// build new outline based on the values of the cookie
// and data points in the outline data array.
// This fires each time the user clicks on a control,
// because the HREF for each one reloads the current document.
var newOutline = ""
var prevIndentDisplayed = 0
var showMyDaughter = 0
// cycle through each entry in the outline array
for (var i = 1; i < db.length; i++) {
	var theGIF = getGIF(i)				// get the image
	var theGIFStatus = getGIFStatus(i)  // get the status message
	var currIndent = db[i].indent		// get the indent level
	var expanded = getCurrState().charAt(i-1) // current state
        db[i].currentrow = ""

	if (currIndent == 0 || currIndent == 1 || db[i].currentrow == "currentrow" || currIndent <= prevIndentDisplayed || (showMyDaughter == 1 && (currIndent - prevIndentDisplayed == 1))) {
 // Phil added the if to remove the image from before the root element
         if (currIndent != 0) {
			newOutline += "<SPAN class=\"" + db[i].currentrow + "\" style=\" position:relative;left:" + (indentPixels * currIndent) + "px;width:200px\"><A HREF=\"javascript:history.go(0)\" onMouseOver=\"window.status=\'" + theGIFStatus + "\';return true;\" onClick=\"toggle(" + i + ");return " + "\">"
			newOutline += "<IMG ALIGN=TOP SRC=\"" + theGIF + "\" HEIGHT=" + widgetHeight + " WIDTH=" + widgetWidth + " BORDER=0></A>"
			newOutline += "<SPAN title=\"" + db[i].display + "\" style=\"width:" + (200-widgetWidth) + "px\">"
			}
			if (db[i].link == "" || db[i].link == null) {
				newOutline += " <small'>" +  db[i].display + "</small></SPAN></SPAN>" + "<BR>"	// no link, just a listed item
			} else {
                 if (db[i].occurances > 0)	{
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><small>" + db[i].display + "&nbsp;&nbsp;("
 + db[i].occurances + ")</small></A></SPAN></SPAN><BR>"
			} else {
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><small'>" + db[i].display + "</small></A></SPAN></SPAN><BR>"
			}
			}
		prevIndentDisplayed = currIndent
		showMyDaughter = expanded
		if (db.length > 25) {
			document.write(newOutline)
			newOutline = ""
		}
	}
}
document.write(newOutline)
// end -->

</SCRIPT>
</BODY>
</html>
