<HTML>
<HEAD>
    <TITLE>Service Section TOC</TITLE>
    <LINK href="../style.css" rel="STYLESHEET" type="text/css">
    <SCRIPT LANGUAGE="JavaScript1.1">
<!-- begin hiding
var indentPixels = 15
var collapsedWidget = "../images/plus.gif"
var expandedWidget = "../images/minus.gif"
var endpointWidget = "../images/end.gif"
var widgetWidth = 17
var widgetHeight = 18
var displayTarget = "mainframe"
// AHJO - In the folowing db the fourth field (after the xml file name) is new and set to "0" 
var db = new Array()
 db[1] = new dbRecord(true, "DT 466 / DT 530 Engine Diagnostic Manual for 4000 Series Trucks (2001)","eges215_1.xml","0",0,"","YES")
 db[2] = new dbRecord(true, "Engine Control System Overview","eges215_SEC-1-NGV.xml","0",0,"","YES")
 db[3] = new dbRecord(true, "Fuel Supply System","eges215_3.xml","0",1,"","")
 db[4] = new dbRecord(false, "Fuel System Description","eges215_3.xml","0",2,"","YES")
 db[5] = new dbRecord(false, "Fuel Flow","eges215_4.xml","0",2,"","YES")
 db[6] = new dbRecord(true, "Injection Control Pressure System","eges215_5.xml","0",1,"","")
 db[7] = new dbRecord(false, "Injection Control Pressure System Operation","eges215_5.xml","0",2,"","YES")
 db[8] = new dbRecord(false, "Injection Pressure Control","eges215_6.xml","0",2,"","YES")
 db[9] = new dbRecord(false, "IPR Valve Operation","eges215_7.xml","0",2,"","YES")
 db[10] = new dbRecord(true, "Heui Injector Operation","eges215_8.xml","0",1,"","")
 db[11] = new dbRecord(false, "Standard Injector Operation","eges215_8.xml","0",2,"","YES")
 db[12] = new dbRecord(false, "Split-Shot Injectors","eges215_9.xml","0",2,"","YES")
 db[13] = new dbRecord(true, "Electronic Control Module","eges215_10.xml","0",1,"","")
 db[14] = new dbRecord(false, "Operation and Function","eges215_10.xml","0",2,"","YES")
 db[15] = new dbRecord(false, "Reference Voltage","eges215_11.xml","0",2,"","YES")
 db[16] = new dbRecord(false, "Input Voltage Signals","eges215_12.xml","0",2,"","YES")
 db[17] = new dbRecord(false, "Microprocessor Input and Output","eges215_13.xml","0",2,"","YES")
 db[18] = new dbRecord(false, "Actuators ","eges215_14.xml","0",2,"","YES")
 db[19] = new dbRecord(true, "Engine And Vehicle Sensors","eges215_15.xml","0",1,"","")
 db[20] = new dbRecord(false, "Service Procedure","eges215_15.xml","0",2,"","YES")
 db[21] = new dbRecord(false, "Thermistor","eges215_16.xml","0",2,"","YES")
 db[22] = new dbRecord(false, "Potentiometer","eges215_17.xml","0",2,"","YES")
 db[23] = new dbRecord(false, "Variable Capacitance Sensor","eges215_18.xml","0",2,"","YES")
 db[24] = new dbRecord(false, "Hall Effect Sensor","eges215_19.xml","0",2,"","YES")
 db[25] = new dbRecord(false, "Magnetic Pickup","eges215_20.xml","0",2,"","YES")
 db[26] = new dbRecord(false, "Switch Sensors","eges215_21.xml","0",2,"","YES")
 db[27] = new dbRecord(true, "Vehicle Features","eges215_22.xml","0",1,"","")
 db[28] = new dbRecord(false, "Standard Features","eges215_23.xml","0",2,"","YES")
 db[29] = new dbRecord(false, "Optional Features","eges215_24.xml","0",2,"","YES")
 db[30] = new dbRecord(true, "Diagnostic Software Self Test Operation","eges215_25.xml","0",1,"","YES")
 db[31] = new dbRecord(false, "Continuous Monitor","eges215_26.xml","0",2,"","YES")
 db[32] = new dbRecord(false, "Diagnostic Tests","eges215_27.xml","0",2,"","YES")
 db[33] = new dbRecord(true, "MECHANICAL DIAGNOSTICS DT 466 and DT 530","eges215_SEC-2-NGV.xml","0",0,"","YES")
 db[34] = new dbRecord(true, "Diagnostic Forms","eges215_29.xml","0",1,"","")
 db[35] = new dbRecord(false, "Introduction, ","eges215_30.xml","0",2,"","YES")
 db[36] = new dbRecord(true, "Hard Start / No Start Diagnostics","eges215_31.xml","0",1,"","")
 db[37] = new dbRecord(false, "Fuel Check","eges215_32.xml","0",2,"","YES")
 db[38] = new dbRecord(false, "Engine Visual Check","eges215_33.xml","0",2,"","YES")
 db[39] = new dbRecord(false, "Engine Oil Check","eges215_34.xml","0",2,"","YES")
 db[40] = new dbRecord(false, "Intake / Exhaust Restriction Check","eges215_35.xml","0",2,"","YES")
 db[41] = new dbRecord(false, "EST Diagnostic Trouble Codes (DTC's) ","eges215_X1750209.xml","0",2,"","YES")
 db[42] = new dbRecord(false, "EST Key-ON Engine-OFF Standard Test","eges215_37.xml","0",2,"","YES")
 db[43] = new dbRecord(false, "EST Key-ON Engine-OFF Injector Test ","eges215_38.xml","0",2,"","YES")
 db[44] = new dbRecord(false, "Diagnostic Trouble Code Access","eges215_X1750210.xml","0",2,"","YES")
 db[45] = new dbRecord(false, "EST Data List","eges215_40.xml","0",2,"","YES")
 db[46] = new dbRecord(false, "ECM Voltage Test","eges215_X1750204.xml","0",2,"","YES")
 db[47] = new dbRecord(false, "Engine Cranking RPM","eges215_42.xml","0",2,"","YES")
 db[48] = new dbRecord(false, "Injection Control Pressure Test","eges215_43.xml","0",2,"","YES")
 db[49] = new dbRecord(false, "Low Injection Control Pressure Test","eges215_P1750205.xml","0",2,"","YES")
 db[50] = new dbRecord(false, "Fuel Pump Pressure Test","eges215_45.xml","0",2,"","YES")
 db[51] = new dbRecord(false, "Tools Required","eges215_46.xml","0",2,"","YES")
 db[52] = new dbRecord(true, "Performance Diagnostics","eges215_47.xml","0",1,"","")
 db[53] = new dbRecord(false, "Engine Oil Check","eges215_48.xml","0",2,"","YES")
 db[54] = new dbRecord(false, "Fuel Pressure Test","eges215_49.xml","0",2,"","YES")
 db[55] = new dbRecord(false, "Transfer Pump Restriction Test","eges215_E1750206.xml","0",2,"","YES")
 db[56] = new dbRecord(false, "EST Diagnostic Trouble Codes (DTC's)","eges215_51.xml","0",2,"","YES")
 db[57] = new dbRecord(false, "EST Key-ON Engine-OFF Standard Test","eges215_52.xml","0",2,"","YES")
 db[58] = new dbRecord(false, "EST Key-ON Engine-OFF Injector Test","eges215_53.xml","0",2,"","YES")
 db[59] = new dbRecord(false, "Diagnostic Trouble Code Access","eges215_54.xml","0",2,"","YES")
 db[60] = new dbRecord(false, "Intake Restriction Test","eges215_55.xml","0",2,"","YES")
 db[61] = new dbRecord(false, "EST Key-ON Engine-Running Standard Test","eges215_56.xml","0",2,"","YES")
 db[62] = new dbRecord(false, "EST Key-ON Engine-Running Injector Test","eges215_57.xml","0",2,"","YES")
 db[63] = new dbRecord(false, "Fuel Pressure Test (Full Load)","eges215_58.xml","0",2,"","YES")
 db[64] = new dbRecord(false, "ICP Pressure Test","eges215_59.xml","0",2,"","YES")
 db[65] = new dbRecord(false, "Boost Pressure Test","eges215_60.xml","0",2,"","YES")
 db[66] = new dbRecord(false, "Crankcase Pressure Test ","eges215_61.xml","0",2,"","YES")
 db[67] = new dbRecord(false, "Wastegate Actuator Test","eges215_62.xml","0",2,"","YES")
 db[68] = new dbRecord(false, "Exhaust Restriction Test","eges215_63.xml","0",2,"","YES")
 db[69] = new dbRecord(false, "Valve Clearance Test","eges215_64.xml","0",2,"","YES")
 db[70] = new dbRecord(true, "Performance Specifications","eges215_65.xml","0",1,"","")
 db[71] = new dbRecord(false, "2001 Model Year","eges215_P175022000.xml","0",2,"","YES")
 db[72] = new dbRecord(true, "Electronic Control System Diagnostics","eges215_SEC-3-NGV.xml","0",0,"","YES")
 db[73] = new dbRecord(true, "Electronic Control System Diagnostic Form","eges215_68.xml","0",1,"","")
 db[74] = new dbRecord(false, "Introduction","eges215_FC.xml","0",2,"","YES")
 db[75] = new dbRecord(true, "Sensor And Actuator Locations","eges215_SENSORS.xml","0",1,"","")
 db[76] = new dbRecord(false, "Engine Sensors and Actuators ","eges215_SENSORS.xml","0",2,"","YES")
 db[77] = new dbRecord(false, "Engine and Vehicle Relays, Fuses, and Sensors","eges215_71.xml","0",2,"","YES")
 db[78] = new dbRecord(true, "Diagnostic Procedures For The Electronic Control System","eges215_ELEC.xml","0",1,"","")
 db[79] = new dbRecord(false, "Sensor and Actuator Diagnostic Inspection","eges215_ELEC.xml","0",2,"","YES")
 db[80] = new dbRecord(false, "Using Master Diagnostics To Test 3 Wire Pressure and APS / IVS Sensors ","eges215_73.xml","0",2,"","YES")
 db[81] = new dbRecord(false, "Using Master Diagnostics To Test 2 Wire Temperature Sensors","eges215_74.xml","0",2,"","YES")
 db[82] = new dbRecord(false, "Actuator and Sensor Diagnostic Procedure Without Master Diagnostics","eges215_75.xml","0",2,"","YES")
 db[83] = new dbRecord(false, "Operational Voltage Checks","eges215_76.xml","0",2,"","YES")
 db[84] = new dbRecord(true, "Circuit Function And Diagnostics","eges215_77.xml","0",1,"","")
 db[85] = new dbRecord(false, "Accelerator Pedal Position Sensor and Idle Validation Switch (APS/IVS)","eges215_78.xml","0",2,"","YES")
 db[86] = new dbRecord(false, "ATA Communications, Data Communications Link","eges215_S17503001.xml","0",2,"","YES")
 db[87] = new dbRecord(false, "Barometric Absolute Pressure Sensor (BAP)","eges215_80.xml","0",2,"","YES")
 db[88] = new dbRecord(false, "Brake Switch Circuits (Brake)","eges215_81.xml","0",2,"","YES")
 db[89] = new dbRecord(false, "Camshaft Position Sensor (CMP)","eges215_S1750208.xml","0",2,"","YES")
 db[90] = new dbRecord(false, "Change Oil Display","eges215_83.xml","0",2,"","YES")
 db[91] = new dbRecord(false, "Controller Area Network Communications","eges215_84.xml","0",2,"","YES")
 db[92] = new dbRecord(false, "Diagnostic Trouble Code Access","eges215_85.xml","0",2,"","YES")
 db[93] = new dbRecord(false, "Engine Crank Inhibit System (ECI)","eges215_86.xml","0",2,"","YES")
 db[94] = new dbRecord(false, "Engine Coolant Level System (ECL)","eges215_87.xml","0",2,"","YES")
 db[95] = new dbRecord(false, "ECM Self Diagnostics","eges215_88.xml","0",2,"","YES")
 db[96] = new dbRecord(false, "Electronic Control Module Power Supply (ECM PWR)","eges215_89.xml","0",2,"","YES")
 db[97] = new dbRecord(false, "Engine Coolant Temperature Sensor (ECT)","eges215_90.xml","0",2,"","YES")
 db[98] = new dbRecord(false, "Engine Fan Control (EFN)","eges215_91.xml","0",2,"","YES")
 db[99] = new dbRecord(false, "Engine Oil Pressure Sensor (EOP)","eges215_92.xml","0",2,"","YES")
 db[100] = new dbRecord(false, "Engine Oil Temperature Sensor (EOT)","eges215_93.xml","0",2,"","YES")
 db[101] = new dbRecord(false, "Electronic Pressure Governor (EPG)","eges215_94.xml","0",2,"","YES")
 db[102] = new dbRecord(false, "Intake Air Temperature Sensor (IAT)","eges215_95.xml","0",2,"","YES")
 db[103] = new dbRecord(false, "Injection Control Pressure Sensor (ICP)","eges215_96.xml","0",2,"","YES")
 db[104] = new dbRecord(false, "Injector Drive Circuits (INJ)","eges215_S17503010.xml","0",2,"","YES")
 db[105] = new dbRecord(false, "Injection Pressure Regulator (IPR)","eges215_98.xml","0",2,"","YES")
 db[106] = new dbRecord(false, "Injection Pressure Regulation System (IPR_SYS)","eges215_99.xml","0",2,"","YES")
 db[107] = new dbRecord(false, "Idle Shutdown Timer (IST)","eges215_100.xml","0",2,"","YES")
 db[108] = new dbRecord(false, "Manifold Absolute Pressure Sensor (MAP)","eges215_101.xml","0",2,"","YES")
 db[109] = new dbRecord(false, "Engine Warning and Protection System (EWPS)","eges215_102.xml","0",2,"","YES")
 db[110] = new dbRecord(false, "Remote Accelerator Pedal Sensor (RPS)","eges215_103.xml","0",2,"","YES")
 db[111] = new dbRecord(false, "Remote PTO Speed Control (RPTO)","eges215_104.xml","0",2,"","YES")
 db[112] = new dbRecord(false, "Speed Control Command Switches (SCCS)","eges215_105.xml","0",2,"","YES")
 db[113] = new dbRecord(false, "Tachometer Input Circuits","eges215_106.xml","0",2,"","YES")
 db[114] = new dbRecord(false, "Two Speed Axle Speedometer Circuit","eges215_107.xml","0",2,"","YES")
 db[115] = new dbRecord(false, "Reference Voltage (V<subscript>REF</subscript>)","eges215_P17503001.xml","0",2,"","YES")
 db[116] = new dbRecord(false, "Vehicle Retarder (VRE)","eges215_109.xml","0",2,"","YES")
 db[117] = new dbRecord(false, "Vehicle Speed Sensor (VSS) ","eges215_110.xml","0",2,"","YES")
 db[118] = new dbRecord(true, "Supplemental Diagnostic Analysis","eges215_SEC-4-NGV.xml","0",0,"","YES")
 db[119] = new dbRecord(true, "Diagnostic Analysis Procedures","eges215_112.xml","0",1,"","")
 db[120] = new dbRecord(false, "Oil Consumption","eges215_112.xml","0",2,"","YES")
 db[121] = new dbRecord(false, "Fuel Consumption","eges215_113.xml","0",2,"","YES")
 db[122] = new dbRecord(false, "High Coolant Temperature or Coolant Loss","eges215_114.xml","0",2,"","YES")
 db[123] = new dbRecord(false, "Excessive Exhaust Smoke","eges215_115.xml","0",2,"","YES")
 db[124] = new dbRecord(false, "Fuel Dilution","eges215_116.xml","0",2,"","YES")
 db[125] = new dbRecord(false, "Coolant in Lubricating Oil or Lubricating Oil in Coolant","eges215_117.xml","0",2,"","YES")
 db[126] = new dbRecord(false, "Excessive Crankcase Pressure","eges215_118.xml","0",2,"","YES")
 db[127] = new dbRecord(false, "Lube Oil in Fuel","eges215_119.xml","0",2,"","YES")
 db[128] = new dbRecord(true, "Diagnosing Scuffed Injectors","eges215_120.xml","0",1,"","")
 db[129] = new dbRecord(false, "Key-On Engine-Running Injector Test","eges215_P17504001.xml","0",2,"","YES")
 db[130] = new dbRecord(false, "Troubleshooting","eges215_122.xml","0",2,"","YES")
 db[131] = new dbRecord(false, "Test Procedure - Using the EST and Master Diagnostics","eges215_123.xml","0",2,"","YES")
 db[132] = new dbRecord(false, "Snapshot Recording &#38; Replay of Cylinder Contribution Test","eges215_124.xml","0",2,"","YES")
 db[133] = new dbRecord(true, "Diagnostic Tools","eges215_SEC-5-NGV.xml","0",0,"","YES")
 db[134] = new dbRecord(true, "Tools","eges215_126.xml","0",1,"","")
 db[135] = new dbRecord(false, "Beyers Model 200 Pressure Test Kit (ztse2239)","eges215_127.xml","0",2,"","YES")
 db[136] = new dbRecord(false, "Gauge Bar Tool (ps94-831-3)","eges215_128.xml","0",2,"","YES")
 db[137] = new dbRecord(false, "Crankcase Pressure Restriction Tool (ztse4039)","eges215_129.xml","0",2,"","YES")
 db[138] = new dbRecord(false, "Dwyer Slack Tube Manometer","eges215_130.xml","0",2,"","YES")
 db[139] = new dbRecord(false, "Terminal Test Adapter Kit","eges215_131.xml","0",2,"","YES")
 db[140] = new dbRecord(false, "Injector Test Harness (ztse4401)","eges215_132.xml","0",2,"","YES")
 db[141] = new dbRecord(false, "3-wire Pressure Sensor Breakout Tee (ztse4347)","eges215_133.xml","0",2,"","YES")
 db[142] = new dbRecord(false, "2-wire Temperature Breakout Tee (ztse4483)","eges215_134.xml","0",2,"","YES")
 db[143] = new dbRecord(false, "Ipr Sensor Breakout Tee (ztse4484)","eges215_135.xml","0",2,"","YES")
 db[144] = new dbRecord(false, "Aps / Ivs Sensor Breakout Tee (ztse4485)","eges215_136.xml","0",2,"","YES")
 db[145] = new dbRecord(false, "Cmp Sensor Breakout Tee (ztse4486)","eges215_137.xml","0",2,"","YES")
 db[146] = new dbRecord(false, "Icp Adapter / Plug Kit (ztse4359)","eges215_138.xml","0",2,"","YES")
 db[147] = new dbRecord(false, "Fluke 88&#8482; Digital Multimeter (ztse4357)","eges215_139.xml","0",2,"","YES")
 db[148] = new dbRecord(false, "Breakout Box (ztse4445)","eges215_140.xml","0",2,"","YES")
 db[149] = new dbRecord(true, "Master Diagnostics (md 32)","eges215_141.xml","0",1,"","")
 db[150] = new dbRecord(false, "Starting Master Diagnostics From The Windows Desktop","eges215_142.xml","0",2,"","YES")
 db[151] = new dbRecord(false, "Opening A Com Port","eges215_143.xml","0",2,"","YES")
 db[152] = new dbRecord(false, "Text Window &#38; Adding Parameter Identifiers (pid)","eges215_144.xml","0",2,"","YES")
 db[153] = new dbRecord(false, "Graphic Window &#38; Adding Parameter Identifiers (pid)","eges215_145.xml","0",2,"","YES")
 db[154] = new dbRecord(false, "Opening A Session File","eges215_146.xml","0",2,"","YES")
 db[155] = new dbRecord(false, "Displaying Sensor Voltages","eges215_147.xml","0",2,"","YES")
 db[156] = new dbRecord(false, "Diagnostic Testing","eges215_148.xml","0",2,"","YES")
 db[157] = new dbRecord(false, "Check And Clear Diagnostic Trouble Codes (dtc)","eges215_S17505001.xml","0",2,"","YES")
 db[158] = new dbRecord(false, "View Accumulators (vehicle Information)","eges215_150.xml","0",2,"","YES")
 db[159] = new dbRecord(false, "Programmable Parameters, Change / View","eges215_151.xml","0",2,"","YES")
 db[160] = new dbRecord(false, "Snapshot- Record &#38; Replay","eges215_152.xml","0",2,"","YES")
 db[161] = new dbRecord(false, "Est Help","eges215_153.xml","0",2,"","YES")
 db[162] = new dbRecord(true, "Digital Multimeter Use","eges215_154.xml","0",1,"","")
 db[163] = new dbRecord(false, "Voltage","eges215_154.xml","0",2,"","YES")
 db[164] = new dbRecord(false, "Ohm's Law Review","eges215_155.xml","0",2,"","YES")
 db[165] = new dbRecord(false, "Ammeter","eges215_156.xml","0",2,"","YES")
 db[166] = new dbRecord(false, "Ohmmeter","eges215_157.xml","0",2,"","YES")
 db[167] = new dbRecord(false, "Troubleshooting","eges215_158.xml","0",2,"","YES")
 db[168] = new dbRecord(false, "Electronic Circuit Testing","eges215_159.xml","0",2,"","YES")
 db[169] = new dbRecord(true, "Connector And Harness Repair","eges215_SEC-6-NGV.xml","0",0,"","YES")
 db[170] = new dbRecord(false, "Contact Insertion","eges215_161.xml","0",1,"","YES")
 db[171] = new dbRecord(false, "Inspection","eges215_162.xml","0",1,"","YES")
 db[172] = new dbRecord(false, "Standard Terminal Replacement","eges215_163.xml","0",1,"","YES")
 db[173] = new dbRecord(false, "Terminal Replacement-sealed Weather Pack And Metri-pack","eges215_164.xml","0",1,"","YES")
 db[174] = new dbRecord(false, "Splice Clip Installation","eges215_165.xml","0",1,"","YES")
 db[175] = new dbRecord(false, "Crimp And Seal Splice Sleeve Installation","eges215_166.xml","0",1,"","YES")
 db[176] = new dbRecord(false, "Locking Wedge Connectors","eges215_167.xml","0",1,"","YES")
 db[177] = new dbRecord(false, "To Remove The Terminal From The Connector","eges215_168.xml","0",1,"","YES")
 db[178] = new dbRecord(false, "To Replace The Terminal","eges215_169.xml","0",1,"","YES")
 db[179] = new dbRecord(false, "To Install The Terminal In The Connector","eges215_170.xml","0",1,"","YES")
 db[180] = new dbRecord(false, "Replacing Valve Cover Connector Terminals","eges215_171.xml","0",1,"","YES")
 db[181] = new dbRecord(false, "To Install The Terminal In The Connector","eges215_172.xml","0",1,"","YES")
 db[182] = new dbRecord(false, "Packard Connectors","eges215_173.xml","0",1,"","YES")
 db[183] = new dbRecord(false, "To Remove The Terminal From The Connector","eges215_174.xml","0",1,"","YES")
 db[184] = new dbRecord(false, "To Install The Terminal In The Connector","eges215_175.xml","0",1,"","YES")
 db[185] = new dbRecord(true, "Glossary Of Technical Terms","eges215_SEC-7-NGV.xml","0",0,"","YES")
 db[186] = new dbRecord(false, "MASTER DIAGNOSTICS PROGRAMMABLE PARAMETER DESCRIPTIONS","eges215_177.xml","0",1,"","YES")
// AHJO - In the following function the parameter 'occurs' was added Oct/Nov 2001
function dbRecord(mother,display,URL,occurs,indent,statusMsg,link){
	this.mother = mother   // is this item a parent?
	this.display = display // text to display
	this.URL = URL         // used to link to TOC
	this.occurances =  occurs  // how many times does search occur - THIS LINE WAS ADDED by AHJO
	this.indent = indent   // how many levels nested?
	this.statusMsg = statusMsg  // descriptive text for status bar 
	this.link = link  //  link tied to text; if empty string, item appears as straight text
	return this
}
// pre-load all images into cache
var collapsedImg = new Image(widgetWidth,widgetHeight)
collapsedImg.src = collapsedWidget
var expandedImg = new Image(widgetWidth,widgetHeight)
expandedImg.src = expandedWidget
var endpointImg = new Image(widgetWidth,widgetHeight)
endpointImg.src = endpointWidget
// mainframeURL = parent.mainframe.document.URL // get URL of mainframe 
// ** functions that get and set persistent cookie data **
// set cookie data
var mycookie = document.cookie
function setCurrState(setting) {
        mycookie = document.cookie = "currState=" + escape(setting)
}
// retrieve cookie data
function getCurrState() {
        var label = "currState="
        var labelLen = label.length
        var cLen = mycookie.length
        var i = 0
        while (i < cLen) {
                var j = i + labelLen
                if (mycookie.substring(i,j) == label) {
                        var cEnd = mycookie.indexOf(";",j)
                        if (cEnd ==     -1) {
                                cEnd = mycookie.length
                       }
                        return unescape(mycookie.substring(j,cEnd))
                }
               i++
       }
        return ""
}
// **function that updates persistent storage of state**
// toggles an outline mother entry, storing new value in the cookie
function toggle(n) {
	if (n != 0) {
		var newString = ""
		var currState = getCurrState() // of whole outline
		var expanded = currState.charAt(n-1) // of clicked item
		newString += currState.substring(0,n-1)
		newString += expanded ^ 1 // Bitwise XOR clicked item
		newString += currState.substring(n,currState.length)
		setCurrState(newString) // write new state back to cookie
	}
}
// **functions used in assembling updated outline**
// returns the proper GIF file name for each entry's control
function getGIF(n) {
	var mom = db[n].mother  // is entry a parent?
	var expanded = getCurrState().charAt(n-1) // of clicked item
	if (!mom) {
		return endpointWidget
	} else {
		if (expanded == 1) {
			return expandedWidget
		}
	}
	return collapsedWidget
}
// returns the proper status line text based on the icon style
function getGIFStatus(n) {
	var mom = db[n].mother  // is entry a parent
	var expanded = getCurrState().charAt(n-1) // of rolled item
	if (!mom) {
		return "No further items"
	} else {
		if (expanded == 1) {
			return "Click to collapse nested items"
		}
	}
	return "Click to expand nested items"
}
// initialize 'current state' storage field
if (getCurrState() == "" || getCurrState().length != (db.length-1)) {
	initState = ""
	for (i = 1; i < db.length; i++) {
		initState += "0"
	}
	setCurrState(initState)
}
// end -->

    </SCRIPT>
</HEAD>
<BODY>
<h3>DT 466 / DT 530 Engine Diagnostic Manual for 4000 Series Trucks (2001)</h3>
<SCRIPT LANGUAGE="JavaScript1.1">
<!-- start
// build new outline based on the values of the cookie
// and data points in the outline data array.
// This fires each time the user clicks on a control,
// because the HREF for each one reloads the current document.
var newOutline = ""
var prevIndentDisplayed = 0
var showMyDaughter = 0
// cycle through each entry in the outline array
for (var i = 1; i < db.length; i++) {
	var theGIF = getGIF(i)				// get the image
	var theGIFStatus = getGIFStatus(i)  // get the status message
	var currIndent = db[i].indent		// get the indent level
	var expanded = getCurrState().charAt(i-1) // current state
        db[i].currentrow = ""

	if (currIndent == 0 || currIndent == 1 || db[i].currentrow == "currentrow" || currIndent <= prevIndentDisplayed || (showMyDaughter == 1 && (currIndent - prevIndentDisplayed == 1))) {
 // Phil added the if to remove the image from before the root element
         if (currIndent != 0) {
			newOutline += "<SPAN class=\"" + db[i].currentrow + "\" style=\" position:relative;left:" + (indentPixels * currIndent) + "px;width:200px\"><A HREF=\"javascript:history.go(0)\" onMouseOver=\"window.status=\'" + theGIFStatus + "\';return true;\" onClick=\"toggle(" + i + ");return " + "\">"
			newOutline += "<IMG ALIGN=TOP SRC=\"" + theGIF + "\" HEIGHT=" + widgetHeight + " WIDTH=" + widgetWidth + " BORDER=0></A>"
			newOutline += "<SPAN title=\"" + db[i].display + "\" style=\"width:" + (200-widgetWidth) + "px\">"
			}
			if (db[i].link == "" || db[i].link == null) {
				newOutline += " <small'>" +  db[i].display + "</small></SPAN></SPAN>" + "<BR>"	// no link, just a listed item
			} else {
                 if (db[i].occurances > 0)	{
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><small>" + db[i].display + "&nbsp;&nbsp;("
 + db[i].occurances + ")</small></A></SPAN></SPAN><BR>"
			} else {
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><small'>" + db[i].display + "</small></A></SPAN></SPAN><BR>"
			}
			}
		prevIndentDisplayed = currIndent
		showMyDaughter = expanded
		if (db.length > 25) {
			document.write(newOutline)
			newOutline = ""
		}
	}
}
document.write(newOutline)
// end -->

</SCRIPT>
</BODY>
</html>
