<HTML>
<HEAD>
    <TITLE>Service Section TOC</TITLE>
    <LINK href="../style.css" rel="STYLESHEET" type="text/css">
    <SCRIPT LANGUAGE="JavaScript1.1">
<!-- begin hiding
var indentPixels = 15
var collapsedWidget = "../images/plus.gif"
var expandedWidget = "../images/minus.gif"
var endpointWidget = "../images/end.gif"
var widgetWidth = 17
var widgetHeight = 18
var displayTarget = "mainframe"
// AHJO - In the folowing db the fourth field (after the xml file name) is new and set to "0" 
var db = new Array()
 db[1] = new dbRecord(true, "VT 275 Engine Diagnostics Manual","eges3052_1.xml","0",0,"","YES")
 db[2] = new dbRecord(true, "Engine Systems","eges3052_E3050101.xml","0",0,"","YES")
 db[3] = new dbRecord(true, "Engine Systems","eges3052_S305010101.xml","0",1,"","")
 db[4] = new dbRecord(false, "Engine Serial Number","eges3052_S305010101.xml","0",2,"","YES")
 db[5] = new dbRecord(false, "Emission Labels","eges3052_4.xml","0",2,"","YES")
 db[6] = new dbRecord(false, "Engine Accessories","eges3052_5.xml","0",2,"","YES")
 db[7] = new dbRecord(false, "Engine Description","eges3052_6.xml","0",2,"","YES")
 db[8] = new dbRecord(false, "Typical Engine Component Locations","eges3052_7.xml","0",2,"","YES")
 db[9] = new dbRecord(false, "Engine Systems Interaction Diagram","eges3052_8.xml","0",2,"","YES")
 db[10] = new dbRecord(true, "Air Management System","eges3052_S305010102.xml","0",1,"","")
 db[11] = new dbRecord(false, "Air Management Components and Air Flow","eges3052_10.xml","0",2,"","YES")
 db[12] = new dbRecord(false, "Dual Stage Turbocharger ","eges3052_11.xml","0",2,"","YES")
 db[13] = new dbRecord(false, "Exhaust Gas Recirculation (EGR) system","eges3052_12.xml","0",2,"","YES")
 db[14] = new dbRecord(true, "Fuel Management System","eges3052_S305010103.xml","0",1,"","")
 db[15] = new dbRecord(false, "Fuel Management Components","eges3052_S305010103.xml","0",2,"","YES")
 db[16] = new dbRecord(false, "High-pressure Oil Flow","eges3052_14.xml","0",2,"","YES")
 db[17] = new dbRecord(false, "Injection Control Pressure (ICP) System","eges3052_15.xml","0",2,"","YES")
 db[18] = new dbRecord(false, "Fuel Injectors","eges3052_16.xml","0",2,"","YES")
 db[19] = new dbRecord(true, "Fuel Supply System","eges3052_S305010104.xml","0",1,"","")
 db[20] = new dbRecord(false, "Fuel Supply System Schematic and Flow","eges3052_18.xml","0",2,"","YES")
 db[21] = new dbRecord(true, "Engine Lubrication System ","eges3052_S305010105.xml","0",1,"","")
 db[22] = new dbRecord(false, "Lubrication System Components and Oil Flow","eges3052_20.xml","0",2,"","YES")
 db[23] = new dbRecord(true, "Cooling System","eges3052_S305010106.xml","0",1,"","")
 db[24] = new dbRecord(false, "Cooling System Components and Flow","eges3052_22.xml","0",2,"","YES")
 db[25] = new dbRecord(true, "Electronic Control System","eges3052_S3050107.xml","0",1,"","")
 db[26] = new dbRecord(false, "Electronic Control System Components","eges3052_24.xml","0",2,"","YES")
 db[27] = new dbRecord(false, "Actuators","eges3052_25.xml","0",2,"","YES")
 db[28] = new dbRecord(false, "Injection Drive Module (IDM)","eges3052_26.xml","0",2,"","YES")
 db[29] = new dbRecord(false, "Engine and Vehicle Sensors","eges3052_27.xml","0",2,"","YES")
 db[30] = new dbRecord(false, "Glow Plug Control System","eges3052_28.xml","0",1,"","YES")
 db[31] = new dbRecord(false, "Inlet Air Heater Control System","eges3052_29.xml","0",1,"","YES")
 db[32] = new dbRecord(true, "Engine and Vehicle Features","eges3052_E3050102.xml","0",0,"","YES")
 db[33] = new dbRecord(true, "Standard Features","eges3052_S305010201.xml","0",1,"","")
 db[34] = new dbRecord(false, "Electronic Governor Control","eges3052_S305010201.xml","0",2,"","YES")
 db[35] = new dbRecord(false, "American Trucking Association (ATA) Datalink ","eges3052_32.xml","0",2,"","YES")
 db[36] = new dbRecord(false, "Service Diagnostics","eges3052_33.xml","0",2,"","YES")
 db[37] = new dbRecord(false, "Event Logging System","eges3052_34.xml","0",2,"","YES")
 db[38] = new dbRecord(false, "Fast Idle","eges3052_35.xml","0",2,"","YES")
 db[39] = new dbRecord(false, "Cold Ambient Protection (CAP)","eges3052_36.xml","0",2,"","YES")
 db[40] = new dbRecord(false, "Engine Warning Protection System (EWPS)","eges3052_37.xml","0",2,"","YES")
 db[41] = new dbRecord(false, "Inlet Air Heater (IAH)","eges3052_38.xml","0",2,"","YES")
 db[42] = new dbRecord(false, "Glow Plugs","eges3052_39.xml","0",2,"","YES")
 db[43] = new dbRecord(false, "Engine Crank Inhibit (ECI)","eges3052_40.xml","0",2,"","YES")
 db[44] = new dbRecord(false, "Cruise Control Switches","eges3052_41.xml","0",2,"","YES")
 db[45] = new dbRecord(true, "Optional Features","eges3052_S305010202.xml","0",1,"","")
 db[46] = new dbRecord(false, "Road Speed Limiting","eges3052_S305010202.xml","0",2,"","YES")
 db[47] = new dbRecord(false, "Reset Service Interval (Optional)","eges3052_43.xml","0",2,"","YES")
 db[48] = new dbRecord(false, "Idle Shutdown Timer (IST)","eges3052_44.xml","0",2,"","YES")
 db[49] = new dbRecord(true, "Diagnostic Software Operation","eges3052_E3050103.xml","0",0,"","YES")
 db[50] = new dbRecord(true, "Diagnostic Trouble Code Detection","eges3052_S305010301.xml","0",1,"","")
 db[51] = new dbRecord(false, "Continuous Monitor","eges3052_47.xml","0",2,"","YES")
 db[52] = new dbRecord(false, "Engine Events","eges3052_48.xml","0",2,"","YES")
 db[53] = new dbRecord(false, "Service Procedure","eges3052_49.xml","0",2,"","YES")
 db[54] = new dbRecord(true, "Diagnostic Trouble Codes ","eges3052_S305010302.xml","0",1,"","")
 db[55] = new dbRecord(false, "Using EST","eges3052_51.xml","0",2,"","YES")
 db[56] = new dbRecord(false, "Using Cruise Switches","eges3052_52.xml","0",2,"","YES")
 db[57] = new dbRecord(true, "Diagnostic Tests","eges3052_S305010303.xml","0",1,"","")
 db[58] = new dbRecord(false, "Key-On Engine-Off Tests","eges3052_54.xml","0",2,"","YES")
 db[59] = new dbRecord(false, "Key-On Engine-Running Tests","eges3052_55.xml","0",2,"","YES")
 db[60] = new dbRecord(false, "Injector Disable Tests","eges3052_56.xml","0",2,"","YES")
 db[61] = new dbRecord(false, "Relative Compression","eges3052_57.xml","0",2,"","YES")
 db[62] = new dbRecord(true, "Reset Service Interval Lamp","eges3052_S305010304.xml","0",1,"","")
 db[63] = new dbRecord(false, "Using EST","eges3052_S305010304.xml","0",2,"","YES")
 db[64] = new dbRecord(false, "Using Cruise Switches (CF)","eges3052_59.xml","0",2,"","YES")
 db[65] = new dbRecord(false, "Using Cruise Switches (Stripped Chassis)","eges3052_60.xml","0",2,"","YES")
 db[66] = new dbRecord(true, "Engine Symptoms Diagnostics","eges3052_E3050104.xml","0",0,"","YES")
 db[67] = new dbRecord(true, "Description","eges3052_S305010401.xml","0",1,"","")
 db[68] = new dbRecord(false, "Service Procedure","eges3052_S305010401.xml","0",2,"","YES")
 db[69] = new dbRecord(true, "Test Procedures","eges3052_S305010402.xml","0",1,"","")
 db[70] = new dbRecord(false, "Combustion Leaks to Coolant","eges3052_65.xml","0",2,"","YES")
 db[71] = new dbRecord(false, "Combustion Leaks to Fuel","eges3052_66.xml","0",2,"","YES")
 db[72] = new dbRecord(false, "Coolant in Lube Oil","eges3052_67.xml","0",2,"","YES")
 db[73] = new dbRecord(false, "Coolant Leak to Exhaust","eges3052_68.xml","0",2,"","YES")
 db[74] = new dbRecord(false, "Coolant Over-Temperature","eges3052_69.xml","0",2,"","YES")
 db[75] = new dbRecord(false, "ECM Reset/IDM Reset (Intermittent Engine Stumble)","eges3052_70.xml","0",2,"","YES")
 db[76] = new dbRecord(false, "Excessive Fuel Consumption","eges3052_71.xml","0",2,"","YES")
 db[77] = new dbRecord(false, "Fuel in Coolant","eges3052_72.xml","0",2,"","YES")
 db[78] = new dbRecord(false, "Fuel In Lube Oil","eges3052_73.xml","0",2,"","YES")
 db[79] = new dbRecord(false, "Water In Fuel (WIF)","eges3052_74.xml","0",2,"","YES")
 db[80] = new dbRecord(false, "Low Oil Pressure","eges3052_75.xml","0",2,"","YES")
 db[81] = new dbRecord(false, "Rough Idle","eges3052_76.xml","0",2,"","YES")
 db[82] = new dbRecord(false, "Smoke","eges3052_77.xml","0",2,"","YES")
 db[83] = new dbRecord(true, "Hard Start and No Start Diagnostics","eges3052_E3050105.xml","0",0,"","YES")
 db[84] = new dbRecord(false, "Description","eges3052_E3050105.xml","0",1,"","YES")
 db[85] = new dbRecord(false, "Diagnostic Form Information EGED-315","eges3052_79.xml","0",1,"","YES")
 db[86] = new dbRecord(true, "Test Procedures","eges3052_S305010503.xml","0",1,"","")
 db[87] = new dbRecord(false, "1. Initial Ignition Key ON (Do not start)","eges3052_S305010503.xml","0",2,"","YES")
 db[88] = new dbRecord(false, "2. Engine Cranking","eges3052_81.xml","0",2,"","YES")
 db[89] = new dbRecord(false, "3. Diagnostic Trouble Codes","eges3052_82.xml","0",2,"","YES")
 db[90] = new dbRecord(false, "4. KOEO Standard Test","eges3052_83.xml","0",2,"","YES")
 db[91] = new dbRecord(false, "5. KOEO Injector Test","eges3052_84.xml","0",2,"","YES")
 db[92] = new dbRecord(false, "6. Electronic Service Tool (EST) Data List","eges3052_85.xml","0",2,"","YES")
 db[93] = new dbRecord(false, "7. Engine Systems","eges3052_86.xml","0",2,"","YES")
 db[94] = new dbRecord(false, "8. Engine Oil","eges3052_87.xml","0",2,"","YES")
 db[95] = new dbRecord(false, "9. Intake and Exhaust Restriction","eges3052_88.xml","0",2,"","YES")
 db[96] = new dbRecord(false, "10. Fuel Supply System","eges3052_89.xml","0",2,"","YES")
 db[97] = new dbRecord(false, "11. Main Power Relay Voltage to ECM","eges3052_90.xml","0",2,"","YES")
 db[98] = new dbRecord(false, "12. Main Power Relay Voltage to IDM","eges3052_91.xml","0",2,"","YES")
 db[99] = new dbRecord(false, "13. Low ICP System Pressure","eges3052_92.xml","0",2,"","YES")
 db[100] = new dbRecord(false, "14. Glow Plug System","eges3052_93.xml","0",2,"","YES")
 db[101] = new dbRecord(false, "15. Inlet Air Heater System ","eges3052_94.xml","0",2,"","YES")
 db[102] = new dbRecord(true, "Performance Diagnostics","eges3052_E3050106.xml","0",0,"","YES")
 db[103] = new dbRecord(false, "Description","eges3052_E3050106.xml","0",1,"","YES")
 db[104] = new dbRecord(false, "Diagnostic Form EGED-315 Information","eges3052_96.xml","0",1,"","YES")
 db[105] = new dbRecord(true, "Test Procedures","eges3052_S305010603.xml","0",1,"","")
 db[106] = new dbRecord(false, "1. Diagnostic Trouble Codes","eges3052_98.xml","0",2,"","YES")
 db[107] = new dbRecord(false, "2. KOEO Standard Test","eges3052_99.xml","0",2,"","YES")
 db[108] = new dbRecord(false, "3. KOEO Injector Test","eges3052_100.xml","0",2,"","YES")
 db[109] = new dbRecord(false, "4. Engine Oil","eges3052_101.xml","0",2,"","YES")
 db[110] = new dbRecord(false, "5. Fuel Supply System","eges3052_102.xml","0",2,"","YES")
 db[111] = new dbRecord(false, "6. Intake and Exhaust Restriction ","eges3052_103.xml","0",2,"","YES")
 db[112] = new dbRecord(false, "7. KOER Standard Test","eges3052_104.xml","0",2,"","YES")
 db[113] = new dbRecord(false, "8. Injection Control Pressure","eges3052_105.xml","0",2,"","YES")
 db[114] = new dbRecord(false, "9. Injector Disable","eges3052_106.xml","0",2,"","YES")
 db[115] = new dbRecord(false, "10. Relative Compression Test","eges3052_107.xml","0",2,"","YES")
 db[116] = new dbRecord(false, "11. Air Management","eges3052_108.xml","0",2,"","YES")
 db[117] = new dbRecord(false, "12. Boost Control","eges3052_109.xml","0",2,"","YES")
 db[118] = new dbRecord(false, "13. Torque Converter Stall","eges3052_110.xml","0",2,"","YES")
 db[119] = new dbRecord(false, "14. Crankcase Pressure","eges3052_111.xml","0",2,"","YES")
 db[120] = new dbRecord(false, "15. Test Drive (Full load, rated speed)","eges3052_112.xml","0",2,"","YES")
 db[121] = new dbRecord(true, "Electronic Control Systems Diagnostics","eges3052_E3050107.xml","0",0,"","YES")
 db[122] = new dbRecord(true, "Description","eges3052_S305010701.xml","0",1,"","")
 db[123] = new dbRecord(false, "Service Procedure","eges3052_S305010701.xml","0",2,"","YES")
 db[124] = new dbRecord(true, "EGED 310-1 Diagnostic Form","eges3052_S305010702.xml","0",1,"","")
 db[125] = new dbRecord(false, "Electronic Control System Diagnostics","eges3052_S305010702.xml","0",2,"","YES")
 db[126] = new dbRecord(true, "Sensor and Actuator Locations","eges3052_S305010703.xml","0",1,"","")
 db[127] = new dbRecord(false, "Engine Mounted Components","eges3052_S305010703.xml","0",2,"","YES")
 db[128] = new dbRecord(false, "Vehicle Mounted Components","eges3052_117.xml","0",2,"","YES")
 db[129] = new dbRecord(true, "Diagnostic Procedures for Sensors and Actuators","eges3052_S305010704.xml","0",1,"","")
 db[130] = new dbRecord(false, "Pin Grip Inspection","eges3052_S305010704.xml","0",2,"","YES")
 db[131] = new dbRecord(false, "V<subscript>REF</subscript> Tests using MasterDiagnostics&#174;","eges3052_119.xml","0",2,"","YES")
 db[132] = new dbRecord(false, "Temperature Sensor Tests using MasterDiagnostics&#174;","eges3052_120.xml","0",2,"","YES")
 db[133] = new dbRecord(true, "Pin-Point Diagnostics","eges3052_S305010705.xml","0",1,"","")
 db[134] = new dbRecord(false, "Voltage Checks - Connectors","eges3052_S305010705.xml","0",2,"","YES")
 db[135] = new dbRecord(false, "Voltage Checks - Connector to Ground","eges3052_122.xml","0",2,"","YES")
 db[136] = new dbRecord(false, "Harness Resistance Checks","eges3052_123.xml","0",2,"","YES")
 db[137] = new dbRecord(false, "Operational Voltage Checks","eges3052_124.xml","0",2,"","YES")
 db[138] = new dbRecord(true, "Circuit Diagnostics","eges3052_S305010706.xml","0",1,"","")
 db[139] = new dbRecord(false, "AMS (Air Management System)","eges3052_126.xml","0",2,"","YES")
 db[140] = new dbRecord(false, "APS/IVS (Accelerator Pedal Position Sensor and Idle Validation Switch) ","eges3052_127.xml","0",2,"","YES")
 db[141] = new dbRecord(false, "Service Procedure","eges3052_128.xml","0",2,"","YES")
 db[142] = new dbRecord(false, "ATA (American Trucking Association) Datalink","eges3052_129.xml","0",2,"","YES")
 db[143] = new dbRecord(false, "BAP (Barometric Absolute Pressure) Sensor","eges3052_130.xml","0",2,"","YES")
 db[144] = new dbRecord(false, "BCS (Boost Control Solenoid) Assembly","eges3052_131.xml","0",2,"","YES")
 db[145] = new dbRecord(false, "Brake Switch Circuits ","eges3052_132.xml","0",2,"","YES")
 db[146] = new dbRecord(false, "CAN (Controller Area Network) Communications","eges3052_133.xml","0",2,"","YES")
 db[147] = new dbRecord(false, "CKP (Crankshaft Position) Sensor","eges3052_134.xml","0",2,"","YES")
 db[148] = new dbRecord(false, "CMP (Camshaft Position) Sensor","eges3052_135.xml","0",2,"","YES")
 db[149] = new dbRecord(false, "ECI (Engine Crank Inhibit) System","eges3052_136.xml","0",2,"","YES")
 db[150] = new dbRecord(false, "ECL Sensor (Engine Coolant Level)","eges3052_137.xml","0",2,"","YES")
 db[151] = new dbRecord(false, "ECM (Electronic Control Module) Self-Diagnostics","eges3052_138.xml","0",2,"","YES")
 db[152] = new dbRecord(false, "ECM/IDM (Electronic Control Module and Injector Driver Module) Communications ","eges3052_139.xml","0",2,"","YES")
 db[153] = new dbRecord(false, "ECM PWR (Electronic Control Module Power)","eges3052_140.xml","0",2,"","YES")
 db[154] = new dbRecord(false, "ECT (Engine Coolant Temperature) Sensor","eges3052_141.xml","0",2,"","YES")
 db[155] = new dbRecord(false, "EFAN Control (Engine Fan Control)","eges3052_142.xml","0",2,"","YES")
 db[156] = new dbRecord(false, "EGR (Exhaust Gas Recirculation) Control","eges3052_143.xml","0",2,"","YES")
 db[157] = new dbRecord(false, "EOP (Engine Oil Pressure) Switch","eges3052_144.xml","0",2,"","YES")
 db[158] = new dbRecord(false, "EOT (Engine Oil Temperature) Sensor","eges3052_145.xml","0",2,"","YES")
 db[159] = new dbRecord(false, "EWPS (Engine Warning and Protection System)","eges3052_146.xml","0",2,"","YES")
 db[160] = new dbRecord(false, "GPC (Glow Plug Control) Circuit","eges3052_147.xml","0",2,"","YES")
 db[161] = new dbRecord(false, "HFCM (Horizontal Fuel Conditioning Module) Fuel Pump ","eges3052_148.xml","0",2,"","YES")
 db[162] = new dbRecord(false, "IAH (Inlet Air Heater) Circuit","eges3052_149.xml","0",2,"","YES")
 db[163] = new dbRecord(false, "IAT (Intake Air Temperature) Sensor","eges3052_150.xml","0",2,"","YES")
 db[164] = new dbRecord(false, "ICP (Injection Control Pressure) Sensor","eges3052_151.xml","0",2,"","YES")
 db[165] = new dbRecord(false, "ICP (Injection Control Pressure) System","eges3052_152.xml","0",2,"","YES")
 db[166] = new dbRecord(false, "IDM PWR (Injector Drive Module) Power","eges3052_153.xml","0",2,"","YES")
 db[167] = new dbRecord(false, "INJ (Injector Drive) Circuits","eges3052_154.xml","0",2,"","YES")
 db[168] = new dbRecord(false, "IPR (Injection Pressure Regulator)","eges3052_155.xml","0",2,"","YES")
 db[169] = new dbRecord(false, "IST (Idle Shutdown Timer) System","eges3052_156.xml","0",2,"","YES")
 db[170] = new dbRecord(false, "MAF (Mass Air Flow) Sensor","eges3052_157.xml","0",2,"","YES")
 db[171] = new dbRecord(false, "MAP (Manifold Absolute Pressure) Sensor","eges3052_158.xml","0",2,"","YES")
 db[172] = new dbRecord(false, "MAT (Manifold Air Temperature) Sensor","eges3052_159.xml","0",2,"","YES")
 db[173] = new dbRecord(false, "SCCS (Speed Control Command Switches)","eges3052_160.xml","0",2,"","YES")
 db[174] = new dbRecord(false, "Tachometer Output Circuit","eges3052_161.xml","0",2,"","YES")
 db[175] = new dbRecord(false, "V<subscript>REF</subscript> (Reference Voltage)","eges3052_162.xml","0",2,"","YES")
 db[176] = new dbRecord(false, "WIF (Water In Fuel) Sensor","eges3052_163.xml","0",2,"","YES")
 db[177] = new dbRecord(true, "Diagnostic Tools and Accessories","eges3052_E3050108.xml","0",0,"","YES")
 db[178] = new dbRecord(true, "Tools and Accessories","eges3052_S305010801.xml","0",1,"","")
 db[179] = new dbRecord(false, "EZ-Tech&#174;  Electronic Service Tool (EST)","eges3052_S305010801.xml","0",2,"","YES")
 db[180] = new dbRecord(false, "EZ-Tech&#174;  Interface Kit","eges3052_166.xml","0",2,"","YES")
 db[181] = new dbRecord(false, "MasterDiagnostics&#174;  Software","eges3052_167.xml","0",2,"","YES")
 db[182] = new dbRecord(false, "Digital Multimeter (Fluke 88&#8482;)","eges3052_168.xml","0",2,"","YES")
 db[183] = new dbRecord(false, "Amp Clamp","eges3052_169.xml","0",2,"","YES")
 db[184] = new dbRecord(false, "96-Pin Breakout Box - DLC II","eges3052_170.xml","0",2,"","YES")
 db[185] = new dbRecord(false, "Breakout Harness Kit","eges3052_171.xml","0",2,"","YES")
 db[186] = new dbRecord(false, "3-Banana Plug Harness","eges3052_172.xml","0",2,"","YES")
 db[187] = new dbRecord(false, "12-Pin Breakout Harness","eges3052_173.xml","0",2,"","YES")
 db[188] = new dbRecord(false, "500-Ohm Resistor Harness","eges3052_174.xml","0",2,"","YES")
 db[189] = new dbRecord(false, "Actuator Breakout Harness ","eges3052_175.xml","0",2,"","YES")
 db[190] = new dbRecord(false, "APS/IVS Sensor Breakout Harness","eges3052_176.xml","0",2,"","YES")
 db[191] = new dbRecord(false, "Pressure Sensor Breakout Harness ","eges3052_177.xml","0",2,"","YES")
 db[192] = new dbRecord(false, "Relay Breakout Harness","eges3052_178.xml","0",2,"","YES")
 db[193] = new dbRecord(false, "Relay Breakout Harness","eges3052_179.xml","0",2,"","YES")
 db[194] = new dbRecord(false, "Temperature Sensor Breakout Harness","eges3052_180.xml","0",2,"","YES")
 db[195] = new dbRecord(false, "MAF/IAT Sensor Breakout Harness","eges3052_181.xml","0",2,"","YES")
 db[196] = new dbRecord(false, "EGR Valve Breakout harness","eges3052_182.xml","0",2,"","YES")
 db[197] = new dbRecord(false, "Terminal Test Adapter Kit","eges3052_183.xml","0",2,"","YES")
 db[198] = new dbRecord(false, "Gauge Bar Tool","eges3052_184.xml","0",2,"","YES")
 db[199] = new dbRecord(false, "Fuel Pressure Gauge","eges3052_185.xml","0",2,"","YES")
 db[200] = new dbRecord(false, "Slack Tube Manometer","eges3052_186.xml","0",2,"","YES")
 db[201] = new dbRecord(false, "Fuel/Oil Pressure Test Coupler ","eges3052_187.xml","0",2,"","YES")
 db[202] = new dbRecord(false, "Fuel Pressure Test Fitting","eges3052_188.xml","0",2,"","YES")
 db[203] = new dbRecord(false, "ICP System Test Adapter ","eges3052_189.xml","0",2,"","YES")
 db[204] = new dbRecord(false, "ICP Adapter/Plug Kit ","eges3052_190.xml","0",2,"","YES")
 db[205] = new dbRecord(false, "Case-To-Head Tube Removal Tool","eges3052_191.xml","0",2,"","YES")
 db[206] = new dbRecord(false, "Intake Manifold Pressure Test Plug (EGR Valve)","eges3052_192.xml","0",2,"","YES")
 db[207] = new dbRecord(false, "EGR Cooler Test Plates","eges3052_193.xml","0",2,"","YES")
 db[208] = new dbRecord(false, "Fuel Inlet Restriction Adapter","eges3052_194.xml","0",2,"","YES")
 db[209] = new dbRecord(false, "Fuel Line Test Adapter","eges3052_195.xml","0",2,"","YES")
 db[210] = new dbRecord(false, "Fuel Pressure Test Adapter","eges3052_196.xml","0",2,"","YES")
 db[211] = new dbRecord(false, "In-line Shutoff Valve","eges3052_197.xml","0",2,"","YES")
 db[212] = new dbRecord(false, "Vacuum Pump and Gauge","eges3052_198.xml","0",2,"","YES")
 db[213] = new dbRecord(false, "Crankcase Pressure Test Adapter","eges3052_199.xml","0",2,"","YES")
 db[214] = new dbRecord(false, "Oil Fill Extension","eges3052_200.xml","0",2,"","YES")
 db[215] = new dbRecord(false, "Cylinder Compression Gauge","eges3052_201.xml","0",2,"","YES")
 db[216] = new dbRecord(false, "Compression Test Adapter","eges3052_202.xml","0",2,"","YES")
 db[217] = new dbRecord(true, "Electronic Circuit Testing","eges3052_S305010802.xml","0",1,"","")
 db[218] = new dbRecord(false, "Electrical Theory","eges3052_204.xml","0",2,"","YES")
 db[219] = new dbRecord(false, "Using the Digital MultiMeter","eges3052_205.xml","0",2,"","YES")
 db[220] = new dbRecord(false, "Troubleshooting","eges3052_206.xml","0",2,"","YES")
 db[221] = new dbRecord(true, "Abbreviations and Acronyms","eges3052_E3050109.xml","0",0,"","YES")
 db[222] = new dbRecord(true, "Abbreviations and Acronyms","eges3052_208.xml","0",1,"","")
 db[223] = new dbRecord(false, "Service Procedure","eges3052_208.xml","0",2,"","YES")
 db[224] = new dbRecord(true, "Terminology","eges3052_E3050110.xml","0",0,"","YES")
 db[225] = new dbRecord(true, "Terminology","eges3052_S30510001.xml","0",1,"","")
 db[226] = new dbRecord(false, "Service Procedure","eges3052_S30510001.xml","0",2,"","YES")
 db[227] = new dbRecord(true, "Appendix A: VT 275 Performance Specifications","eges3052_E3050111.xml","0",0,"","YES")
 db[228] = new dbRecord(false, "International&#174; VT 275 Diesel Engine (General information)","eges3052_E3050111.xml","0",1,"","YES")
 db[229] = new dbRecord(false, "International&#174; VT 275 Diesel Engine (CF)","eges3052_213.xml","0",1,"","YES")
 db[230] = new dbRecord(false, "International&#174; VT 275 Diesel Engine (Stripped Chassis)","eges3052_214.xml","0",1,"","YES")
 db[231] = new dbRecord(true, "Appendix B: Diagnostic Trouble Code Index","eges3052_E3050112.xml","0",0,"","YES")
 db[232] = new dbRecord(true, "Diagnostic Trouble Code Index","eges3052_S305011201.xml","0",1,"","")
 db[233] = new dbRecord(false, "Diagnostic Trouble Code Index","eges3052_FC.xml","0",2,"","YES")
 db[234] = new dbRecord(true, "Appendix C: Technical Service Information (TSI)","eges3052_E3050113.xml","0",0,"","YES")
 db[235] = new dbRecord(false, "Description","eges3052_219.xml","0",1,"","YES")
// AHJO - In the following function the parameter 'occurs' was added Oct/Nov 2001
function dbRecord(mother,display,URL,occurs,indent,statusMsg,link){
	this.mother = mother   // is this item a parent?
	this.display = display // text to display
	this.URL = URL         // used to link to TOC
	this.occurances =  occurs  // how many times does search occur - THIS LINE WAS ADDED by AHJO
	this.indent = indent   // how many levels nested?
	this.statusMsg = statusMsg  // descriptive text for status bar 
	this.link = link  //  link tied to text; if empty string, item appears as straight text
	return this
}
// pre-load all images into cache
var collapsedImg = new Image(widgetWidth,widgetHeight)
collapsedImg.src = collapsedWidget
var expandedImg = new Image(widgetWidth,widgetHeight)
expandedImg.src = expandedWidget
var endpointImg = new Image(widgetWidth,widgetHeight)
endpointImg.src = endpointWidget
// mainframeURL = parent.mainframe.document.URL // get URL of mainframe 
// ** functions that get and set persistent cookie data **
// set cookie data
var mycookie = document.cookie
function setCurrState(setting) {
        mycookie = document.cookie = "currState=" + escape(setting)
}
// retrieve cookie data
function getCurrState() {
        var label = "currState="
        var labelLen = label.length
        var cLen = mycookie.length
        var i = 0
        while (i < cLen) {
                var j = i + labelLen
                if (mycookie.substring(i,j) == label) {
                        var cEnd = mycookie.indexOf(";",j)
                        if (cEnd ==     -1) {
                                cEnd = mycookie.length
                       }
                        return unescape(mycookie.substring(j,cEnd))
                }
               i++
       }
        return ""
}
// **function that updates persistent storage of state**
// toggles an outline mother entry, storing new value in the cookie
function toggle(n) {
	if (n != 0) {
		var newString = ""
		var currState = getCurrState() // of whole outline
		var expanded = currState.charAt(n-1) // of clicked item
		newString += currState.substring(0,n-1)
		newString += expanded ^ 1 // Bitwise XOR clicked item
		newString += currState.substring(n,currState.length)
		setCurrState(newString) // write new state back to cookie
	}
}
// **functions used in assembling updated outline**
// returns the proper GIF file name for each entry's control
function getGIF(n) {
	var mom = db[n].mother  // is entry a parent?
	var expanded = getCurrState().charAt(n-1) // of clicked item
	if (!mom) {
		return endpointWidget
	} else {
		if (expanded == 1) {
			return expandedWidget
		}
	}
	return collapsedWidget
}
// returns the proper status line text based on the icon style
function getGIFStatus(n) {
	var mom = db[n].mother  // is entry a parent
	var expanded = getCurrState().charAt(n-1) // of rolled item
	if (!mom) {
		return "No further items"
	} else {
		if (expanded == 1) {
			return "Click to collapse nested items"
		}
	}
	return "Click to expand nested items"
}
// initialize 'current state' storage field
if (getCurrState() == "" || getCurrState().length != (db.length-1)) {
	initState = ""
	for (i = 1; i < db.length; i++) {
		initState += "0"
	}
	setCurrState(initState)
}
// end -->

    </SCRIPT>
</HEAD>
<BODY>
<h3>VT 275 Engine Diagnostics Manual</h3>
<SCRIPT LANGUAGE="JavaScript1.1">
<!-- start
// build new outline based on the values of the cookie
// and data points in the outline data array.
// This fires each time the user clicks on a control,
// because the HREF for each one reloads the current document.
var newOutline = ""
var prevIndentDisplayed = 0
var showMyDaughter = 0
// cycle through each entry in the outline array
for (var i = 1; i < db.length; i++) {
	var theGIF = getGIF(i)				// get the image
	var theGIFStatus = getGIFStatus(i)  // get the status message
	var currIndent = db[i].indent		// get the indent level
	var expanded = getCurrState().charAt(i-1) // current state
        db[i].currentrow = ""

	if (currIndent == 0 || currIndent == 1 || db[i].currentrow == "currentrow" || currIndent <= prevIndentDisplayed || (showMyDaughter == 1 && (currIndent - prevIndentDisplayed == 1))) {
 // Phil added the if to remove the image from before the root element
         if (currIndent != 0) {
			newOutline += "<SPAN class=\"" + db[i].currentrow + "\" style=\" position:relative;left:" + (indentPixels * currIndent) + "px;width:200px\"><A HREF=\"javascript:history.go(0)\" onMouseOver=\"window.status=\'" + theGIFStatus + "\';return true;\" onClick=\"toggle(" + i + ");return " + "\">"
			newOutline += "<IMG ALIGN=TOP SRC=\"" + theGIF + "\" HEIGHT=" + widgetHeight + " WIDTH=" + widgetWidth + " BORDER=0></A>"
			newOutline += "<SPAN title=\"" + db[i].display + "\" style=\"width:" + (200-widgetWidth) + "px\">"
			}
			if (db[i].link == "" || db[i].link == null) {
				newOutline += " <small'>" +  db[i].display + "</small></SPAN></SPAN>" + "<BR>"	// no link, just a listed item
			} else {
                 if (db[i].occurances > 0)	{
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><small>" + db[i].display + "&nbsp;&nbsp;("
 + db[i].occurances + ")</small></A></SPAN></SPAN><BR>"
			} else {
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><small'>" + db[i].display + "</small></A></SPAN></SPAN><BR>"
			}
			}
		prevIndentDisplayed = currIndent
		showMyDaughter = expanded
		if (db.length > 25) {
			document.write(newOutline)
			newOutline = ""
		}
	}
}
document.write(newOutline)
// end -->

</SCRIPT>
</BODY>
</html>
