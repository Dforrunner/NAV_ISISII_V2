<HTML>
<HEAD>
    <TITLE>Service Section TOC</TITLE>
    <LINK href="../style.css" rel="STYLESHEET" type="text/css">
    <SCRIPT LANGUAGE="JavaScript1.1">
<!-- begin hiding
var indentPixels = 15
var collapsedWidget = "../images/plus.gif"
var expandedWidget = "../images/minus.gif"
var endpointWidget = "../images/end.gif"
var widgetWidth = 17
var widgetHeight = 18
var displayTarget = "mainframe"
// AHJO - In the folowing db the fourth field (after the xml file name) is new and set to "0" 
var db = new Array()
 db[1] = new dbRecord(true, "T 444E Diesel Engine Diagnostics (NAVPAK) (1997)","e190_1.xml","0",0,"","YES")
 db[2] = new dbRecord(true, "Section 1.1: Fuel Supply System","e190_E19001.xml","0",0,"","YES")
 db[3] = new dbRecord(true, "Fuel System Description","e190_3.xml","0",1,"","YES")
 db[4] = new dbRecord(false, "Fuel Supply Pump","e190_4.xml","0",2,"","YES")
 db[5] = new dbRecord(false, "Fuel System Operation","e190_5.xml","0",2,"","YES")
 db[6] = new dbRecord(true, "Section 1.2: Injection Control Pressure System","e190_E19002.xml","0",0,"","YES")
 db[7] = new dbRecord(true, "Injection Control System Operation","e190_7.xml","0",1,"","YES")
 db[8] = new dbRecord(false, "Injection Pressure Control","e190_F1900202.xml","0",2,"","YES")
 db[9] = new dbRecord(false, "Ipr Valve Operation","e190_F1900205.xml","0",2,"","YES")
 db[10] = new dbRecord(true, "Section 1.3: Heui Injector Operation","e190_E19003.xml","0",0,"","YES")
 db[11] = new dbRecord(true, "Injector Operation","e190_11.xml","0",1,"","YES")
 db[12] = new dbRecord(false, "Split-shot Injectors","e190_F1900302.xml","0",2,"","YES")
 db[13] = new dbRecord(true, "Section 1.4: Exhaust Back Pressure Device","e190_E19004.xml","0",0,"","YES")
 db[14] = new dbRecord(true, "Exhaust Back Pressure Device (optional)","e190_14.xml","0",1,"","")
 db[15] = new dbRecord(false, "DESCRIPTION","e190_14.xml","0",2,"","YES")
 db[16] = new dbRecord(false, "Operation","e190_F1900402.xml","0",2,"","YES")
 db[17] = new dbRecord(true, "Section 1.5: Electronic Control Module","e190_E19005.xml","0",0,"","YES")
 db[18] = new dbRecord(true, "Operation And Function","e190_17.xml","0",1,"","YES")
 db[19] = new dbRecord(false, "I. Reference Voltage","e190_F1900502.xml","0",2,"","YES")
 db[20] = new dbRecord(false, "Ii. Signal Conditioner","e190_F1900504.xml","0",2,"","YES")
 db[21] = new dbRecord(false, "Iii. Microprocessor","e190_20.xml","0",2,"","YES")
 db[22] = new dbRecord(false, "Iv. Actuator Control","e190_F1900507.xml","0",2,"","YES")
 db[23] = new dbRecord(true, "Section 1.6: Sensor Operation","e190_E19006.xml","0",0,"","YES")
 db[24] = new dbRecord(true, "Input Signals","e190_23.xml","0",1,"","YES")
 db[25] = new dbRecord(false, "REFERENCE VOLTAGE SENSORS","e190_23.xml","0",2,"","YES")
 db[26] = new dbRecord(true, "Types Of Sensors","e190_24.xml","0",1,"","")
 db[27] = new dbRecord(false, "THERMISTOR","e190_24.xml","0",2,"","YES")
 db[28] = new dbRecord(false, "Potentiometer","e190_F1900603.xml","0",2,"","YES")
 db[29] = new dbRecord(false, "Variable Capacitance Sensor","e190_F1900605.xml","0",2,"","YES")
 db[30] = new dbRecord(false, "Hall Effect Sensor","e190_F1900607.xml","0",2,"","YES")
 db[31] = new dbRecord(false, "Magnetic Pickup","e190_F1900609.xml","0",2,"","YES")
 db[32] = new dbRecord(false, "Switch Sensors","e190_F1900611.xml","0",2,"","YES")
 db[33] = new dbRecord(true, "Section 1.7: Vehicle Features","e190_E19007.xml","0",0,"","YES")
 db[34] = new dbRecord(true, "Standard Features","e190_31.xml","0",1,"","")
 db[35] = new dbRecord(false, "ELECTRONIC GOVERNOR CONTROL","e190_31.xml","0",2,"","YES")
 db[36] = new dbRecord(false, "American Trucking Association Data Link Provisions","e190_32.xml","0",2,"","YES")
 db[37] = new dbRecord(false, "Service Diagnostics","e190_33.xml","0",2,"","YES")
 db[38] = new dbRecord(false, "Electronic Speedometer And Tachometer Provisions","e190_34.xml","0",2,"","YES")
 db[39] = new dbRecord(false, "Cold Idle Advance","e190_35.xml","0",2,"","YES")
 db[40] = new dbRecord(false, "Cold Ambient Protection System (cap)","e190_36.xml","0",2,"","YES")
 db[41] = new dbRecord(false, "Glow Plug Assisted Start","e190_37.xml","0",2,"","YES")
 db[42] = new dbRecord(false, "Engine Over Temperature Protection System (coolant Temperature Compensation)","e190_38.xml","0",2,"","YES")
 db[43] = new dbRecord(false, "Event Logging System","e190_39.xml","0",2,"","YES")
 db[44] = new dbRecord(false, "Engine Crank Inhibit","e190_40.xml","0",2,"","YES")
 db[45] = new dbRecord(false, "Electronic Accelerator Pedal","e190_41.xml","0",2,"","YES")
 db[46] = new dbRecord(false, "Change Oil Light (col)","e190_42.xml","0",2,"","YES")
 db[47] = new dbRecord(true, "Optional Features","e190_43.xml","0",1,"","")
 db[48] = new dbRecord(false, "Cruise Control","e190_F1900702.xml","0",2,"","YES")
 db[49] = new dbRecord(true, "Throttle Control For Pto Operation","e190_45.xml","0",1,"","YES")
 db[50] = new dbRecord(false, "Road Speed Limiting/governor","e190_F1900705.xml","0",2,"","YES")
 db[51] = new dbRecord(false, "Exhaust Back Pressure Engine Warm-up System","e190_F1900706.xml","0",2,"","YES")
 db[52] = new dbRecord(false, "Body Equipment Manufacturers Provisions","e190_F1900707.xml","0",2,"","YES")
 db[53] = new dbRecord(false, "Engine Warning System","e190_F1900708.xml","0",2,"","YES")
 db[54] = new dbRecord(false, "Engine Shutdown System","e190_50.xml","0",1,"","YES")
 db[55] = new dbRecord(false, "Idle Shutdown","e190_51.xml","0",1,"","YES")
 db[56] = new dbRecord(false, "Hydraulic Pressure Governor","e190_52.xml","0",1,"","YES")
 db[57] = new dbRecord(true, "Section 1.8: Diagnostic Software Self Test Operation","e190_E19008.xml","0",0,"","YES")
 db[58] = new dbRecord(false, "DIAGNOSTIC SOFTWARE TEST CHART","e190_E19008.xml","0",1,"","YES")
 db[59] = new dbRecord(true, "Continuous Self Test","e190_54.xml","0",1,"","")
 db[60] = new dbRecord(false, "CONTINUOUS MONITOR","e190_54.xml","0",2,"","YES")
 db[61] = new dbRecord(true, "Operator On Demand Tests Engine Off","e190_55.xml","0",1,"","")
 db[62] = new dbRecord(false, "STANDARD TEST (KOEO TEST)","e190_55.xml","0",2,"","YES")
 db[63] = new dbRecord(false, "Injector \"buzz\" Test (engine Off)","e190_F1900802.xml","0",2,"","YES")
 db[64] = new dbRecord(false, "Output State Test (engine Off)","e190_F1900803.xml","0",2,"","YES")
 db[65] = new dbRecord(true, "Operator On Demand Tests","e190_58.xml","0",1,"","")
 db[66] = new dbRecord(false, "STANDARD TEST (ENGINE RUNNING)","e190_58.xml","0",2,"","YES")
 db[67] = new dbRecord(false, "Test Procedure","e190_59.xml","0",2,"","YES")
 db[68] = new dbRecord(true, "Injector \"cylinder Contribution\" Test (engine Running)","e190_60.xml","0",1,"","YES")
 db[69] = new dbRecord(false, "TEST PROCEDURE","e190_60.xml","0",2,"","YES")
 db[70] = new dbRecord(true, "Wiggle Test","e190_61.xml","0",1,"","YES")
 db[71] = new dbRecord(false, "TEST PROCEDURE","e190_61.xml","0",2,"","YES")
 db[72] = new dbRecord(true, "Section 2.1 Diagnostic Forms","e190_E19009.xml","0",0,"","YES")
 db[73] = new dbRecord(false, "INTRODUCTION","e190_E19009.xml","0",1,"","YES")
 db[74] = new dbRecord(false, "Instructions","e190_63.xml","0",1,"","YES")
 db[75] = new dbRecord(false, "Instructions For Engine Diagnostic Forms","e190_64.xml","0",1,"","YES")
 db[76] = new dbRecord(true, "Section 2.2: Hard Start/no Start Diagnostics","e190_E19010.xml","0",0,"","YES")
 db[77] = new dbRecord(false, "INTRODUCTION","e190_E19010.xml","0",1,"","YES")
 db[78] = new dbRecord(false, "Hard Start No/start And Performance Diagnostic Form Eged-195 (front Side)","e190_66.xml","0",1,"","YES")
 db[79] = new dbRecord(false, "Hard Start No/start And Performance Diagnostic Form Eged-195 (rear Side)","e190_67.xml","0",1,"","YES")
 db[80] = new dbRecord(true, "T 444e Engine","e190_68.xml","0",1,"","")
 db[81] = new dbRecord(false, "Sufficient Clean Fuel","e190_69.xml","0",2,"","YES")
 db[82] = new dbRecord(false, "Visual Inspection","e190_70.xml","0",2,"","YES")
 db[83] = new dbRecord(false, "Check Engine Oil Level","e190_71.xml","0",2,"","YES")
 db[84] = new dbRecord(false, "Intake/exhaust Restriction","e190_72.xml","0",2,"","YES")
 db[85] = new dbRecord(false, "Est Tool-fault Codes","e190_73.xml","0",2,"","YES")
 db[86] = new dbRecord(false, "Est Tool-engine Off Tests","e190_74.xml","0",2,"","YES")
 db[87] = new dbRecord(false, "Est-injector \"buzz Test\"","e190_75.xml","0",2,"","YES")
 db[88] = new dbRecord(false, "Sti-button Flash Codes","e190_76.xml","0",2,"","YES")
 db[89] = new dbRecord(false, "Est Tool-data List","e190_77.xml","0",2,"","YES")
 db[90] = new dbRecord(false, "Ecm Voltage","e190_78.xml","0",2,"","YES")
 db[91] = new dbRecord(false, "Engine Cranking Rpm","e190_79.xml","0",2,"","YES")
 db[92] = new dbRecord(false, "Injection Control Pressure","e190_80.xml","0",2,"","YES")
 db[93] = new dbRecord(false, "High Pressure Leakage Tests","e190_81.xml","0",2,"","YES")
 db[94] = new dbRecord(false, "Icp Leakage Test","e190_82.xml","0",2,"","YES")
 db[95] = new dbRecord(true, "Section 2.3: Performance Diagnostics","e190_E19011.xml","0",0,"","YES")
 db[96] = new dbRecord(true, "T 444e Engine","e190_84.xml","0",1,"","")
 db[97] = new dbRecord(false, "Check Engine Oil Level","e190_85.xml","0",2,"","YES")
 db[98] = new dbRecord(false, "Sufficient Fuel/pressure","e190_86.xml","0",2,"","YES")
 db[99] = new dbRecord(false, "Transfer Pump Restriction","e190_87.xml","0",2,"","YES")
 db[100] = new dbRecord(false, "Est Tool-fault Codes","e190_88.xml","0",2,"","YES")
 db[101] = new dbRecord(false, "Est Tool-engine Off Tests","e190_89.xml","0",2,"","YES")
 db[102] = new dbRecord(false, "Est-injector \"buzz Test\"","e190_90.xml","0",2,"","YES")
 db[103] = new dbRecord(false, "Sti Button-flash Codes","e190_91.xml","0",2,"","YES")
 db[104] = new dbRecord(false, "Intake Restriction","e190_92.xml","0",2,"","YES")
 db[105] = new dbRecord(false, "Exhaust Restriction","e190_93.xml","0",2,"","YES")
 db[106] = new dbRecord(false, "Est-engine Running Test","e190_94.xml","0",2,"","YES")
 db[107] = new dbRecord(false, "Est Tool-injector Test","e190_95.xml","0",2,"","YES")
 db[108] = new dbRecord(false, "Fuel Pressure (full Load)","e190_96.xml","0",2,"","YES")
 db[109] = new dbRecord(false, "Icp Pressure","e190_97.xml","0",2,"","YES")
 db[110] = new dbRecord(false, "Boost Pressure","e190_98.xml","0",2,"","YES")
 db[111] = new dbRecord(false, "Crankcase Pressure","e190_99.xml","0",2,"","YES")
 db[112] = new dbRecord(false, "Oil Aeration","e190_100.xml","0",2,"","YES")
 db[113] = new dbRecord(false, "Injection Control Pressure (oil Aeration-poor Idle Quality) (continued)","e190_101.xml","0",2,"","YES")
 db[114] = new dbRecord(false, "Wastegate Actuator Test","e190_102.xml","0",2,"","YES")
 db[115] = new dbRecord(true, "Section 2.4: Performance Specifications","e190_E19012.xml","0",0,"","YES")
 db[116] = new dbRecord(true, "T 444e/175 Hp @ 2300 Rpm","e190_104.xml","0",1,"","")
 db[117] = new dbRecord(false, "50 STATE 1997 MODEL YEAR","e190_104.xml","0",2,"","YES")
 db[118] = new dbRecord(true, "T 444e/190 Hp @ 2300 Rpm","e190_105.xml","0",1,"","")
 db[119] = new dbRecord(false, "50 STATE 1997 MODEL YEAR","e190_105.xml","0",2,"","YES")
 db[120] = new dbRecord(true, "T 444e/210 Hp @ 2400 Rpm","e190_106.xml","0",1,"","")
 db[121] = new dbRecord(false, "50 STATE 1997 MODEL YEAR","e190_106.xml","0",2,"","YES")
 db[122] = new dbRecord(true, "T 444e/210 Hp @ 2300 Rpm","e190_107.xml","0",1,"","")
 db[123] = new dbRecord(false, "50 STATE 1997 MODEL YEAR","e190_107.xml","0",2,"","YES")
 db[124] = new dbRecord(true, "T 444e/230 Hp @ 2300 Rpm","e190_108.xml","0",1,"","")
 db[125] = new dbRecord(false, "50 STATE 1997 MODEL YEAR","e190_108.xml","0",2,"","YES")
 db[126] = new dbRecord(true, "T 444e/250 Hp @ 2300 Rpm","e190_109.xml","0",1,"","")
 db[127] = new dbRecord(false, "50 STATE 1997 MODEL YEAR","e190_109.xml","0",2,"","YES")
 db[128] = new dbRecord(true, "Section 3.1: Electronic Control System Diagnostic Form","e190_E19013.xml","0",0,"","YES")
 db[129] = new dbRecord(true, "Introduction","e190_111.xml","0",1,"","")
 db[130] = new dbRecord(false, "GENERAL INSTRUCTIONS","e190_111.xml","0",2,"","YES")
 db[131] = new dbRecord(true, "Section 3.2: Electronic Control System, Flash Code Circuit Index","e190_E19014.xml","0",0,"","YES")
 db[132] = new dbRecord(false, "Flash Code Circuit Index","e190_FC.xml","0",1,"","YES")
 db[133] = new dbRecord(true, "Section 3.3: Electronic Control System Diagnostics, Sensor And Actuator Locations","e190_E19015.xml","0",0,"","YES")
 db[134] = new dbRecord(false, "SENSOR AND ACTUATOR LOCATIONS (ENGINE FRONT)","e190_E19015.xml","0",1,"","YES")
 db[135] = new dbRecord(false, "Sensor And Actuator Locations (engine Top)","e190_115.xml","0",1,"","YES")
 db[136] = new dbRecord(false, "Electronic Control System Component Locations (vehicle)","e190_116.xml","0",1,"","YES")
 db[137] = new dbRecord(true, "Section 3.4: Electronic Control System Diagnostics, Sensor And Actuator Diagnostic Procedures","e190_E19016.xml","0",0,"","YES")
 db[138] = new dbRecord(true, "Sensor And Actuator Diagnostic Procedures","e190_118.xml","0",1,"","")
 db[139] = new dbRecord(false, "INSPECTION","e190_118.xml","0",2,"","YES")
 db[140] = new dbRecord(false, "Connector Voltage Checks","e190_119.xml","0",2,"","YES")
 db[141] = new dbRecord(false, "Connector Checks To Ground (b-)","e190_120.xml","0",2,"","YES")
 db[142] = new dbRecord(false, "Harness Resistance Tests","e190_121.xml","0",2,"","YES")
 db[143] = new dbRecord(false, "Operational Signal Checks","e190_122.xml","0",2,"","YES")
 db[144] = new dbRecord(true, "Section 3.5: Electronic Control System Diagnostics, Accelerator Pedal Position Sensor/ivs Switch (aps/ivs)","e190_E19017.xml","0",0,"","YES")
 db[145] = new dbRecord(true, "Aps/ivs Pedal Position Sensor / Idle Validation Switch","e190_HL1901701.xml","0",1,"","YES")
 db[146] = new dbRecord(false, "Signal Functions","e190_125.xml","0",2,"","YES")
 db[147] = new dbRecord(false, "Fault Detection/management","e190_126.xml","0",2,"","YES")
 db[148] = new dbRecord(false, "Aps/ivs Extended System Description","e190_127.xml","0",2,"","YES")
 db[149] = new dbRecord(false, "Accelerator Position Sensor (aps)","e190_128.xml","0",2,"","YES")
 db[150] = new dbRecord(false, "Aps Auto-calibration","e190_129.xml","0",2,"","YES")
 db[151] = new dbRecord(false, "Idle Validation Switch (ivs)","e190_130.xml","0",2,"","YES")
 db[152] = new dbRecord(false, "Ecm Diagnostics","e190_131.xml","0",2,"","YES")
 db[153] = new dbRecord(true, "Ata Communications","e190_HL1901702.xml","0",1,"","")
 db[154] = new dbRecord(false, "Data Communications Link, Ata Link","e190_133.xml","0",2,"","YES")
 db[155] = new dbRecord(false, "Extended Description","e190_134.xml","0",2,"","YES")
 db[156] = new dbRecord(false, "Ata Communication","e190_135.xml","0",2,"","YES")
 db[157] = new dbRecord(false, "Ata Data Link Connector (384)","e190_136.xml","0",2,"","YES")
 db[158] = new dbRecord(false, "Positive And Negative Ata Data Links","e190_137.xml","0",2,"","YES")
 db[159] = new dbRecord(false, "Est Connector (384)","e190_138.xml","0",2,"","YES")
 db[160] = new dbRecord(false, "Est Displays","e190_139.xml","0",2,"","YES")
 db[161] = new dbRecord(false, "Fault Code","e190_140.xml","0",2,"","YES")
 db[162] = new dbRecord(false, "Instrument Cluster Display","e190_141.xml","0",2,"","YES")
 db[163] = new dbRecord(true, "Barometric Pressure (baro) Sensor","e190_HL1901703.xml","0",1,"","YES")
 db[164] = new dbRecord(false, "Signal Functions","e190_143.xml","0",2,"","YES")
 db[165] = new dbRecord(false, "Fault Detection/management","e190_144.xml","0",2,"","YES")
 db[166] = new dbRecord(false, "Extended Description Barometric Pressure Sensor","e190_145.xml","0",2,"","YES")
 db[167] = new dbRecord(false, "Barometric Pressure Sensor (baro) Operation","e190_146.xml","0",2,"","YES")
 db[168] = new dbRecord(false, "Ecm Diagnostics","e190_147.xml","0",2,"","YES")
 db[169] = new dbRecord(true, "Brake Switch Circuits (brake)","e190_HL1901704.xml","0",1,"","YES")
 db[170] = new dbRecord(false, "Signal Function","e190_149.xml","0",2,"","YES")
 db[171] = new dbRecord(false, "Service Brake Switches","e190_150.xml","0",2,"","YES")
 db[172] = new dbRecord(false, "Fault Detection Management","e190_151.xml","0",2,"","YES")
 db[173] = new dbRecord(false, "Extended Description","e190_152.xml","0",2,"","YES")
 db[174] = new dbRecord(false, "Hydraulic Brakes","e190_153.xml","0",2,"","YES")
 db[175] = new dbRecord(false, "Service Brake Switch(s)","e190_154.xml","0",2,"","YES")
 db[176] = new dbRecord(false, "Before Troubleshooting","e190_155.xml","0",2,"","YES")
 db[177] = new dbRecord(false, "Troubleshooting","e190_156.xml","0",2,"","YES")
 db[178] = new dbRecord(false, "Stop Light Switch, Truck W/standard Air Brakes &#38; Trailer Or Owner/operator Connections W/sig-stat Turn Signal Switch, Circuit Diagram","e190_157.xml","0",2,"","YES")
 db[179] = new dbRecord(true, "Camshaft Position (cmp) Sensor","e190_HL1901705.xml","0",1,"","YES")
 db[180] = new dbRecord(false, "Signal Functions","e190_159.xml","0",2,"","YES")
 db[181] = new dbRecord(false, "Fault Detection/management","e190_160.xml","0",2,"","YES")
 db[182] = new dbRecord(false, "Camshaft Position Sensor (cmp) Extended System Description","e190_161.xml","0",2,"","YES")
 db[183] = new dbRecord(false, "Function","e190_162.xml","0",2,"","YES")
 db[184] = new dbRecord(false, "Operation","e190_163.xml","0",2,"","YES")
 db[185] = new dbRecord(false, "Ecm Diagnostics","e190_164.xml","0",2,"","YES")
 db[186] = new dbRecord(true, "Change Oil Lamp (col)","e190_HL1901706.xml","0",1,"","YES")
 db[187] = new dbRecord(false, "System Functions","e190_166.xml","0",2,"","YES")
 db[188] = new dbRecord(false, "Fault Detection/management","e190_167.xml","0",2,"","YES")
 db[189] = new dbRecord(false, "Extended Description","e190_168.xml","0",2,"","YES")
 db[190] = new dbRecord(false, "Change Oil Lamp","e190_169.xml","0",2,"","YES")
 db[191] = new dbRecord(false, "Service Interval Limits","e190_170.xml","0",2,"","YES")
 db[192] = new dbRecord(true, "Exhaust Back Pressure (ebp) Sensor","e190_HL1901707.xml","0",1,"","YES")
 db[193] = new dbRecord(false, "Signal Functions","e190_172.xml","0",2,"","YES")
 db[194] = new dbRecord(false, "Fault Detection/management","e190_173.xml","0",2,"","YES")
 db[195] = new dbRecord(false, "Extended System Description","e190_174.xml","0",2,"","YES")
 db[196] = new dbRecord(true, "Engine Crank Inhibit System (eci)","e190_HL1901708.xml","0",1,"","YES")
 db[197] = new dbRecord(false, "Signal Function","e190_176.xml","0",2,"","YES")
 db[198] = new dbRecord(false, "Electronic Control Module (ecm)","e190_177.xml","0",2,"","YES")
 db[199] = new dbRecord(false, "Engine Crank Inhibit Relay","e190_178.xml","0",2,"","YES")
 db[200] = new dbRecord(false, "Start Relay","e190_179.xml","0",2,"","YES")
 db[201] = new dbRecord(false, "Clutch Switch","e190_180.xml","0",2,"","YES")
 db[202] = new dbRecord(false, "Neutral Switch","e190_181.xml","0",2,"","YES")
 db[203] = new dbRecord(false, "Wtec Vim Relay","e190_182.xml","0",2,"","YES")
 db[204] = new dbRecord(false, "Fault Detection Management","e190_183.xml","0",2,"","YES")
 db[205] = new dbRecord(false, "Extended Description","e190_184.xml","0",2,"","YES")
 db[206] = new dbRecord(false, "System Operation","e190_185.xml","0",2,"","YES")
 db[207] = new dbRecord(false, "Electronic Control Module (ecm)","e190_186.xml","0",2,"","YES")
 db[208] = new dbRecord(false, "Engine Crank Inhibit Relay","e190_187.xml","0",2,"","YES")
 db[209] = new dbRecord(false, "Start Relay","e190_188.xml","0",2,"","YES")
 db[210] = new dbRecord(false, "Cranking System Circuit Diagram","e190_189.xml","0",2,"","YES")
 db[211] = new dbRecord(true, "Engine Coolant Level System","e190_HL1901709.xml","0",1,"","YES")
 db[212] = new dbRecord(false, "Signal Function","e190_191.xml","0",2,"","YES")
 db[213] = new dbRecord(false, "Fault Detection Management","e190_192.xml","0",2,"","YES")
 db[214] = new dbRecord(false, "Extended Description","e190_193.xml","0",2,"","YES")
 db[215] = new dbRecord(false, "Coolant Level Sensor","e190_194.xml","0",2,"","YES")
 db[216] = new dbRecord(false, "Plastic Surge Tanks","e190_195.xml","0",2,"","YES")
 db[217] = new dbRecord(false, "Steel Surge Tanks","e190_196.xml","0",2,"","YES")
 db[218] = new dbRecord(false, "Programming","e190_197.xml","0",2,"","YES")
 db[219] = new dbRecord(false, "Troubleshooting","e190_198.xml","0",2,"","YES")
 db[220] = new dbRecord(false, "Before Troubleshooting","e190_199.xml","0",2,"","YES")
 db[221] = new dbRecord(false, "Surge Tank (plastic Or Metal) Circuit Diagram","e190_200.xml","0",2,"","YES")
 db[222] = new dbRecord(true, "Ecm Self Diagnostics","e190_HL1901710.xml","0",1,"","YES")
 db[223] = new dbRecord(false, "Signal Functions","e190_202.xml","0",2,"","YES")
 db[224] = new dbRecord(false, "Fault Detection/management","e190_203.xml","0",2,"","YES")
 db[225] = new dbRecord(true, "Electronic Control Module (ecm) Power Supply","e190_HL1901711.xml","0",1,"","YES")
 db[226] = new dbRecord(false, "Circuit Functions","e190_205.xml","0",2,"","YES")
 db[227] = new dbRecord(false, "Fault Detection Management","e190_206.xml","0",2,"","YES")
 db[228] = new dbRecord(false, "Extended Description","e190_207.xml","0",2,"","YES")
 db[229] = new dbRecord(false, "Ecm Diagnostics","e190_208.xml","0",2,"","YES")
 db[230] = new dbRecord(false, "Before Performing Any Tests","e190_209.xml","0",2,"","YES")
 db[231] = new dbRecord(false, "Troubleshooting","e190_210.xml","0",2,"","YES")
 db[232] = new dbRecord(false, "Electronic Control Module Power And Ground System Circuit Diagram","e190_211.xml","0",2,"","YES")
 db[233] = new dbRecord(true, "Engine Coolant Temperature (ect) Sensor","e190_HL1901712.xml","0",1,"","YES")
 db[234] = new dbRecord(false, "Signal Functions","e190_213.xml","0",2,"","YES")
 db[235] = new dbRecord(false, "Fault Detection/management","e190_214.xml","0",2,"","YES")
 db[236] = new dbRecord(false, "Engine Coolant Temperature Sensor Extended System Description","e190_215.xml","0",2,"","YES")
 db[237] = new dbRecord(false, "Function","e190_216.xml","0",2,"","YES")
 db[238] = new dbRecord(false, "Operation","e190_217.xml","0",2,"","YES")
 db[239] = new dbRecord(false, "Ecm Diagnostics","e190_218.xml","0",2,"","YES")
 db[240] = new dbRecord(true, "(edl) Engine Data Line With Allison At/mt Transmission","e190_HL1901713.xml","0",1,"","YES")
 db[241] = new dbRecord(false, "Circuit Functions","e190_220.xml","0",2,"","YES")
 db[242] = new dbRecord(false, "Fault Detection","e190_221.xml","0",2,"","YES")
 db[243] = new dbRecord(false, "Extended Description","e190_222.xml","0",2,"","YES")
 db[244] = new dbRecord(false, "Wide Open Throttle Mode Operation","e190_223.xml","0",2,"","YES")
 db[245] = new dbRecord(false, "Closed Throttle Mode Operation","e190_224.xml","0",2,"","YES")
 db[246] = new dbRecord(false, "Ecm Diagnostics","e190_225.xml","0",2,"","YES")
 db[247] = new dbRecord(false, "Allison Automatic Transmission System/(n/electronic Xmsn) Circuit Diagram","e190_226.xml","0",2,"","YES")
 db[248] = new dbRecord(true, "Engine Fan Control","e190_HL1901714.xml","0",1,"","YES")
 db[249] = new dbRecord(false, "Signal Functions","e190_228.xml","0",2,"","YES")
 db[250] = new dbRecord(false, "Fault Detection/management","e190_229.xml","0",2,"","YES")
 db[251] = new dbRecord(false, "Engine Fan Control Extended System Description","e190_230.xml","0",2,"","YES")
 db[252] = new dbRecord(false, "Function","e190_231.xml","0",2,"","YES")
 db[253] = new dbRecord(false, "Engine Fan Control","e190_232.xml","0",2,"","YES")
 db[254] = new dbRecord(false, "Fan On Temperature","e190_233.xml","0",2,"","YES")
 db[255] = new dbRecord(false, "Fan Off Temperature","e190_234.xml","0",2,"","YES")
 db[256] = new dbRecord(false, "Shutter And Fan Wiring Circuit Diagram","e190_235.xml","0",2,"","YES")
 db[257] = new dbRecord(true, "Engine Oil Pressure (eop) Sensor","e190_HL1901715.xml","0",1,"","YES")
 db[258] = new dbRecord(false, "Signal Functions","e190_237.xml","0",2,"","YES")
 db[259] = new dbRecord(false, "Fault Detection/management","e190_238.xml","0",2,"","YES")
 db[260] = new dbRecord(false, "Engine Oil Pressure Sensor Extended System Description","e190_239.xml","0",2,"","YES")
 db[261] = new dbRecord(false, "Function","e190_240.xml","0",2,"","YES")
 db[262] = new dbRecord(false, "Operation","e190_241.xml","0",2,"","YES")
 db[263] = new dbRecord(false, "Ecm Diagnostics","e190_242.xml","0",2,"","YES")
 db[264] = new dbRecord(true, "Engine Oil Temperature (eot) Sensor","e190_HL1901716.xml","0",1,"","YES")
 db[265] = new dbRecord(false, "Signal Functions","e190_244.xml","0",2,"","YES")
 db[266] = new dbRecord(false, "Fault Detection/management","e190_245.xml","0",2,"","YES")
 db[267] = new dbRecord(false, "Engine Oil Temperature Sensor Extended System Description","e190_246.xml","0",2,"","YES")
 db[268] = new dbRecord(false, "Function","e190_247.xml","0",2,"","YES")
 db[269] = new dbRecord(false, "Operation","e190_248.xml","0",2,"","YES")
 db[270] = new dbRecord(false, "Ecm Diagnostics","e190_249.xml","0",2,"","YES")
 db[271] = new dbRecord(true, "Exhaust Back Pressure (epr) Regulator","e190_HL1901717.xml","0",1,"","YES")
 db[272] = new dbRecord(false, "Output Functions","e190_251.xml","0",2,"","YES")
 db[273] = new dbRecord(false, "Fault Detection/management","e190_252.xml","0",2,"","YES")
 db[274] = new dbRecord(false, "Exhaust Back Pressure Regulator Valve Extended System Description","e190_253.xml","0",2,"","YES")
 db[275] = new dbRecord(true, "Glow Plug Control","e190_HL1901718.xml","0",1,"","YES")
 db[276] = new dbRecord(false, "Output Functions","e190_255.xml","0",2,"","YES")
 db[277] = new dbRecord(false, "Fault Detection/management","e190_256.xml","0",2,"","YES")
 db[278] = new dbRecord(false, "Glow Plug System Extended System Description","e190_257.xml","0",2,"","YES")
 db[279] = new dbRecord(true, "Hydraulic Pressure Governor","e190_HL1901719.xml","0",1,"","YES")
 db[280] = new dbRecord(false, "Signal Functions","e190_259.xml","0",2,"","YES")
 db[281] = new dbRecord(false, "Fault Detection/management","e190_260.xml","0",2,"","YES")
 db[282] = new dbRecord(false, "Hydraulic Pressure Governor Extended System Description","e190_261.xml","0",2,"","YES")
 db[283] = new dbRecord(false, "Hydraulic Pressure Governor Parameters","e190_262.xml","0",2,"","YES")
 db[284] = new dbRecord(false, "Ecm Diagnostics","e190_263.xml","0",2,"","YES")
 db[285] = new dbRecord(true, "Intake Air Temperature (iat) Sensor","e190_HL1901720.xml","0",1,"","YES")
 db[286] = new dbRecord(false, "Signal Functions","e190_265.xml","0",2,"","YES")
 db[287] = new dbRecord(false, "Fault Detection/management","e190_266.xml","0",2,"","YES")
 db[288] = new dbRecord(false, "Intake Air Temperature Sensor Extended System Description","e190_267.xml","0",2,"","YES")
 db[289] = new dbRecord(false, "Function","e190_268.xml","0",2,"","YES")
 db[290] = new dbRecord(false, "Operation","e190_269.xml","0",2,"","YES")
 db[291] = new dbRecord(false, "Ecm Diagnostics","e190_270.xml","0",2,"","YES")
 db[292] = new dbRecord(false, "Accelerator, Baro, Intake Air Temperature Sensor Systems Circuit Diagram","e190_271.xml","0",2,"","YES")
 db[293] = new dbRecord(false, "accelerator, baro, INTAKE airtemp systems &#38; dual drive cab circuit diagram","e190_272.xml","0",2,"","YES")
 db[294] = new dbRecord(true, "Injection Control Pressure (icp) Sensor","e190_HL1901721.xml","0",1,"","YES")
 db[295] = new dbRecord(false, "Signal Functions","e190_274.xml","0",2,"","YES")
 db[296] = new dbRecord(false, "Fault Detection/management","e190_275.xml","0",2,"","YES")
 db[297] = new dbRecord(false, "Injection Control Pressure Sensor Extended System Description","e190_276.xml","0",2,"","YES")
 db[298] = new dbRecord(false, "Function","e190_277.xml","0",2,"","YES")
 db[299] = new dbRecord(false, "Operation","e190_278.xml","0",2,"","YES")
 db[300] = new dbRecord(false, "Ecm Diagnostics","e190_279.xml","0",2,"","YES")
 db[301] = new dbRecord(true, "Injector Drive Circuits (INJ)","e190_280.xml","0",1,"","")
 db[302] = new dbRecord(false, "Injector Drive Circuits (inj)","e190_281.xml","0",2,"","YES")
 db[303] = new dbRecord(true, "Injection Pressure Regulator (ipr)","e190_HL1901723.xml","0",1,"","YES")
 db[304] = new dbRecord(false, "Output Functions","e190_283.xml","0",2,"","YES")
 db[305] = new dbRecord(false, "Fault Detection/management","e190_284.xml","0",2,"","YES")
 db[306] = new dbRecord(false, "Injector Pressure Regulator Extended System Description","e190_285.xml","0",2,"","YES")
 db[307] = new dbRecord(false, "Function","e190_286.xml","0",2,"","YES")
 db[308] = new dbRecord(false, "Operation","e190_287.xml","0",2,"","YES")
 db[309] = new dbRecord(false, "Ecm Diagnostics","e190_288.xml","0",2,"","YES")
 db[310] = new dbRecord(true, "Injection Pressure Regulation System (ipr_sys)","e190_HL1901724.xml","0",1,"","YES")
 db[311] = new dbRecord(false, "System Functions","e190_290.xml","0",2,"","YES")
 db[312] = new dbRecord(false, "Fault Detection/management","e190_291.xml","0",2,"","YES")
 db[313] = new dbRecord(false, "Ecm Diagnostics","e190_292.xml","0",2,"","YES")
 db[314] = new dbRecord(true, "Idle Shutdown Timer (ist)","e190_HL1901725.xml","0",1,"","YES")
 db[315] = new dbRecord(false, "System Function","e190_294.xml","0",2,"","YES")
 db[316] = new dbRecord(false, "Fault Detection/management","e190_295.xml","0",2,"","YES")
 db[317] = new dbRecord(false, "Extended Description","e190_296.xml","0",2,"","YES")
 db[318] = new dbRecord(false, "Engine Idle Shutdown Control Parameters","e190_297.xml","0",2,"","YES")
 db[319] = new dbRecord(true, "Manifold Absolute Pressure (map) Sensor","e190_HL1901726.xml","0",1,"","YES")
 db[320] = new dbRecord(false, "Signal Functions","e190_299.xml","0",2,"","YES")
 db[321] = new dbRecord(false, "Fault Detection/management","e190_300.xml","0",2,"","YES")
 db[322] = new dbRecord(false, "Manifold Absolute Pressure Sensor Extended System Description","e190_301.xml","0",2,"","YES")
 db[323] = new dbRecord(false, "Function","e190_302.xml","0",2,"","YES")
 db[324] = new dbRecord(false, "Operation","e190_303.xml","0",2,"","YES")
 db[325] = new dbRecord(false, "Ecm Diagnostics","e190_304.xml","0",2,"","YES")
 db[326] = new dbRecord(true, "Owl (oil Water Lamp) / Ewps (engine Warning And Protection System)","e190_HL1901727.xml","0",1,"","YES")
 db[327] = new dbRecord(false, "Signal Functions","e190_306.xml","0",2,"","YES")
 db[328] = new dbRecord(false, "Fault Detection/management","e190_307.xml","0",2,"","YES")
 db[329] = new dbRecord(false, "Extended System Description","e190_308.xml","0",2,"","YES")
 db[330] = new dbRecord(false, "Engine Warning And Protection System","e190_309.xml","0",2,"","YES")
 db[331] = new dbRecord(false, "Ewps Mode","e190_310.xml","0",2,"","YES")
 db[332] = new dbRecord(false, "Standard Warning (rpm)","e190_311.xml","0",2,"","YES")
 db[333] = new dbRecord(false, "3-way Warning (rpm,ect,eop,ecl)","e190_312.xml","0",2,"","YES")
 db[334] = new dbRecord(false, "3-way Protection (rpm,ect,eop,ecl)","e190_313.xml","0",2,"","YES")
 db[335] = new dbRecord(false, "2-way Warning (rpm,ect,eop)","e190_314.xml","0",2,"","YES")
 db[336] = new dbRecord(false, "Ecm Diagnostics","e190_315.xml","0",2,"","YES")
 db[337] = new dbRecord(false, "Engine Warning Lights/alarm And Test Switch Circuit Diagram","e190_316.xml","0",2,"","YES")
 db[338] = new dbRecord(true, "Remote Accelerator Pedal Sensor","e190_HL1901728.xml","0",1,"","YES")
 db[339] = new dbRecord(false, "Signal Function","e190_318.xml","0",2,"","YES")
 db[340] = new dbRecord(false, "Pedal Operation","e190_319.xml","0",2,"","YES")
 db[341] = new dbRecord(false, "Fault Detection Management","e190_320.xml","0",2,"","YES")
 db[342] = new dbRecord(false, "Remote Accelerator Pedal Sensor Extended System Description","e190_321.xml","0",2,"","YES")
 db[343] = new dbRecord(false, "Extended Description","e190_322.xml","0",2,"","YES")
 db[344] = new dbRecord(false, "Programming","e190_323.xml","0",2,"","YES")
 db[345] = new dbRecord(false, "Fault Detection Management","e190_324.xml","0",2,"","YES")
 db[346] = new dbRecord(false, "Troubleshooting","e190_325.xml","0",2,"","YES")
 db[347] = new dbRecord(false, "Before Troubleshooting","e190_326.xml","0",2,"","YES")
 db[348] = new dbRecord(false, "Cruise Control, Body Builder Connections Circuit Diagram","e190_327.xml","0",2,"","YES")
 db[349] = new dbRecord(true, "Remote Pto Speed Control (rpto)","e190_HL1901729.xml","0",1,"","YES")
 db[350] = new dbRecord(false, "System Function","e190_329.xml","0",2,"","YES")
 db[351] = new dbRecord(false, "Fault Detection/management","e190_330.xml","0",2,"","YES")
 db[352] = new dbRecord(false, "Extended Description","e190_331.xml","0",2,"","YES")
 db[353] = new dbRecord(false, "Power Take Off Speed Control","e190_332.xml","0",2,"","YES")
 db[354] = new dbRecord(false, "Power Take Off","e190_333.xml","0",2,"","YES")
 db[355] = new dbRecord(false, "Pto Max Vs","e190_334.xml","0",2,"","YES")
 db[356] = new dbRecord(false, "Pto In-cab Mode","e190_335.xml","0",2,"","YES")
 db[357] = new dbRecord(false, "Pto In-cab Interface","e190_336.xml","0",2,"","YES")
 db[358] = new dbRecord(false, "Pto Remote Pedal","e190_337.xml","0",2,"","YES")
 db[359] = new dbRecord(false, "Pto Preset Rpm 1","e190_338.xml","0",2,"","YES")
 db[360] = new dbRecord(false, "Pto Preset Rpm 2","e190_339.xml","0",2,"","YES")
 db[361] = new dbRecord(false, "Pto Preset Rpm Ramp Rate","e190_340.xml","0",2,"","YES")
 db[362] = new dbRecord(false, "Pto Max Rpm","e190_341.xml","0",2,"","YES")
 db[363] = new dbRecord(false, "Troubleshooting","e190_342.xml","0",2,"","YES")
 db[364] = new dbRecord(false, "Cruise Control, Body Builder Connections Circuit Diagram","e190_343.xml","0",2,"","YES")
 db[365] = new dbRecord(true, "Radiator Shutter Enable (rse)","e190_HL1901730.xml","0",1,"","YES")
 db[366] = new dbRecord(false, "Signal Functions","e190_345.xml","0",2,"","YES")
 db[367] = new dbRecord(false, "Fault Detection/management","e190_346.xml","0",2,"","YES")
 db[368] = new dbRecord(false, "Radiator Shutter Enable Extended System Description","e190_347.xml","0",2,"","YES")
 db[369] = new dbRecord(false, "Function","e190_348.xml","0",2,"","YES")
 db[370] = new dbRecord(false, "Radiator Shutter","e190_349.xml","0",2,"","YES")
 db[371] = new dbRecord(false, "Shutter And Fan Wiring Circuit Diagram","e190_350.xml","0",2,"","YES")
 db[372] = new dbRecord(true, "Cruise Control, Pto, Hand Throttle System","e190_HL1901731.xml","0",1,"","YES")
 db[373] = new dbRecord(false, "Signal Function","e190_352.xml","0",2,"","YES")
 db[374] = new dbRecord(false, "Fault Detection Management","e190_353.xml","0",2,"","YES")
 db[375] = new dbRecord(false, "Extended Description","e190_354.xml","0",2,"","YES")
 db[376] = new dbRecord(false, "Cruise Control","e190_355.xml","0",2,"","YES")
 db[377] = new dbRecord(false, "Pto (engine Speed) Control","e190_356.xml","0",2,"","YES")
 db[378] = new dbRecord(false, "In Cab Pto","e190_357.xml","0",2,"","YES")
 db[379] = new dbRecord(false, "In Cab Preset","e190_358.xml","0",2,"","YES")
 db[380] = new dbRecord(false, "In Cab Variable","e190_359.xml","0",2,"","YES")
 db[381] = new dbRecord(false, "In Cab Mobile","e190_360.xml","0",2,"","YES")
 db[382] = new dbRecord(false, "Remote Pto","e190_361.xml","0",2,"","YES")
 db[383] = new dbRecord(false, "Remote Preset","e190_362.xml","0",2,"","YES")
 db[384] = new dbRecord(false, "Remote Variable","e190_363.xml","0",2,"","YES")
 db[385] = new dbRecord(false, "Pto Speed Ramp Rate","e190_364.xml","0",2,"","YES")
 db[386] = new dbRecord(false, "Fault Detection Management","e190_365.xml","0",2,"","YES")
 db[387] = new dbRecord(false, "Troubleshooting","e190_366.xml","0",2,"","YES")
 db[388] = new dbRecord(false, "Before Troubleshooting","e190_367.xml","0",2,"","YES")
 db[389] = new dbRecord(false, "Cruise Control, Body Builder Connections Circuit Diagram","e190_368.xml","0",2,"","YES")
 db[390] = new dbRecord(true, "Self Test Input Switch And Engine Warning Light","e190_HL1901732.xml","0",1,"","YES")
 db[391] = new dbRecord(false, "Signal Function","e190_370.xml","0",2,"","YES")
 db[392] = new dbRecord(false, "Fault Detection Management","e190_371.xml","0",2,"","YES")
 db[393] = new dbRecord(false, "Extended Description","e190_372.xml","0",2,"","YES")
 db[394] = new dbRecord(false, "Sti Switch","e190_373.xml","0",2,"","YES")
 db[395] = new dbRecord(false, "Engine Warning Light Warn","e190_374.xml","0",2,"","YES")
 db[396] = new dbRecord(false, "Ecm Diagnostics","e190_375.xml","0",2,"","YES")
 db[397] = new dbRecord(false, "Before Troubleshooting","e190_376.xml","0",2,"","YES")
 db[398] = new dbRecord(false, "Troubleshooting","e190_377.xml","0",2,"","YES")
 db[399] = new dbRecord(false, "Engine Warning Lights/alarm And Test Switch Circuit Diagram","e190_378.xml","0",2,"","YES")
 db[400] = new dbRecord(true, "Tachometer Input Circuits","e190_HL1901733.xml","0",1,"","YES")
 db[401] = new dbRecord(false, "Circuit Function","e190_380.xml","0",2,"","YES")
 db[402] = new dbRecord(false, "Fault Detection Management","e190_381.xml","0",2,"","YES")
 db[403] = new dbRecord(false, "Extended Description Tachometer Input Circuit","e190_382.xml","0",2,"","YES")
 db[404] = new dbRecord(false, "Tachometer Input Signal","e190_383.xml","0",2,"","YES")
 db[405] = new dbRecord(false, "Speedometer, Tachometer System, Hi Beam, Right And Left Turn Signal Indicator Lights, Engine Water Temperature Gauge Circuit Diagram","e190_384.xml","0",2,"","YES")
 db[406] = new dbRecord(true, "Two Speed Axle Speedometer Circuit","e190_HL1901734.xml","0",1,"","YES")
 db[407] = new dbRecord(false, "Signal Functions","e190_386.xml","0",2,"","YES")
 db[408] = new dbRecord(false, "Fault Detection Management","e190_387.xml","0",2,"","YES")
 db[409] = new dbRecord(false, "Extended Description","e190_388.xml","0",2,"","YES")
 db[410] = new dbRecord(false, "Ecm Diagnostics","e190_389.xml","0",2,"","YES")
 db[411] = new dbRecord(false, "Troubleshooting","e190_390.xml","0",2,"","YES")
 db[412] = new dbRecord(false, "Before Troubleshooting","e190_391.xml","0",2,"","YES")
 db[413] = new dbRecord(false, "Two Speed Axle Wiring W/allison Md Automatic Transmission W/air Or Hydraulic Brakes And W/air Suspension Circuit Diagram","e190_392.xml","0",2,"","YES")
 db[414] = new dbRecord(false, "Two Speed Axle Wiring W/allison Md Automatic Transmission W/hydraulic Brakes And No Air Suspension Circuit Diagram","e190_393.xml","0",2,"","YES")
 db[415] = new dbRecord(false, "Two Speed Electric Axle Circuit Diagram","e190_394.xml","0",2,"","YES")
 db[416] = new dbRecord(false, "Two Speed Electric Axle (air) And Air Dryer W/automatic Or Manual Transmission Circuit Diagram","e190_395.xml","0",2,"","YES")
 db[417] = new dbRecord(false, "Two Speed Electric Axle (hydraulic) Circuit Diagram","e190_396.xml","0",2,"","YES")
 db[418] = new dbRecord(true, "V Ref Voltage Reference","e190_HL1901735.xml","0",1,"","YES")
 db[419] = new dbRecord(false, "Circuit Functions","e190_398.xml","0",2,"","YES")
 db[420] = new dbRecord(false, "Fault Detection/management","e190_399.xml","0",2,"","YES")
 db[421] = new dbRecord(false, "Voltage Reference Extended System Description","e190_400.xml","0",2,"","YES")
 db[422] = new dbRecord(false, "Function","e190_401.xml","0",2,"","YES")
 db[423] = new dbRecord(false, "Operation","e190_402.xml","0",2,"","YES")
 db[424] = new dbRecord(false, "Ecm Voltage Reference Diagnostics","e190_403.xml","0",2,"","YES")
 db[425] = new dbRecord(true, "Vehicle Retarder (vre)","e190_HL1901736.xml","0",1,"","YES")
 db[426] = new dbRecord(false, "Circuit Functions","e190_405.xml","0",2,"","YES")
 db[427] = new dbRecord(false, "Fault Detection/management","e190_406.xml","0",2,"","YES")
 db[428] = new dbRecord(false, "Vehicle Retarder Extended System Description","e190_407.xml","0",2,"","YES")
 db[429] = new dbRecord(false, "Vehicle Retarder","e190_408.xml","0",2,"","YES")
 db[430] = new dbRecord(false, "Troubleshooting","e190_409.xml","0",2,"","YES")
 db[431] = new dbRecord(false, "Exhaust Brake W/wt Transmission Circuit Diagram","e190_410.xml","0",2,"","YES")
 db[432] = new dbRecord(false, "Exhaust Brake W/abs, N/wtec Iii Transmission Circuit Diagram","e190_411.xml","0",2,"","YES")
 db[433] = new dbRecord(false, "Transmission Retarder Controls Wiring Circuit Diagram","e190_412.xml","0",2,"","YES")
 db[434] = new dbRecord(false, "Allison At Retarder N/abs Circuit Diagram","e190_413.xml","0",2,"","YES")
 db[435] = new dbRecord(true, "Vehicle Speed Sensor Signal","e190_HL1901737.xml","0",1,"","YES")
 db[436] = new dbRecord(false, "Signal Function","e190_415.xml","0",2,"","YES")
 db[437] = new dbRecord(false, "Fault Detection Management","e190_416.xml","0",2,"","YES")
 db[438] = new dbRecord(false, "Extended Description","e190_417.xml","0",2,"","YES")
 db[439] = new dbRecord(false, "Ecm Diagnostics","e190_418.xml","0",2,"","YES")
 db[440] = new dbRecord(false, "Troubleshooting","e190_419.xml","0",2,"","YES")
 db[441] = new dbRecord(false, "Before Troubleshooting","e190_420.xml","0",2,"","YES")
 db[442] = new dbRecord(false, "SPEEDOMETER, TACHOMETER SYSTEM, HI BEAM, RIGHT AND LEFT TURN SIGNAL INDICATOR LIGHTS, ENGINE WATER TEMPERATURE GAUGE CIRCUIT DIAGRAM","e190_421.xml","0",2,"","YES")
// AHJO - In the following function the parameter 'occurs' was added Oct/Nov 2001
function dbRecord(mother,display,URL,occurs,indent,statusMsg,link){
	this.mother = mother   // is this item a parent?
	this.display = display // text to display
	this.URL = URL         // used to link to TOC
	this.occurances =  occurs  // how many times does search occur - THIS LINE WAS ADDED by AHJO
	this.indent = indent   // how many levels nested?
	this.statusMsg = statusMsg  // descriptive text for status bar 
	this.link = link  //  link tied to text; if empty string, item appears as straight text
	return this
}
// pre-load all images into cache
var collapsedImg = new Image(widgetWidth,widgetHeight)
collapsedImg.src = collapsedWidget
var expandedImg = new Image(widgetWidth,widgetHeight)
expandedImg.src = expandedWidget
var endpointImg = new Image(widgetWidth,widgetHeight)
endpointImg.src = endpointWidget
// mainframeURL = parent.mainframe.document.URL // get URL of mainframe 
// ** functions that get and set persistent cookie data **
// set cookie data
var mycookie = document.cookie
function setCurrState(setting) {
        mycookie = document.cookie = "currState=" + escape(setting)
}
// retrieve cookie data
function getCurrState() {
        var label = "currState="
        var labelLen = label.length
        var cLen = mycookie.length
        var i = 0
        while (i < cLen) {
                var j = i + labelLen
                if (mycookie.substring(i,j) == label) {
                        var cEnd = mycookie.indexOf(";",j)
                        if (cEnd ==     -1) {
                                cEnd = mycookie.length
                       }
                        return unescape(mycookie.substring(j,cEnd))
                }
               i++
       }
        return ""
}
// **function that updates persistent storage of state**
// toggles an outline mother entry, storing new value in the cookie
function toggle(n) {
	if (n != 0) {
		var newString = ""
		var currState = getCurrState() // of whole outline
		var expanded = currState.charAt(n-1) // of clicked item
		newString += currState.substring(0,n-1)
		newString += expanded ^ 1 // Bitwise XOR clicked item
		newString += currState.substring(n,currState.length)
		setCurrState(newString) // write new state back to cookie
	}
}
// **functions used in assembling updated outline**
// returns the proper GIF file name for each entry's control
function getGIF(n) {
	var mom = db[n].mother  // is entry a parent?
	var expanded = getCurrState().charAt(n-1) // of clicked item
	if (!mom) {
		return endpointWidget
	} else {
		if (expanded == 1) {
			return expandedWidget
		}
	}
	return collapsedWidget
}
// returns the proper status line text based on the icon style
function getGIFStatus(n) {
	var mom = db[n].mother  // is entry a parent
	var expanded = getCurrState().charAt(n-1) // of rolled item
	if (!mom) {
		return "No further items"
	} else {
		if (expanded == 1) {
			return "Click to collapse nested items"
		}
	}
	return "Click to expand nested items"
}
// initialize 'current state' storage field
if (getCurrState() == "" || getCurrState().length != (db.length-1)) {
	initState = ""
	for (i = 1; i < db.length; i++) {
		initState += "0"
	}
	setCurrState(initState)
}
// end -->

    </SCRIPT>
</HEAD>
<BODY>
<h3>T 444E Diesel Engine Diagnostics (NAVPAK) (1997)</h3>
<SCRIPT LANGUAGE="JavaScript1.1">
<!-- start
// build new outline based on the values of the cookie
// and data points in the outline data array.
// This fires each time the user clicks on a control,
// because the HREF for each one reloads the current document.
var newOutline = ""
var prevIndentDisplayed = 0
var showMyDaughter = 0
// cycle through each entry in the outline array
for (var i = 1; i < db.length; i++) {
	var theGIF = getGIF(i)				// get the image
	var theGIFStatus = getGIFStatus(i)  // get the status message
	var currIndent = db[i].indent		// get the indent level
	var expanded = getCurrState().charAt(i-1) // current state
        db[i].currentrow = ""

	if (currIndent == 0 || currIndent == 1 || db[i].currentrow == "currentrow" || currIndent <= prevIndentDisplayed || (showMyDaughter == 1 && (currIndent - prevIndentDisplayed == 1))) {
 // Phil added the if to remove the image from before the root element
         if (currIndent != 0) {
			newOutline += "<SPAN class=\"" + db[i].currentrow + "\" style=\" position:relative;left:" + (indentPixels * currIndent) + "px;width:200px\"><A HREF=\"javascript:history.go(0)\" onMouseOver=\"window.status=\'" + theGIFStatus + "\';return true;\" onClick=\"toggle(" + i + ");return " + "\">"
			newOutline += "<IMG ALIGN=TOP SRC=\"" + theGIF + "\" HEIGHT=" + widgetHeight + " WIDTH=" + widgetWidth + " BORDER=0></A>"
			newOutline += "<SPAN title=\"" + db[i].display + "\" style=\"width:" + (200-widgetWidth) + "px\">"
			}
			if (db[i].link == "" || db[i].link == null) {
				newOutline += " <small'>" +  db[i].display + "</small></SPAN></SPAN>" + "<BR>"	// no link, just a listed item
			} else {
                 if (db[i].occurances > 0)	{
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><small>" + db[i].display + "&nbsp;&nbsp;("
 + db[i].occurances + ")</small></A></SPAN></SPAN><BR>"
			} else {
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><small'>" + db[i].display + "</small></A></SPAN></SPAN><BR>"
			}
			}
		prevIndentDisplayed = currIndent
		showMyDaughter = expanded
		if (db.length > 25) {
			document.write(newOutline)
			newOutline = ""
		}
	}
}
document.write(newOutline)
// end -->

</SCRIPT>
</BODY>
</html>
