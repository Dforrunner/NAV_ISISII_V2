<HTML>
<HEAD>
    <TITLE>Service Section TOC</TITLE>
    <LINK href="../style.css" rel="STYLESHEET" type="text/css">
    <SCRIPT LANGUAGE="JavaScript1.1">
<!-- begin hiding
var indentPixels = 15
var collapsedWidget = "../images/plus.gif"
var expandedWidget = "../images/minus.gif"
var endpointWidget = "../images/end.gif"
var widgetWidth = 17
var widgetHeight = 18
var displayTarget = "mainframe"
// AHJO - In the folowing db the fourth field (after the xml file name) is new and set to "0" 
var db = new Array()
 db[1] = new dbRecord(true, "DT 466 / DT 570 / HT 570 Diesel Engine Diagnostic Manual - 2004 Emissions with EGR","eges270_1.xml","0",0,"","YES")
 db[2] = new dbRecord(true, "Engine Systems","eges270_E2700101.xml","0",0,"","YES")
 db[3] = new dbRecord(true, "Engine Identification","eges270_3.xml","0",1,"","")
 db[4] = new dbRecord(false, "Engine Serial Number","eges270_3.xml","0",2,"","YES")
 db[5] = new dbRecord(false, "Engine Emission Label","eges270_4.xml","0",2,"","YES")
 db[6] = new dbRecord(false, "Engine Description","eges270_5.xml","0",2,"","YES")
 db[7] = new dbRecord(false, "Engine Component Locations","eges270_6.xml","0",2,"","YES")
 db[8] = new dbRecord(true, "Engine Systems","eges270_7.xml","0",1,"","")
 db[9] = new dbRecord(false, "Engine System Diagram","eges270_7.xml","0",2,"","YES")
 db[10] = new dbRecord(true, "Air Management System","eges270_8.xml","0",1,"","")
 db[11] = new dbRecord(false, "Air Management Components and Air Flow","eges270_8.xml","0",2,"","YES")
 db[12] = new dbRecord(false, "Charge Air Cooler (CAC)","eges270_9.xml","0",2,"","YES")
 db[13] = new dbRecord(false, "Variable Geometry Turbocharger (VGT)","eges270_S265INTRO01.xml","0",2,"","YES")
 db[14] = new dbRecord(false, "Exhaust Gas Recirculation (EGR) System","eges270_11.xml","0",2,"","YES")
 db[15] = new dbRecord(false, "Exhaust System","eges270_12.xml","0",2,"","YES")
 db[16] = new dbRecord(true, "Fuel Management System","eges270_13.xml","0",1,"","")
 db[17] = new dbRecord(false, "Fuel Management Components","eges270_13.xml","0",2,"","YES")
 db[18] = new dbRecord(false, "Injection Control Pressure (ICP) System Components and High-Pressure Oil Flow","eges270_14.xml","0",2,"","YES")
 db[19] = new dbRecord(false, "Fuel Injectors","eges270_15.xml","0",2,"","YES")
 db[20] = new dbRecord(true, "Fuel Supply System","eges270_16.xml","0",1,"","")
 db[21] = new dbRecord(false, "Fuel System Components and Fuel Flow","eges270_16.xml","0",2,"","YES")
 db[22] = new dbRecord(false, "Fuel Flow Schematic","eges270_17.xml","0",2,"","YES")
 db[23] = new dbRecord(true, "Engine Lubrication System ","eges270_18.xml","0",1,"","")
 db[24] = new dbRecord(false, "Lubrication System Components and Oil Flow","eges270_18.xml","0",2,"","YES")
 db[25] = new dbRecord(true, "Cooling System","eges270_19.xml","0",1,"","")
 db[26] = new dbRecord(false, "Cooling System Components and Coolant Flow","eges270_19.xml","0",2,"","YES")
 db[27] = new dbRecord(true, "Electronic Control System","eges270_20.xml","0",1,"","")
 db[28] = new dbRecord(false, "Electronic Control System Components","eges270_20.xml","0",2,"","YES")
 db[29] = new dbRecord(false, "Injection Drive Module (IDM)","eges270_21.xml","0",2,"","YES")
 db[30] = new dbRecord(false, "Engine and Vehicle Sensors","eges270_22.xml","0",2,"","YES")
 db[31] = new dbRecord(true, "Diamond Logic&#174; Engine Brake","eges270_23.xml","0",1,"","")
 db[32] = new dbRecord(false, "Engine Brake Components","eges270_23.xml","0",2,"","YES")
 db[33] = new dbRecord(false, "Engine Brake Control","eges270_24.xml","0",2,"","YES")
 db[34] = new dbRecord(false, "Operation of Diamond Logic&#174; Engine Brake in Braking Mode","eges270_25.xml","0",2,"","YES")
 db[35] = new dbRecord(true, "Engine and Vehicle Features","eges270_E2700102.xml","0",0,"","YES")
 db[36] = new dbRecord(true, "Standard Features","eges270_27.xml","0",1,"","")
 db[37] = new dbRecord(false, "Electronic Governor Control","eges270_27.xml","0",2,"","YES")
 db[38] = new dbRecord(false, "American Trucking Association (ATA) Datalink ","eges270_28.xml","0",2,"","YES")
 db[39] = new dbRecord(false, "Service Diagnostics","eges270_29.xml","0",2,"","YES")
 db[40] = new dbRecord(false, "Event Logging System","eges270_30.xml","0",2,"","YES")
 db[41] = new dbRecord(false, "Electronic Speedometer and Tachometer","eges270_31.xml","0",2,"","YES")
 db[42] = new dbRecord(false, "Inlet Air Heater","eges270_32.xml","0",2,"","YES")
 db[43] = new dbRecord(false, "Fast Idle Advance","eges270_33.xml","0",2,"","YES")
 db[44] = new dbRecord(false, "Cold Ambient Protection (CAP)","eges270_34.xml","0",2,"","YES")
 db[45] = new dbRecord(false, "Coolant Temperature Compensation (Engine Over Temperature Protection System)","eges270_35.xml","0",2,"","YES")
 db[46] = new dbRecord(false, "Engine Crank Inhibit (ECI)","eges270_36.xml","0",2,"","YES")
 db[47] = new dbRecord(false, "Change Engine Oil Interval Message","eges270_37.xml","0",2,"","YES")
 db[48] = new dbRecord(true, "Optional Features","eges270_38.xml","0",1,"","")
 db[49] = new dbRecord(false, "Road Speed Limiting","eges270_38.xml","0",2,"","YES")
 db[50] = new dbRecord(false, "Cruise Control","eges270_39.xml","0",2,"","YES")
 db[51] = new dbRecord(false, "Engine Fuel Pressure (EFP) Monitor","eges270_40.xml","0",2,"","YES")
 db[52] = new dbRecord(false, "Traction Control","eges270_41.xml","0",2,"","YES")
 db[53] = new dbRecord(false, "Diamond Logic&#174; Engine Brake","eges270_42.xml","0",2,"","YES")
 db[54] = new dbRecord(false, "Diamond Logic&#174; Exhaust Brake","eges270_43.xml","0",2,"","YES")
 db[55] = new dbRecord(false, "Engine Warning Protection System (EWPS)","eges270_44.xml","0",2,"","YES")
 db[56] = new dbRecord(false, "Service Procedure","eges270_45.xml","0",2,"","YES")
 db[57] = new dbRecord(false, "Idle Shutdown Timer (IST)","eges270_46.xml","0",2,"","YES")
 db[58] = new dbRecord(false, "Electronic Fan (EFAN)","eges270_47.xml","0",2,"","YES")
 db[59] = new dbRecord(false, "Radiator Shutter Enable (RSE)","eges270_48.xml","0",2,"","YES")
 db[60] = new dbRecord(true, "Diagnostic Software Operation","eges270_E2700103.xml","0",0,"","YES")
 db[61] = new dbRecord(true, "Diagnostic Trouble Code Detection","eges270_50.xml","0",1,"","YES")
 db[62] = new dbRecord(false, "Continuous Monitor","eges270_51.xml","0",2,"","YES")
 db[63] = new dbRecord(true, "Diagnostic Trouble Codes ","eges270_52.xml","0",1,"","YES")
 db[64] = new dbRecord(false, "Using EST","eges270_53.xml","0",2,"","YES")
 db[65] = new dbRecord(false, "Using Cruise Switches","eges270_54.xml","0",2,"","YES")
 db[66] = new dbRecord(true, "Diagnostic Tests","eges270_55.xml","0",1,"","YES")
 db[67] = new dbRecord(false, "Key-On Engine-Off Tests","eges270_56.xml","0",2,"","YES")
 db[68] = new dbRecord(false, "Key-On Engine-Running Tests","eges270_57.xml","0",2,"","YES")
 db[69] = new dbRecord(false, "Injector Disable Tests","eges270_58.xml","0",2,"","YES")
 db[70] = new dbRecord(false, "Relative Compression","eges270_59.xml","0",2,"","YES")
 db[71] = new dbRecord(true, "Reset Change Engine Oil Interval Message","eges270_60.xml","0",1,"","")
 db[72] = new dbRecord(false, "Using EST","eges270_60.xml","0",2,"","YES")
 db[73] = new dbRecord(false, "Using Cruise Switches","eges270_61.xml","0",2,"","YES")
 db[74] = new dbRecord(true, "Engine Symptoms Diagnostics","eges270_E2700104.xml","0",0,"","YES")
 db[75] = new dbRecord(true, "Problems and Conditions","eges270_63.xml","0",1,"","YES")
 db[76] = new dbRecord(false, "Combustion Leaks to Coolant","eges270_63.xml","0",2,"","YES")
 db[77] = new dbRecord(false, "Aerated Fuel","eges270_64.xml","0",2,"","YES")
 db[78] = new dbRecord(false, "Coolant in Lube Oil","eges270_65.xml","0",2,"","YES")
 db[79] = new dbRecord(false, "ECM Reset / IDM Reset (intermittent engine stumble)","eges270_66.xml","0",2,"","YES")
 db[80] = new dbRecord(false, "Excessive Fuel Consumption","eges270_67.xml","0",2,"","YES")
 db[81] = new dbRecord(false, "Fuel in Coolant","eges270_68.xml","0",2,"","YES")
 db[82] = new dbRecord(false, "Coolant Leak to Exhaust","eges270_69.xml","0",2,"","YES")
 db[83] = new dbRecord(false, "Coolant Over-Temperature","eges270_70.xml","0",2,"","YES")
 db[84] = new dbRecord(false, "Lube Oil in Coolant","eges270_71.xml","0",2,"","YES")
 db[85] = new dbRecord(false, "Fuel in Lube Oil","eges270_72.xml","0",2,"","YES")
 db[86] = new dbRecord(false, "Low Oil Pressure","eges270_73.xml","0",2,"","YES")
 db[87] = new dbRecord(false, "Priming Fuel System","eges270_74.xml","0",2,"","YES")
 db[88] = new dbRecord(false, "Rough Idle","eges270_75.xml","0",2,"","YES")
 db[89] = new dbRecord(false, "Smoke","eges270_76.xml","0",2,"","YES")
 db[90] = new dbRecord(false, "Low Power (Turbocharger Assembly and Actuator)","eges270_77.xml","0",2,"","YES")
 db[91] = new dbRecord(true, "Hard Start and No Start Diagnostics","eges270_E2700105.xml","0",0,"","YES")
 db[92] = new dbRecord(false, "Description","eges270_E2700105.xml","0",1,"","YES")
 db[93] = new dbRecord(false, "Diagnostic Form Information","eges270_79.xml","0",1,"","YES")
 db[94] = new dbRecord(true, "Test Procedures","eges270_80.xml","0",1,"","")
 db[95] = new dbRecord(false, "1. Initial Ignition Switch ON (Do not start)","eges270_80.xml","0",2,"","YES")
 db[96] = new dbRecord(false, "2. Engine Cranking","eges270_81.xml","0",2,"","YES")
 db[97] = new dbRecord(false, "3. Diagnostic Trouble Codes","eges270_82.xml","0",2,"","YES")
 db[98] = new dbRecord(false, "4. KOEO Standard Test","eges270_83.xml","0",2,"","YES")
 db[99] = new dbRecord(false, "5. KOEO Injector Test","eges270_84.xml","0",2,"","YES")
 db[100] = new dbRecord(false, "6. EST Data List","eges270_85.xml","0",2,"","YES")
 db[101] = new dbRecord(false, "7. Fuel","eges270_86.xml","0",2,"","YES")
 db[102] = new dbRecord(false, "8. Engine Systems","eges270_87.xml","0",2,"","YES")
 db[103] = new dbRecord(false, "9. Engine Oil","eges270_88.xml","0",2,"","YES")
 db[104] = new dbRecord(false, "10. Intake and Exhaust Restriction","eges270_89.xml","0",2,"","YES")
 db[105] = new dbRecord(false, "11. Main Power Relay to ECM","eges270_90.xml","0",2,"","YES")
 db[106] = new dbRecord(false, "12. Main Power Relay to IDM","eges270_91.xml","0",2,"","YES")
 db[107] = new dbRecord(false, "13. Fuel Pressure and Aerated Fuel","eges270_92.xml","0",2,"","YES")
 db[108] = new dbRecord(false, "14. Low ICP System Pressure","eges270_93.xml","0",2,"","YES")
 db[109] = new dbRecord(false, "15. Inlet Air Heater System","eges270_94.xml","0",2,"","YES")
 db[110] = new dbRecord(true, "Performance Diagnostics","eges270_E2700106.xml","0",0,"","YES")
 db[111] = new dbRecord(false, "Description","eges270_E2700106.xml","0",1,"","YES")
 db[112] = new dbRecord(false, "Diagnostic Form Information","eges270_96.xml","0",1,"","YES")
 db[113] = new dbRecord(true, "Test Procedures","eges270_97.xml","0",1,"","")
 db[114] = new dbRecord(false, "1. Diagnostic Trouble Codes","eges270_98.xml","0",2,"","YES")
 db[115] = new dbRecord(false, "2. KOEO Standard Test","eges270_99.xml","0",2,"","YES")
 db[116] = new dbRecord(false, "3. KOEO Injector Test","eges270_100.xml","0",2,"","YES")
 db[117] = new dbRecord(false, "4. Engine Oil","eges270_101.xml","0",2,"","YES")
 db[118] = new dbRecord(false, "5. Fuel","eges270_102.xml","0",2,"","YES")
 db[119] = new dbRecord(false, "6. Fuel Pressure and Aerated Fuel","eges270_103.xml","0",2,"","YES")
 db[120] = new dbRecord(false, "7. Intake Restriction ","eges270_104.xml","0",2,"","YES")
 db[121] = new dbRecord(false, "8. Exhaust Restriction","eges270_105.xml","0",2,"","YES")
 db[122] = new dbRecord(false, "9. KOER Standard Test","eges270_106.xml","0",2,"","YES")
 db[123] = new dbRecord(false, "10. Injection Control Pressure","eges270_107.xml","0",2,"","YES")
 db[124] = new dbRecord(false, "11. Injector Disable Test","eges270_108.xml","0",2,"","YES")
 db[125] = new dbRecord(false, "12. Relative Compression","eges270_109.xml","0",2,"","YES")
 db[126] = new dbRecord(false, "13. Air Management","eges270_110.xml","0",2,"","YES")
 db[127] = new dbRecord(false, "14. VGT Test","eges270_111.xml","0",2,"","YES")
 db[128] = new dbRecord(false, "15. Torque Converter Stall (Automatic only)","eges270_112.xml","0",2,"","YES")
 db[129] = new dbRecord(false, "16. Crankcase Pressure","eges270_113.xml","0",2,"","YES")
 db[130] = new dbRecord(false, "17. Test Drive (Full load, rated speed)","eges270_114.xml","0",2,"","YES")
 db[131] = new dbRecord(false, "18. Valve Lash and Brake Lash","eges270_115.xml","0",2,"","YES")
 db[132] = new dbRecord(true, "Electronic Control Systems Diagnostics","eges270_E2700107.xml","0",0,"","YES")
 db[133] = new dbRecord(true, "Description","eges270_117.xml","0",1,"","")
 db[134] = new dbRecord(false, "Section Information","eges270_117.xml","0",2,"","YES")
 db[135] = new dbRecord(true, "Electronic Control System Diagnostics Form","eges270_118.xml","0",1,"","")
 db[136] = new dbRecord(false, "EGED-285 Diagnostic Form Example","eges270_118.xml","0",2,"","YES")
 db[137] = new dbRecord(true, "Sensor and Actuator Locations","eges270_119.xml","0",1,"","")
 db[138] = new dbRecord(false, "Engine Mounted Components","eges270_119.xml","0",2,"","YES")
 db[139] = new dbRecord(false, "Vehicle Mounted Components","eges270_120.xml","0",2,"","YES")
 db[140] = new dbRecord(true, "Diagnostic Procedures for Sensors and Actuators","eges270_121.xml","0",1,"","")
 db[141] = new dbRecord(false, "Pin Grip Inspection","eges270_121.xml","0",2,"","YES")
 db[142] = new dbRecord(false, "Operational Diagnostics","eges270_122.xml","0",2,"","YES")
 db[143] = new dbRecord(false, "Pin-Point Diagnostics","eges270_123.xml","0",2,"","YES")
 db[144] = new dbRecord(true, "Circuit Diagnostics","eges270_124.xml","0",1,"","")
 db[145] = new dbRecord(false, "AMS (Air Management System)","eges270_125.xml","0",2,"","YES")
 db[146] = new dbRecord(false, "APS/IVS (Accelerator Position Sensor and Idle Validation Switch)","eges270_126.xml","0",2,"","YES")
 db[147] = new dbRecord(false, "ATA Datalink (American Trucking Association)","eges270_127.xml","0",2,"","YES")
 db[148] = new dbRecord(false, "BAP Sensor (Barometric Absolute Pressure)","eges270_128.xml","0",2,"","YES")
 db[149] = new dbRecord(false, "BCP Sensor (Brake Control Pressure)","eges270_129.xml","0",2,"","YES")
 db[150] = new dbRecord(false, "Brake Shut-off Valve","eges270_130.xml","0",2,"","YES")
 db[151] = new dbRecord(false, "Brake Switch Circuit ","eges270_131.xml","0",2,"","YES")
 db[152] = new dbRecord(false, "CAN Communications (Controller Area Network)","eges270_132.xml","0",2,"","YES")
 db[153] = new dbRecord(false, "CKP Sensor (Crankshaft Position)","eges270_133.xml","0",2,"","YES")
 db[154] = new dbRecord(false, "CMP Sensor (Camshaft Position)","eges270_134.xml","0",2,"","YES")
 db[155] = new dbRecord(false, "EBP Sensor (Exhaust Back Pressure)","eges270_135.xml","0",2,"","YES")
 db[156] = new dbRecord(false, "ECI System (Engine Crank Inhibit)","eges270_136.xml","0",2,"","YES")
 db[157] = new dbRecord(false, "ECL Sensor (Engine Coolant Level)","eges270_137.xml","0",2,"","YES")
 db[158] = new dbRecord(false, "ECM / IDM Communications (Electronic Control Module / Injector Driver Module)","eges270_138.xml","0",2,"","YES")
 db[159] = new dbRecord(false, "ECM PWR (Electronic Control Module Power)","eges270_139.xml","0",2,"","YES")
 db[160] = new dbRecord(false, "Service Procedure","eges270_140.xml","0",2,"","YES")
 db[161] = new dbRecord(false, "ECT Sensor (Engine Coolant Temperature)","eges270_141.xml","0",2,"","YES")
 db[162] = new dbRecord(false, "EFAN Control (Engine Fan Control)","eges270_142.xml","0",2,"","YES")
 db[163] = new dbRecord(false, "EFP Sensor (Engine Fuel Pressure - optional)","eges270_143.xml","0",2,"","YES")
 db[164] = new dbRecord(false, "EGR Actuator (Exhaust Gas Recirculation)","eges270_144.xml","0",2,"","YES")
 db[165] = new dbRecord(false, "EOP Sensor (Engine Oil Pressure)","eges270_145.xml","0",2,"","YES")
 db[166] = new dbRecord(false, "EOT Sensor (Engine Oil Temperature)","eges270_146.xml","0",2,"","YES")
 db[167] = new dbRecord(false, "EWPS (Engine Warning and Protection System)","eges270_147.xml","0",2,"","YES")
 db[168] = new dbRecord(false, "IAH System (Inlet Air Heater)","eges270_148.xml","0",2,"","YES")
 db[169] = new dbRecord(false, "IAT Sensor (Intake Air Temperature)","eges270_149.xml","0",2,"","YES")
 db[170] = new dbRecord(false, "ICP Sensor (Injection Control Pressure)","eges270_150.xml","0",2,"","YES")
 db[171] = new dbRecord(false, "ICP System (Injection Control Pressure)","eges270_151.xml","0",2,"","YES")
 db[172] = new dbRecord(false, "IDM PWR (Injection Driver Module Power)","eges270_152.xml","0",2,"","YES")
 db[173] = new dbRecord(false, "INJ Circuits (Injector Drive)","eges270_153.xml","0",2,"","YES")
 db[174] = new dbRecord(false, "IPR (Injection Pressure Regulator)","eges270_154.xml","0",2,"","YES")
 db[175] = new dbRecord(false, "IST System (Idle Shutdown Timer)","eges270_155.xml","0",2,"","YES")
 db[176] = new dbRecord(false, "MAP Sensor (Manifold Absolute Pressure)","eges270_156.xml","0",2,"","YES")
 db[177] = new dbRecord(false, "MAT Sensor (Manifold Air Temperature)","eges270_157.xml","0",2,"","YES")
 db[178] = new dbRecord(false, "RSE (Radiator Shutter Enable)","eges270_158.xml","0",2,"","YES")
 db[179] = new dbRecord(false, "SCCS (Speed Control Command Switches)","eges270_159.xml","0",2,"","YES")
 db[180] = new dbRecord(false, "Tachometer Output Circuit","eges270_160.xml","0",2,"","YES")
 db[181] = new dbRecord(false, "VGT Actuator (Variable Geometry Turbocharger)","eges270_161.xml","0",2,"","YES")
 db[182] = new dbRecord(false, "V<subscript>REF</subscript> (Reference Voltage)","eges270_162.xml","0",2,"","YES")
 db[183] = new dbRecord(false, "VSS (Vehicle Speed Sensor)","eges270_163.xml","0",2,"","YES")
 db[184] = new dbRecord(false, "WIF Sensor (Water in Fuel)","eges270_164.xml","0",2,"","YES")
 db[185] = new dbRecord(true, "Diagnostic Tools and Accessories","eges270_E2700108.xml","0",0,"","YES")
 db[186] = new dbRecord(true, "Tools and Accessories","eges270_166.xml","0",1,"","")
 db[187] = new dbRecord(false, "EZ-Tech&#174;  Electronic Service Tool (EST)","eges270_166.xml","0",2,"","YES")
 db[188] = new dbRecord(false, "EZ-Tech&#174;  Interface Kit","eges270_167.xml","0",2,"","YES")
 db[189] = new dbRecord(false, "MasterDiagnostics&#174;  Software","eges270_168.xml","0",2,"","YES")
 db[190] = new dbRecord(false, "Digital Multimeter (Fluke 88)","eges270_169.xml","0",2,"","YES")
 db[191] = new dbRecord(false, "Amp Clamp","eges270_170.xml","0",2,"","YES")
 db[192] = new dbRecord(false, "96-Pin Breakout Box - DLC II","eges270_171.xml","0",2,"","YES")
 db[193] = new dbRecord(false, "Breakout Harness Kit","eges270_172.xml","0",2,"","YES")
 db[194] = new dbRecord(false, "3-Banana Plug Harness","eges270_173.xml","0",2,"","YES")
 db[195] = new dbRecord(false, "VC Gasket Breakout Harness","eges270_174.xml","0",2,"","YES")
 db[196] = new dbRecord(false, "UVC Sensor Breakout Harness","eges270_175.xml","0",2,"","YES")
 db[197] = new dbRecord(false, "4-Pin Injector Harness","eges270_176.xml","0",2,"","YES")
 db[198] = new dbRecord(false, "12-Pin Breakout Harness","eges270_177.xml","0",2,"","YES")
 db[199] = new dbRecord(false, "500 Ohm Resistor Harness","eges270_178.xml","0",2,"","YES")
 db[200] = new dbRecord(false, "Actuator Breakout Harness ","eges270_179.xml","0",2,"","YES")
 db[201] = new dbRecord(false, "APS/IVS Sensor Breakout Harness","eges270_180.xml","0",2,"","YES")
 db[202] = new dbRecord(false, "Pressure Sensor Breakout Harness ","eges270_181.xml","0",2,"","YES")
 db[203] = new dbRecord(false, "Relay Breakout Harness","eges270_182.xml","0",2,"","YES")
 db[204] = new dbRecord(false, "Relay Breakout Harness","eges270_183.xml","0",2,"","YES")
 db[205] = new dbRecord(false, "Temperature Sensor Breakout Harness","eges270_184.xml","0",2,"","YES")
 db[206] = new dbRecord(false, "Temperature Sensor Breakout Harness","eges270_185.xml","0",2,"","YES")
 db[207] = new dbRecord(false, "Turbo Breakout Harness","eges270_186.xml","0",2,"","YES")
 db[208] = new dbRecord(false, "EGR Valve Breakout Harness","eges270_187.xml","0",2,"","YES")
 db[209] = new dbRecord(false, "Terminal Test Adapter Kit","eges270_188.xml","0",2,"","YES")
 db[210] = new dbRecord(false, "Gauge Bar Tool","eges270_189.xml","0",2,"","YES")
 db[211] = new dbRecord(false, "Fuel Pressure Gauge","eges270_190.xml","0",2,"","YES")
 db[212] = new dbRecord(false, "Slack Tube Manometer","eges270_191.xml","0",2,"","YES")
 db[213] = new dbRecord(false, "Fuel Pressure Test Kit","eges270_192.xml","0",2,"","YES")
 db[214] = new dbRecord(false, "Fuel/Oil Pressure Test Coupler","eges270_193.xml","0",2,"","YES")
 db[215] = new dbRecord(false, "Fuel Test Fitting","eges270_194.xml","0",2,"","YES")
 db[216] = new dbRecord(false, "ICP System Test Adapter","eges270_195.xml","0",2,"","YES")
 db[217] = new dbRecord(false, "ICP Test Kit","eges270_196.xml","0",2,"","YES")
 db[218] = new dbRecord(false, "Inline Shut-off Valve","eges270_197.xml","0",2,"","YES")
 db[219] = new dbRecord(false, "Vacuum Pump and Gauge","eges270_198.xml","0",2,"","YES")
 db[220] = new dbRecord(false, "Charge Air Cooler Test Kit","eges270_199.xml","0",2,"","YES")
 db[221] = new dbRecord(false, "Crankcase Pressure Test Adapter","eges270_200.xml","0",2,"","YES")
 db[222] = new dbRecord(false, "UV Leak Detection Kit","eges270_201.xml","0",2,"","YES")
 db[223] = new dbRecord(true, "Electronic Circuit Testing","eges270_202.xml","0",1,"","")
 db[224] = new dbRecord(false, "Electrical Theory","eges270_203.xml","0",2,"","YES")
 db[225] = new dbRecord(false, "Using the Digital Multimeter","eges270_204.xml","0",2,"","YES")
 db[226] = new dbRecord(false, "Troubleshooting","eges270_205.xml","0",2,"","YES")
 db[227] = new dbRecord(true, "Abbreviations and Acronyms","eges270_E2700109.xml","0",0,"","YES")
 db[228] = new dbRecord(true, "Abbreviations and Acronyms","eges270_207.xml","0",1,"","")
 db[229] = new dbRecord(false, "Service Procedure","eges270_207.xml","0",2,"","YES")
 db[230] = new dbRecord(true, "Terminology","eges270_E2700110.xml","0",0,"","YES")
 db[231] = new dbRecord(true, "Terminology","eges270_209.xml","0",1,"","")
 db[232] = new dbRecord(false, "Service Procedure","eges270_209.xml","0",2,"","YES")
 db[233] = new dbRecord(true, "Appendix A: DT 466 Performance Specifications 2004 Model Year","eges270_E2700111.xml","0",0,"","YES")
 db[234] = new dbRecord(true, "DT 466 (Standard and High Torque - all ratings)","eges270_211.xml","0",1,"","")
 db[235] = new dbRecord(false, "Temperature, Fuel, and Lubrication","eges270_211.xml","0",2,"","YES")
 db[236] = new dbRecord(true, "DT 466 (Standard Torque)","eges270_212.xml","0",1,"","")
 db[237] = new dbRecord(false, "210 hp @ 2300 rpm (12NPL)","eges270_212.xml","0",2,"","YES")
 db[238] = new dbRecord(false, "220 hp @ 2300 rpm (12NPM)","eges270_213.xml","0",2,"","YES")
 db[239] = new dbRecord(false, "225 hp @ 2300 rpm (12NPN)","eges270_214.xml","0",2,"","YES")
 db[240] = new dbRecord(false, "245 hp @ 2300 rpm (12NPP)","eges270_215.xml","0",2,"","YES")
 db[241] = new dbRecord(true, "DT 466 (High Torque)","eges270_216.xml","0",1,"","")
 db[242] = new dbRecord(false, "225 hp @ 2300 rpm (12NPR)","eges270_216.xml","0",2,"","YES")
 db[243] = new dbRecord(false, "245 hp @ 2300 rpm (12NPS)","eges270_217.xml","0",2,"","YES")
 db[244] = new dbRecord(false, "255 hp @ 2300 rpm (12NPT)","eges270_218.xml","0",2,"","YES")
 db[245] = new dbRecord(false, "260 hp @ 2300 rpm (12NPU)","eges270_219.xml","0",2,"","YES")
 db[246] = new dbRecord(false, "285 hp @ 2300 rpm (12NPV)","eges270_220.xml","0",2,"","YES")
 db[247] = new dbRecord(false, "300 hp @ 2300 rpm (12NPX)","eges270_221.xml","0",2,"","YES")
 db[248] = new dbRecord(true, "Appendix B: DT 570 and HT 570 Performance Specifications 2004 Model Year","eges270_E2700112.xml","0",0,"","YES")
 db[249] = new dbRecord(true, "DT 570 and HT 570 (all ratings)","eges270_223.xml","0",1,"","")
 db[250] = new dbRecord(false, "Temperature, Fuel, and Lubrication","eges270_223.xml","0",2,"","YES")
 db[251] = new dbRecord(true, "DT 570 (Standard Torque)","eges270_224.xml","0",1,"","")
 db[252] = new dbRecord(false, "12NPW (285 hp @ 2000 rpm)","eges270_224.xml","0",2,"","YES")
 db[253] = new dbRecord(false, "12NPZ (310 hp @ 2000 rpm)","eges270_225.xml","0",2,"","YES")
 db[254] = new dbRecord(false, "12NRB (330 hp @ 2000 rpm)","eges270_226.xml","0",2,"","YES")
 db[255] = new dbRecord(true, "HT 570 (High Torque)","eges270_227.xml","0",1,"","")
 db[256] = new dbRecord(false, "12NRC (295 hp @ 2000 rpm)","eges270_227.xml","0",2,"","YES")
 db[257] = new dbRecord(false, "12NRD (295 hp @ 2000 rpm)","eges270_228.xml","0",2,"","YES")
 db[258] = new dbRecord(false, "12NRE (310 hp @ 2000 rpm)","eges270_229.xml","0",2,"","YES")
 db[259] = new dbRecord(false, "12NRA 300 hp @ 2000 rpm","eges270_230.xml","0",2,"","YES")
 db[260] = new dbRecord(false, "12NRG (310 hp @ 2000 rpm)","eges270_231.xml","0",2,"","YES")
 db[261] = new dbRecord(false, "12NRH (330 hp @ 2000 rpm)","eges270_232.xml","0",2,"","YES")
 db[262] = new dbRecord(false, "12NRZ (340 hp @ 2000 rpm)","eges270_233.xml","0",2,"","YES")
 db[263] = new dbRecord(true, "Appendix C: Diagnostic Trouble Code Index","eges270_E2700113.xml","0",0,"","YES")
 db[264] = new dbRecord(false, "Diagnostic Trouble Code Index","eges270_FC.xml","0",1,"","YES")
 db[265] = new dbRecord(false, "Appendix D: Technical Service Information (TSI)","eges270_E2700114.xml","0",0,"","YES")
// AHJO - In the following function the parameter 'occurs' was added Oct/Nov 2001
function dbRecord(mother,display,URL,occurs,indent,statusMsg,link){
	this.mother = mother   // is this item a parent?
	this.display = display // text to display
	this.URL = URL         // used to link to TOC
	this.occurances =  occurs  // how many times does search occur - THIS LINE WAS ADDED by AHJO
	this.indent = indent   // how many levels nested?
	this.statusMsg = statusMsg  // descriptive text for status bar 
	this.link = link  //  link tied to text; if empty string, item appears as straight text
	return this
}
// pre-load all images into cache
var collapsedImg = new Image(widgetWidth,widgetHeight)
collapsedImg.src = collapsedWidget
var expandedImg = new Image(widgetWidth,widgetHeight)
expandedImg.src = expandedWidget
var endpointImg = new Image(widgetWidth,widgetHeight)
endpointImg.src = endpointWidget
// mainframeURL = parent.mainframe.document.URL // get URL of mainframe 
// ** functions that get and set persistent cookie data **
// set cookie data
var mycookie = document.cookie
function setCurrState(setting) {
        mycookie = document.cookie = "currState=" + escape(setting)
}
// retrieve cookie data
function getCurrState() {
        var label = "currState="
        var labelLen = label.length
        var cLen = mycookie.length
        var i = 0
        while (i < cLen) {
                var j = i + labelLen
                if (mycookie.substring(i,j) == label) {
                        var cEnd = mycookie.indexOf(";",j)
                        if (cEnd ==     -1) {
                                cEnd = mycookie.length
                       }
                        return unescape(mycookie.substring(j,cEnd))
                }
               i++
       }
        return ""
}
// **function that updates persistent storage of state**
// toggles an outline mother entry, storing new value in the cookie
function toggle(n) {
	if (n != 0) {
		var newString = ""
		var currState = getCurrState() // of whole outline
		var expanded = currState.charAt(n-1) // of clicked item
		newString += currState.substring(0,n-1)
		newString += expanded ^ 1 // Bitwise XOR clicked item
		newString += currState.substring(n,currState.length)
		setCurrState(newString) // write new state back to cookie
	}
}
// **functions used in assembling updated outline**
// returns the proper GIF file name for each entry's control
function getGIF(n) {
	var mom = db[n].mother  // is entry a parent?
	var expanded = getCurrState().charAt(n-1) // of clicked item
	if (!mom) {
		return endpointWidget
	} else {
		if (expanded == 1) {
			return expandedWidget
		}
	}
	return collapsedWidget
}
// returns the proper status line text based on the icon style
function getGIFStatus(n) {
	var mom = db[n].mother  // is entry a parent
	var expanded = getCurrState().charAt(n-1) // of rolled item
	if (!mom) {
		return "No further items"
	} else {
		if (expanded == 1) {
			return "Click to collapse nested items"
		}
	}
	return "Click to expand nested items"
}
// initialize 'current state' storage field
if (getCurrState() == "" || getCurrState().length != (db.length-1)) {
	initState = ""
	for (i = 1; i < db.length; i++) {
		initState += "0"
	}
	setCurrState(initState)
}
// end -->

    </SCRIPT>
</HEAD>
<BODY>
<h3>DT 466 / DT 570 / HT 570 Diesel Engine Diagnostic Manual - 2004 Emissions with EGR</h3>
<SCRIPT LANGUAGE="JavaScript1.1">
<!-- start
// build new outline based on the values of the cookie
// and data points in the outline data array.
// This fires each time the user clicks on a control,
// because the HREF for each one reloads the current document.
var newOutline = ""
var prevIndentDisplayed = 0
var showMyDaughter = 0
// cycle through each entry in the outline array
for (var i = 1; i < db.length; i++) {
	var theGIF = getGIF(i)				// get the image
	var theGIFStatus = getGIFStatus(i)  // get the status message
	var currIndent = db[i].indent		// get the indent level
	var expanded = getCurrState().charAt(i-1) // current state
        db[i].currentrow = ""

	if (currIndent == 0 || currIndent == 1 || db[i].currentrow == "currentrow" || currIndent <= prevIndentDisplayed || (showMyDaughter == 1 && (currIndent - prevIndentDisplayed == 1))) {
 // Phil added the if to remove the image from before the root element
         if (currIndent != 0) {
			newOutline += "<SPAN class=\"" + db[i].currentrow + "\" style=\" position:relative;left:" + (indentPixels * currIndent) + "px;width:200px\"><A HREF=\"javascript:history.go(0)\" onMouseOver=\"window.status=\'" + theGIFStatus + "\';return true;\" onClick=\"toggle(" + i + ");return " + "\">"
			newOutline += "<IMG ALIGN=TOP SRC=\"" + theGIF + "\" HEIGHT=" + widgetHeight + " WIDTH=" + widgetWidth + " BORDER=0></A>"
			newOutline += "<SPAN title=\"" + db[i].display + "\" style=\"width:" + (200-widgetWidth) + "px\">"
			}
			if (db[i].link == "" || db[i].link == null) {
				newOutline += " <small'>" +  db[i].display + "</small></SPAN></SPAN>" + "<BR>"	// no link, just a listed item
			} else {
                 if (db[i].occurances > 0)	{
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><small>" + db[i].display + "&nbsp;&nbsp;("
 + db[i].occurances + ")</small></A></SPAN></SPAN><BR>"
			} else {
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><small'>" + db[i].display + "</small></A></SPAN></SPAN><BR>"
			}
			}
		prevIndentDisplayed = currIndent
		showMyDaughter = expanded
		if (db.length > 25) {
			document.write(newOutline)
			newOutline = ""
		}
	}
}
document.write(newOutline)
// end -->

</SCRIPT>
</BODY>
</html>
