<HTML>
<HEAD>
    <TITLE>Service Section TOC</TITLE>
    <LINK href="../style.css" rel="STYLESHEET" type="text/css">
    <SCRIPT LANGUAGE="JavaScript1.1">
<!-- begin hiding
var indentPixels = 15
var collapsedWidget = "../images/plus.gif"
var expandedWidget = "../images/minus.gif"
var endpointWidget = "../images/end.gif"
var widgetWidth = 17
var widgetHeight = 18
var displayTarget = "mainframe"
// AHJO - In the folowing db the fourth field (after the xml file name) is new and set to "0" 
var db = new Array()
 db[1] = new dbRecord(true, "Cab: 7300, 7400, 7500, 7600, 7700, 8500 And 8600 Models","s160295_1.xml","0",0,"","YES")
 db[2] = new dbRecord(true, "Description","s160295_2.xml","0",1,"","")
 db[3] = new dbRecord(false, "Standard Cab, extended cab and crew cab","s160295_2.xml","0",2,"","YES")
 db[4] = new dbRecord(false, "Vehicle Identification Number (vin) Tag Location","s160295_3.xml","0",2,"","YES")
 db[5] = new dbRecord(false, "Electric Windshield Wipers","s160295_4.xml","0",2,"","YES")
 db[6] = new dbRecord(false, "Windshield Washer","s160295_5.xml","0",2,"","YES")
 db[7] = new dbRecord(true, "Operation","s160295_6.xml","0",1,"","")
 db[8] = new dbRecord(false, "ELECTRIC WINDSHIELD WIPERS","s160295_6.xml","0",2,"","YES")
 db[9] = new dbRecord(false, "Windshield Washer","s160295_7.xml","0",2,"","YES")
 db[10] = new dbRecord(true, "Maintenance","s160295_8.xml","0",1,"","")
 db[11] = new dbRecord(false, "WINDSHIELD WASHER","s160295_8.xml","0",2,"","YES")
 db[12] = new dbRecord(false, "Cab Mounting Hardware","s160295_9.xml","0",2,"","YES")
 db[13] = new dbRecord(false, "Cab Air Suspension Fasteners And Air Line Fittings","s160295_10.xml","0",2,"","YES")
 db[14] = new dbRecord(true, "Remove","s160295_11.xml","0",1,"","")
 db[15] = new dbRecord(false, "One Piece Encapsulated Windshield","s160295_12.xml","0",2,"","YES")
 db[16] = new dbRecord(false, "REAR WINDOW GLASS on vehicles with unobstructed access from the outside","s160295_13.xml","0",2,"","YES")
 db[17] = new dbRecord(false, "REAR WINDOW GLASS ON VEHICLES WITH obstructed access from the outside","s160295_14.xml","0",2,"","YES")
 db[18] = new dbRecord(false, "Hood Seal","s160295_15.xml","0",2,"","YES")
 db[19] = new dbRecord(false, "Sun Shade","s160295_X1602901.xml","0",2,"","YES")
 db[20] = new dbRecord(false, "Sun Visor And Clip","s160295_X1602902.xml","0",2,"","YES")
 db[21] = new dbRecord(false, "Ignition Switch And Ignition Switch Cylinder","s160295_18.xml","0",2,"","YES")
 db[22] = new dbRecord(false, "Instrument Panel","s160295_19.xml","0",2,"","YES")
 db[23] = new dbRecord(false, "Cab Doors","s160295_X1602903.xml","0",2,"","YES")
 db[24] = new dbRecord(false, "Cab Door Hinge","s160295_21.xml","0",2,"","YES")
 db[25] = new dbRecord(false, "Cab Door Striker Pin","s160295_22.xml","0",2,"","YES")
 db[26] = new dbRecord(false, "Cab Door Check Bracket","s160295_23.xml","0",2,"","YES")
 db[27] = new dbRecord(false, "Cab Door Check Link","s160295_24.xml","0",2,"","YES")
 db[28] = new dbRecord(false, "Cab Door Trim Panel","s160295_X1602904.xml","0",2,"","YES")
 db[29] = new dbRecord(false, "Cab Door Inner Door Panel Water Shield","s160295_X1602905.xml","0",2,"","YES")
 db[30] = new dbRecord(false, "Cab Door Window Slide Block","s160295_27.xml","0",2,"","YES")
 db[31] = new dbRecord(false, "Cab Door Glass","s160295_X1602906.xml","0",2,"","YES")
 db[32] = new dbRecord(false, "Modular Door Hardware Assembly","s160295_X1602907.xml","0",2,"","YES")
 db[33] = new dbRecord(false, "Cab Door Vent Window","s160295_X1602908.xml","0",2,"","YES")
 db[34] = new dbRecord(false, "Cab Door Vent Window Hinge","s160295_31.xml","0",2,"","YES")
 db[35] = new dbRecord(false, "Cab Door Vent Window Seal","s160295_32.xml","0",2,"","YES")
 db[36] = new dbRecord(false, "Cab Door Lock Cylinder","s160295_X1602909.xml","0",2,"","YES")
 db[37] = new dbRecord(false, "Cab Door Window Electric Motor","s160295_X1602910.xml","0",2,"","YES")
 db[38] = new dbRecord(false, "Cab Door Window Regulator Arm Assembly","s160295_35.xml","0",2,"","YES")
 db[39] = new dbRecord(false, "Outer Cab Door Handle","s160295_X1602911.xml","0",2,"","YES")
 db[40] = new dbRecord(false, "Cab Door Latch","s160295_X1602912.xml","0",2,"","YES")
 db[41] = new dbRecord(false, "Inner Cab Door Handle","s160295_38.xml","0",2,"","YES")
 db[42] = new dbRecord(false, "Cab Door Window Run Channels","s160295_39.xml","0",2,"","YES")
 db[43] = new dbRecord(false, "Cab Door Electric Window And Door Lock Switch","s160295_40.xml","0",2,"","YES")
 db[44] = new dbRecord(false, "Cab Door Electric Mirror Switch","s160295_41.xml","0",2,"","YES")
 db[45] = new dbRecord(false, "Seats","s160295_X1602913.xml","0",2,"","YES")
 db[46] = new dbRecord(false, "Cab Door Opening Scuff Plate And Seat Belt Retractor Cover","s160295_X1602914.xml","0",2,"","YES")
 db[47] = new dbRecord(false, "Extended Cab Bunk/storage Unit","s160295_X1602915.xml","0",2,"","YES")
 db[48] = new dbRecord(false, "Corner And Side Interior Trim Panel","s160295_X1602916.xml","0",2,"","YES")
 db[49] = new dbRecord(false, "extended CAB Rear Side Window","s160295_46.xml","0",2,"","YES")
 db[50] = new dbRecord(false, "Rear Interior Trim Panel","s160295_47.xml","0",2,"","YES")
 db[51] = new dbRecord(false, "Header Console Panel","s160295_X1602917.xml","0",2,"","YES")
 db[52] = new dbRecord(false, "Headliner Trim Panel","s160295_49.xml","0",2,"","YES")
 db[53] = new dbRecord(false, "Crew cab B Pillar trim panel","s160295_50.xml","0",2,"","YES")
 db[54] = new dbRecord(false, "Cab Door Opening Weather Seals","s160295_51.xml","0",2,"","YES")
 db[55] = new dbRecord(false, "Windshield Wiper Arm And Blade Assembly","s160295_X1602918.xml","0",2,"","YES")
 db[56] = new dbRecord(false, "Cab Cowl Tray","s160295_X1602919.xml","0",2,"","YES")
 db[57] = new dbRecord(false, "Windshield Wiper Assembly","s160295_54.xml","0",2,"","YES")
 db[58] = new dbRecord(false, "Electric Windshield Wiper Motor","s160295_55.xml","0",2,"","YES")
 db[59] = new dbRecord(false, "Windshield Washer Bottle With Pump Motor","s160295_56.xml","0",2,"","YES")
 db[60] = new dbRecord(false, "Windshield Washer Pump Motor","s160295_57.xml","0",2,"","YES")
 db[61] = new dbRecord(false, "ENGINE COVER and cup holder","s160295_58.xml","0",2,"","YES")
 db[62] = new dbRecord(false, "Cab","s160295_59.xml","0",2,"","YES")
 db[63] = new dbRecord(false, "CAB AIR SUSPENSION system for 7300, 7400 and 7500 DAY CAB and extended cab models","s160295_60.xml","0",2,"","YES")
 db[64] = new dbRecord(false, "CAB AIR SUSPENSION system for 7300 and 7400 crew cab models","s160295_61.xml","0",2,"","YES")
 db[65] = new dbRecord(false, "CAB AIR SUSPENSION system for 7600 DAY CAB and extended cab models","s160295_62.xml","0",2,"","YES")
 db[66] = new dbRecord(false, "CAB AIR SUSPENSION system for 7600 DAY CAB and extended cab model with rear pto and some engine options AND 7700 DAY CAB MODEL AFTER MARCH 2005","s160295_63.xml","0",2,"","YES")
 db[67] = new dbRecord(false, "CAB AIR SUSPENSION system for 8500 DAY CAB and extended cab models","s160295_64.xml","0",2,"","YES")
 db[68] = new dbRecord(false, "CAB AIR SUSPENSION system for 8600 DAY CAB and extended cab models","s160295_65.xml","0",2,"","YES")
 db[69] = new dbRecord(true, "Install","s160295_66.xml","0",1,"","")
 db[70] = new dbRecord(false, "One Piece Encapsulated Windshield","s160295_67.xml","0",2,"","YES")
 db[71] = new dbRecord(false, "REAR WINDOW GLASS ON VEHICLES with unobstructed access from the outside","s160295_68.xml","0",2,"","YES")
 db[72] = new dbRecord(false, "REAR WINDOW GLASS ON VEHICLES WITH obstructed access from the outside","s160295_69.xml","0",2,"","YES")
 db[73] = new dbRecord(false, "Hood Seal","s160295_70.xml","0",2,"","YES")
 db[74] = new dbRecord(false, "Sun Shade","s160295_X1602921.xml","0",2,"","YES")
 db[75] = new dbRecord(false, "Sun Visor And Clip","s160295_X1602922.xml","0",2,"","YES")
 db[76] = new dbRecord(false, "Ignition Switch And Ignition Switch Cylinder","s160295_73.xml","0",2,"","YES")
 db[77] = new dbRecord(false, "Instrument Panel","s160295_74.xml","0",2,"","YES")
 db[78] = new dbRecord(false, "Cab Doors","s160295_X1602923.xml","0",2,"","YES")
 db[79] = new dbRecord(false, "Cab Door Hinge","s160295_76.xml","0",2,"","YES")
 db[80] = new dbRecord(false, "Cab Door Striker Pin","s160295_77.xml","0",2,"","YES")
 db[81] = new dbRecord(false, "Cab Door Check Bracket","s160295_78.xml","0",2,"","YES")
 db[82] = new dbRecord(false, "Cab Door Check Link","s160295_79.xml","0",2,"","YES")
 db[83] = new dbRecord(false, "Cab Door Trim Panel","s160295_X1602924.xml","0",2,"","YES")
 db[84] = new dbRecord(false, "Cab Door Inner Door Panel Water Shield","s160295_X1602925.xml","0",2,"","YES")
 db[85] = new dbRecord(false, "Cab Door Window Slide Block","s160295_82.xml","0",2,"","YES")
 db[86] = new dbRecord(false, "Cab Door Glass","s160295_X1602926.xml","0",2,"","YES")
 db[87] = new dbRecord(false, "Modular Door Hardware Assembly","s160295_X1602927.xml","0",2,"","YES")
 db[88] = new dbRecord(false, "Cab Door Vent Window","s160295_X1602928.xml","0",2,"","YES")
 db[89] = new dbRecord(false, "Cab Door Vent Window Hinge","s160295_86.xml","0",2,"","YES")
 db[90] = new dbRecord(false, "Cab Door Vent Window Seal","s160295_87.xml","0",2,"","YES")
 db[91] = new dbRecord(false, "Cab Door Lock Cylinder","s160295_X1602929.xml","0",2,"","YES")
 db[92] = new dbRecord(false, "Cab Door Window Electric Motor","s160295_X1602930.xml","0",2,"","YES")
 db[93] = new dbRecord(false, "Cab Door Window Regulator Arm Assembly","s160295_90.xml","0",2,"","YES")
 db[94] = new dbRecord(false, "Outer Cab Door Handle","s160295_X1602931.xml","0",2,"","YES")
 db[95] = new dbRecord(false, "Cab Door Latch","s160295_X1602932.xml","0",2,"","YES")
 db[96] = new dbRecord(false, "Inner Cab Door Handle","s160295_93.xml","0",2,"","YES")
 db[97] = new dbRecord(false, "Cab Door Window Run Channels","s160295_94.xml","0",2,"","YES")
 db[98] = new dbRecord(false, "Cab Door Electric Window And Door Lock Switch","s160295_95.xml","0",2,"","YES")
 db[99] = new dbRecord(false, "Cab Door Electric Mirror Switch","s160295_96.xml","0",2,"","YES")
 db[100] = new dbRecord(false, "Seats","s160295_X1602933.xml","0",2,"","YES")
 db[101] = new dbRecord(false, "Cab Door Opening Scuff Plate And Seat Belt Retractor Cover","s160295_X1602934.xml","0",2,"","YES")
 db[102] = new dbRecord(false, "Extended Cab Bunk/storage Unit","s160295_X1602935.xml","0",2,"","YES")
 db[103] = new dbRecord(false, "Corner And Side Interior Trim Panel","s160295_X1602936.xml","0",2,"","YES")
 db[104] = new dbRecord(false, "Extended Cab Rear Side Window","s160295_101.xml","0",2,"","YES")
 db[105] = new dbRecord(false, "Rear Interior Trim Panel","s160295_102.xml","0",2,"","YES")
 db[106] = new dbRecord(false, "Header Console Panel","s160295_X1602937.xml","0",2,"","YES")
 db[107] = new dbRecord(false, "Headliner Trim Panel","s160295_104.xml","0",2,"","YES")
 db[108] = new dbRecord(false, "Crew cab B Pillar trim panel","s160295_105.xml","0",2,"","YES")
 db[109] = new dbRecord(false, "CAB DOOR opening WEATHER SEALS","s160295_106.xml","0",2,"","YES")
 db[110] = new dbRecord(false, "Windshield Wiper Arm And Blade Assembly","s160295_X1602938.xml","0",2,"","YES")
 db[111] = new dbRecord(false, "Cab Cowl Tray","s160295_X1602939.xml","0",2,"","YES")
 db[112] = new dbRecord(false, "Windshield Wiper Assembly","s160295_109.xml","0",2,"","YES")
 db[113] = new dbRecord(false, "Electric Windshield Wiper Motor","s160295_110.xml","0",2,"","YES")
 db[114] = new dbRecord(false, "WINDSHIELD WASHER BOTTLE with PUMP MOTOR","s160295_111.xml","0",2,"","YES")
 db[115] = new dbRecord(false, "Windshield Washer Pump Motor","s160295_112.xml","0",2,"","YES")
 db[116] = new dbRecord(false, "ENGINE COVER and cup holder","s160295_113.xml","0",2,"","YES")
 db[117] = new dbRecord(false, "Cab","s160295_114.xml","0",2,"","YES")
 db[118] = new dbRecord(false, "CAB AIR SUSPENSION system for 7300, 7400 and 7500 DAY CAB and extended cab models","s160295_115.xml","0",2,"","YES")
 db[119] = new dbRecord(false, "CAB AIR SUSPENSION system for 7300 and 7400 crew cab models","s160295_116.xml","0",2,"","YES")
 db[120] = new dbRecord(false, "CAB AIR SUSPENSION system for 7600 DAY CAB and extended cab models","s160295_117.xml","0",2,"","YES")
 db[121] = new dbRecord(false, "CAB AIR SUSPENSION system for 7600 DAY CAB and extended cab model with rear pto and some engine options AND 7700 DAY CAB MODEL AFTER MARCH 2005","s160295_118.xml","0",2,"","YES")
 db[122] = new dbRecord(false, "CAB AIR SUSPENSION system for 8500 DAY CAB and extended cab models","s160295_119.xml","0",2,"","YES")
 db[123] = new dbRecord(false, "CAB AIR SUSPENSION system for 8600 DAY CAB and extended cab models","s160295_120.xml","0",2,"","YES")
 db[124] = new dbRecord(true, "Troubleshooting","s160295_121.xml","0",1,"","")
 db[125] = new dbRecord(false, "ELECTRIC WINDSHIELD WIPER MOTOR","s160295_121.xml","0",2,"","YES")
 db[126] = new dbRecord(false, "Washer Pump Motor","s160295_122.xml","0",2,"","YES")
 db[127] = new dbRecord(false, "CAB AIR SUSPENSION SYSTEM FOR 7300, 7400, 7500, 7600, 7700, 8500 and 8600 models","s160295_123.xml","0",2,"","YES")
 db[128] = new dbRecord(true, "Lubrication","s160295_124.xml","0",1,"","YES")
 db[129] = new dbRecord(false, "4000 MILES (6000 km) OR MONTHLY","s160295_124.xml","0",2,"","YES")
 db[130] = new dbRecord(false, "As Required","s160295_125.xml","0",2,"","YES")
 db[131] = new dbRecord(true, "Adjustments","s160295_126.xml","0",1,"","YES")
 db[132] = new dbRecord(false, "Cab Squaring","s160295_X16029201.xml","0",2,"","YES")
 db[133] = new dbRecord(false, "Cab Door","s160295_X16029202.xml","0",2,"","YES")
 db[134] = new dbRecord(false, "Hinge At Cab Hinge Pillar","s160295_X16029203.xml","0",2,"","YES")
 db[135] = new dbRecord(false, "Striker Pin At Lock Pillar","s160295_X16029204.xml","0",2,"","YES")
 db[136] = new dbRecord(false, "Windshield Wiper Arm And Blade Assembly","s160295_X16029205.xml","0",2,"","YES")
 db[137] = new dbRecord(false, "Cab Air Suspension","s160295_132.xml","0",2,"","YES")
 db[138] = new dbRecord(true, "Forms","s160295_133.xml","0",1,"","")
 db[139] = new dbRecord(false, "BONDED WINDSHIELD REPLACEMENT REPORT","s160295_133.xml","0",2,"","YES")
 db[140] = new dbRecord(true, "Torque","s160295_134.xml","0",1,"","")
 db[141] = new dbRecord(false, "TORQUE CHART","s160295_X16029301.xml","0",2,"","YES")
// AHJO - In the following function the parameter 'occurs' was added Oct/Nov 2001
function dbRecord(mother,display,URL,occurs,indent,statusMsg,link){
	this.mother = mother   // is this item a parent?
	this.display = display // text to display
	this.URL = URL         // used to link to TOC
	this.occurances =  occurs  // how many times does search occur - THIS LINE WAS ADDED by AHJO
	this.indent = indent   // how many levels nested?
	this.statusMsg = statusMsg  // descriptive text for status bar 
	this.link = link  //  link tied to text; if empty string, item appears as straight text
	return this
}
// pre-load all images into cache
var collapsedImg = new Image(widgetWidth,widgetHeight)
collapsedImg.src = collapsedWidget
var expandedImg = new Image(widgetWidth,widgetHeight)
expandedImg.src = expandedWidget
var endpointImg = new Image(widgetWidth,widgetHeight)
endpointImg.src = endpointWidget
// mainframeURL = parent.mainframe.document.URL // get URL of mainframe 
// ** functions that get and set persistent cookie data **
// set cookie data
var mycookie = document.cookie
function setCurrState(setting) {
        mycookie = document.cookie = "currState=" + escape(setting)
}
// retrieve cookie data
function getCurrState() {
        var label = "currState="
        var labelLen = label.length
        var cLen = mycookie.length
        var i = 0
        while (i < cLen) {
                var j = i + labelLen
                if (mycookie.substring(i,j) == label) {
                        var cEnd = mycookie.indexOf(";",j)
                        if (cEnd ==     -1) {
                                cEnd = mycookie.length
                       }
                        return unescape(mycookie.substring(j,cEnd))
                }
               i++
       }
        return ""
}
// **function that updates persistent storage of state**
// toggles an outline mother entry, storing new value in the cookie
function toggle(n) {
	if (n != 0) {
		var newString = ""
		var currState = getCurrState() // of whole outline
		var expanded = currState.charAt(n-1) // of clicked item
		newString += currState.substring(0,n-1)
		newString += expanded ^ 1 // Bitwise XOR clicked item
		newString += currState.substring(n,currState.length)
		setCurrState(newString) // write new state back to cookie
	}
}
// **functions used in assembling updated outline**
// returns the proper GIF file name for each entry's control
function getGIF(n) {
	var mom = db[n].mother  // is entry a parent?
	var expanded = getCurrState().charAt(n-1) // of clicked item
	if (!mom) {
		return endpointWidget
	} else {
		if (expanded == 1) {
			return expandedWidget
		}
	}
	return collapsedWidget
}
// returns the proper status line text based on the icon style
function getGIFStatus(n) {
	var mom = db[n].mother  // is entry a parent
	var expanded = getCurrState().charAt(n-1) // of rolled item
	if (!mom) {
		return "No further items"
	} else {
		if (expanded == 1) {
			return "Click to collapse nested items"
		}
	}
	return "Click to expand nested items"
}
// initialize 'current state' storage field
if (getCurrState() == "" || getCurrState().length != (db.length-1)) {
	initState = ""
	for (i = 1; i < db.length; i++) {
		initState += "0"
	}
	setCurrState(initState)
}
// end -->

    </SCRIPT>
</HEAD>
<BODY>
<SCRIPT LANGUAGE="JavaScript1.1">
<!-- start
// build new outline based on the values of the cookie
// and data points in the outline data array.
// This fires each time the user clicks on a control,
// because the HREF for each one reloads the current document.
var newOutline = ""
var prevIndentDisplayed = 0
var showMyDaughter = 0
// cycle through each entry in the outline array
for (var i = 1; i < db.length; i++) {
	var theGIF = getGIF(i)				// get the image
	var theGIFStatus = getGIFStatus(i)  // get the status message
	var currIndent = db[i].indent		// get the indent level
	var expanded = getCurrState().charAt(i-1) // current state
        db[i].currentrow = ""

	if (currIndent == 0 || currIndent == 1 || db[i].currentrow == "currentrow" || currIndent <= prevIndentDisplayed || (showMyDaughter == 1 && (currIndent - prevIndentDisplayed == 1))) {
 // Phil added the if to remove the image from before the root element
         if (currIndent != 0) {
			newOutline += "<SPAN class=\"" + db[i].currentrow + "\" style=\" position:relative;left:" + (indentPixels * currIndent) + "px;width:200px\"><A HREF=\"javascript:history.go(0)\" onMouseOver=\"window.status=\'" + theGIFStatus + "\';return true;\" onClick=\"toggle(" + i + ");return " + "\">"
			newOutline += "<IMG ALIGN=TOP SRC=\"" + theGIF + "\" HEIGHT=" + widgetHeight + " WIDTH=" + widgetWidth + " BORDER=0></A>"
			newOutline += "<SPAN title=\"" + db[i].display + "\" style=\"width:" + (200-widgetWidth) + "px\">"
			}
			if (db[i].link == "" || db[i].link == null) {
				newOutline += " <small'>" +  db[i].display + "</small></SPAN></SPAN>" + "<BR>"	// no link, just a listed item
			} else {
                 if (db[i].occurances > 0)	{
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><small>" + db[i].display + "&nbsp;&nbsp;("
 + db[i].occurances + ")</small></A></SPAN></SPAN><BR>"
			} else {
				newOutline += " <A HREF=\"" + db[i].URL + "\" TARGET=\"" + displayTarget + "\" onMouseOver=\"window.status=\'" + db[i].statusMsg + "\';return true;\"><small'>" + db[i].display + "</small></A></SPAN></SPAN><BR>"
			}
			}
		prevIndentDisplayed = currIndent
		showMyDaughter = expanded
		if (db.length > 25) {
			document.write(newOutline)
			newOutline = ""
		}
	}
}
document.write(newOutline)
// end -->

</SCRIPT>
</BODY>
</html>
